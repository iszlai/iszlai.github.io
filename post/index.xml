<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on iszlai - data,coffee and code</title>
    <link>http://iszlai.github.io/post/</link>
    <description>Recent content in Posts on iszlai - data,coffee and code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Jan 2017 17:45:27 +0100</lastBuildDate>
    <atom:link href="http://iszlai.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>2017 week 04 in programming</title>
      <link>http://iszlai.github.io/post/2017_week_04_in_programming/</link>
      <pubDate>Sun, 22 Jan 2017 17:45:27 +0100</pubDate>
      
      <guid>http://iszlai.github.io/post/2017_week_04_in_programming/</guid>
      <description>

&lt;h2 id=&#34;the-line-of-death-https-textslashplain-com-2017-01-14-the-line-of-death&#34;&gt;&lt;a href=&#34;https://textslashplain.com/2017/01/14/the-line-of-death/&#34;&gt; The Line of Death &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In web browsers, the browser itself usually fully controls the top of the window, while pixels under the top are under control of the site. If a user trusts pixels above the line of death, the thinking goes, they&amp;rsquo;ll be safe, but if they can be convinced to trust the pixels below the line, they&amp;rsquo;re gonna die. The bigger problem is that some attacker data is allowed above the LoD; while trusting the content below the LoD will kill your security, there are also areas of death above the line. &amp;ldquo;It&amp;rsquo;s a picture of an IE7 browser running on Windows Vista in the transparent Aero Glass theme with a page containing a JPEG of an IE7 browser running on Windows XP in the Luna aka Fisher Price theme?&amp;rdquo; I pointed out. Personally, my favorite approach was Tyler Close&amp;rsquo;s idea that the browser should use PetNames for site identity- think of them as a Gravatar icon for salted certificate hashes- not only would they make every HTTPS site&amp;rsquo;s identity look unique to each user, but this could also be used as a means of detecting fraudulent or misissued certificates. One enterprising security tester in Windows made a visually-perfect spoofing site of Paypal, where even the user gestures that displayed the ephemeral browser UI were intercepted and fake indicators were shown. Historically, some operating systems have attempted to mitigate the problem by introducing a secure user gesture that always shows trusted UI, but such measures tend to confuse users and often get &amp;ldquo;Optimized away&amp;rdquo; when the UX team&amp;rsquo;s designers get ahold of the product.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;i-analyzed-2tb-of-code-to-build-an-index-of-the-most-common-words-in-programming-languages-https-anvaka-github-io-common-words-lang-js&#34;&gt;&lt;a href=&#34;https://anvaka.github.io/common-words/#?lang=js&#34;&gt; I analyzed ~2TB of code to build an index of the most common words in programming languages &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;naughty-strings-a-list-of-strings-likely-to-cause-issues-as-user-input-data-https-github-com-minimaxir-big-list-of-naughty-strings&#34;&gt;&lt;a href=&#34;https://github.com/minimaxir/big-list-of-naughty-strings&#34;&gt; Naughty Strings: A list of strings likely to cause issues as user-input data &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The Big List of Naughty Strings is an evolving list of strings which have a high probability of causing issues when used as user-input data. The Big List of Naughty Strings is intended to help reveal such issues. Txt consists of newline-delimited strings and comments which are preceded with #. The comments divide the strings into sections for easy manual reading and copy/pasting into input forms. Please do not send pull requests with very-long strings, as that makes the list much more difficult to view. The Big List of Naughty Strings is intended to be used for software you own and manage. Some of the Naughty Strings can indicate security vulnerabilities, and as a result using such strings with third-party software may be a crime. The Big List of Naughty Strings is not a fully-comprehensive substitute for formal security/penetration testing for your service.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;django-2-0-will-not-support-python-2-https-github-com-django-django-pull-7867-files&#34;&gt;&lt;a href=&#34;https://github.com/django/django/pull/7867/files&#34;&gt; Django 2.0 will not support Python 2 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;code-that-doesn-t-exist-is-the-code-you-don-t-need-to-debug-https-medium-com-fagnerbrack-code-that-dont-exist-is-the-code-you-don-t-need-to-debug-88985ed9604&#34;&gt;&lt;a href=&#34;https://medium.com/@fagnerbrack/code-that-dont-exist-is-the-code-you-don-t-need-to-debug-88985ed9604&#34;&gt; Code That Doesn&amp;rsquo;t Exist Is The Code You Don&amp;rsquo;t Need To Debug &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The less code we have the less complexity we need to handle and the fewer concerns we need to take care of. The important aspect is the response contains more data than what the code actually uses. There&amp;rsquo;s no unused response in the testThe dataset won&amp;rsquo;t be huge, so it&amp;rsquo;s easier to reason about itIf the code starts requiring more data from the response because of another test on the same function, the test will fail and we can start adding the rest of the response on an ad-hoc basisIf we always change code by changing the tests first, when the code starts requiring fewer data, we will always be removing it from the tests first in order to keep the minimum amount of code necessary to test itTDD forces us to write the minimum amount of code that satisfies a use case. In the last example, if we had used TDD it would have forced us to write the minimum amount of code in the dataset until we needed more data. The act of deleting code helps drive the system to a state where there&amp;rsquo;s only code that is necessary, a state where there&amp;rsquo;s less Software Entropy. Removing useless code should be rewardableBesides complexity, useless code can also represent part of a functionality that doesn&amp;rsquo;t provide any value. What we need is to reinforce the culture of removing code, for that the code that doesn&amp;rsquo;t exist is the code you don&amp;rsquo;t need to worry about.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-discord-stores-billions-of-messages-https-blog-discordapp-com-how-discord-stores-billions-of-messages-7fa6ec7ee4c7-fdhp3rxlo&#34;&gt;&lt;a href=&#34;https://blog.discordapp.com/how-discord-stores-billions-of-messages-7fa6ec7ee4c7#.fdhp3rxlo&#34;&gt; How Discord Stores Billions of Messages &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Voice chat heavy Discord servers send almost no messages. Private text chat heavy Discord servers send a decent number of messages, easily reaching between 100 thousand to 1 million messages a year. Large public Discord servers send a lot of messages. We looked at the largest channels on Discord and determined if we stored about 10 days of messages within a bucket that we could comfortably stay under 100MB. Buckets had to be derivable from the message id or a timestamp. We believe this will continue to work for a long time but as Discord continues to grow there is a distant future where we are storing billions of messages per day. We went from over 100 million total messages to more than 120 million messages a day, with performance and stability staying consistent. In a follow-up to this post we will explore how we make billions of messages searchable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;caching-at-reddit-https-redditblog-com-2017-1-17-caching-at-reddit&#34;&gt;&lt;a href=&#34;https://redditblog.com/2017/1/17/caching-at-reddit/&#34;&gt; Caching at Reddit &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;At Reddit, we cache a wide variety of things, including database objects, query results, and memoization of function calls. The cache key is generated based on the contents of the context provided to the template-if that changes, a cache miss happens and the resulting template is re-cached. Our memoize cache provides an easy way for developers to cache the results of function calls. For the cached /r/all results we talked about earlier sets are replicated to all available caches, and reads happen from random caches with failover going to a different random cache. Cache requests for the trophy list for a user would first go to the new caches, a miss would occur, and the data would be retrieved from the old caches and added to the new ones. The subsequent update of the new trophies goes to the new cache, but the old cache is left un-updated. Though Reddit still has a relatively small engineering team, we do manage to make a lot of changes, and cache patterns can certainly change over the course of months.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;reading-uber-s-internal-emails-uber-bug-bounty-report-worth-10-000-http-blog-pentestnepal-tech-post-149985438982-reading-ubers-internal-emails-uber-bug-bounty&#34;&gt;&lt;a href=&#34;http://blog.pentestnepal.tech/post/149985438982/reading-ubers-internal-emails-uber-bug-bounty&#34;&gt; Reading Uber’s Internal Emails [Uber Bug Bounty report worth $10,000] &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a small proof of concept regarding &amp;ldquo;Reflective Cross-Site Scripting [ R-XSS ]&amp;rdquo; which I had found on Ebay. I am not an active participant in bug bounty programs, but one day I had finished all my office works so I was surfing on Facebook and received a message from my brother, Samir, asking for advice regarding some musical instruments. Once on eBay, I logged into the site to view details, and suddenly noticed &amp;ldquo;Help &amp;amp; Contact&amp;rdquo; menu, I followed that menu and went to &amp;ldquo;Customer Service&amp;rdquo; page where I saw a search field, I decided to check for &amp;ldquo;Cross-Site Scripting [ XSS ]&amp;rdquo; vulnerability and unexpectedly found POST type R-XSS. Testing For XSS. &amp;ldquo;As all security researchers do, I also have certain pathways to find vulnerabilities. I always use &amp;lsquo;&amp;gt;Test12345&amp;lt;&amp;rdquo; as it contains number, letter and syntax. This allows me to see how a website handles user inputs. Some questions like &amp;ldquo;Is the user input sanitized? how sensitive is user input?&amp;rdquo; can be answered from this idea.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-do-i-declare-a-function-pointer-in-c-http-fuckingfunctionpointers-com&#34;&gt;&lt;a href=&#34;http://fuckingfunctionpointers.com/&#34;&gt; How do I declare a function pointer in C? &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;pixie-a-small-fast-native-lisp-with-magical-powers-http-pixielang-org&#34;&gt;&lt;a href=&#34;http://pixielang.org/&#34;&gt; Pixie - A small, fast, native lisp with &amp;ldquo;magical&amp;rdquo; powers &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Pixie is a lightweight lisp suitable for both general use as well as shell scripting. It is written in RPython and as such supports a fairly fast GC and an amazingly fast tracing JIT. Pixie implements its own virtual machine. If you like Clojure, but are unhappy with the start-up time, or if you want something outside of the JVM ecosystem, then Pixie may be for you. Make build with jit will compile Pixie using the PyPy toolchain. The guts are written in RPython, just like the guts of most lisp interpreters are written in C. At runtime the only thing that is interpreted is the Pixie bytecode, that is until the JIT kicks in&amp;hellip;. What&amp;rsquo;s this bit about &amp;ldquo;Magical powers&amp;rdquo;First of all, the word &amp;ldquo;Magic&amp;rdquo; is in quotes as it&amp;rsquo;s partly a play on words, pixies are small, light and often considered to have magical powers. The performance penalty of such a polymorphic call is completely removed by the RPython generated JIT. Influencing the JIT from user code. The origins of Pixie &amp;ldquo;I&amp;rsquo;ve always had it in the back of my head that a lisp on RPython would be a good project.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;announcing-rust-language-server-alpha-release-http-www-jonathanturner-org-2017-01-rls-alpha-release-html&#34;&gt;&lt;a href=&#34;http://www.jonathanturner.org/2017/01/rls-alpha-release.html&#34;&gt; Announcing Rust Language Server Alpha Release &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The RLS has now reached a level of maturity where it should be able to run against most Cargo-based Rust projects. Rather than leaving each editor plugin to have to parse and understand the types in your program and provide you with capabilities like refactoring, the RLS centralizes all this logic and provides it to the editor via a standard language server protocol. The alpha release of the RLS has been run successfully on Linux, Mac, and Windows. Step 3: Set the RLS ROOT environment variable to point to where you checked out the RLS:. export RLS ROOT=/Source/rls. The current version of the RLS is built from a combination of two tools: racer and the Rust compiler. In the future, as we improve the rls integration with the main Rust tools, this will no longer be an issue. Contribute an editor plugin - there are already at least six plugins that follow the Language Server Protocol that the RLS uses, each in its own state of completion.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;trying-to-build-a-mac-os-8-application-on-macos-sierra-featuring-think-c-beos-codewarrior-powerplant-and-other-mac-programming-nostalgia-from-the-1990s-https-www-cocoawithlove-com-blog-porting-from-macos8-to-sierra-html&#34;&gt;&lt;a href=&#34;https://www.cocoawithlove.com/blog/porting-from-macos8-to-sierra.html&#34;&gt; Trying to build a Mac OS 8 application on macOS Sierra (featuring Think C, BeOS, CodeWarrior, PowerPlant and other Mac programming nostalgia from the 1990s). &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Motorola completely fumbled the Mac OS X transition and Mac programmers largely moved to Apple&amp;rsquo;s Project Builder. PowerPlant requires the Mac OS X 10.6 SDK or earlier to build - it won&amp;rsquo;t build against the 10.7 SDK and certainly won&amp;rsquo;t against the 10.12 SDK. The last versions of Xcode to include the 10.6 SDK were the Xcode 4.3 series for Mac OS X 10.7 Lion. Unlike PowerPlant - which had been updated for Mac OS X - I had not tried to run or compile the Mines application since Mac OS 8.5.1 back in 1999. I&amp;rsquo;ve never ported any apps from classic Mac OS to Mac OS X so I don&amp;rsquo;t know how smooth it will be. Of course, none of this has ever applied to Mac OS X. All the HLock, MoveHHi, MoreMasterPointers and other related Handle functions have always been no-ops on Mac OS X and Handles are now non-relocatable, relying on paging and better heap allocators to mediate fragmentation. Remember that you still need to obtain a copy of the Mac OS X 10.6 SDK and modify the Mac OS X platform Info.plist file or you&amp;rsquo;ll get errors about a missing SDK when you try to build. Updating my own Mines application code for PowerPlant and Mac OS changes required less than 20 minutes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;rethinkdb-why-we-failed-http-www-defstartup-org-2017-01-18-why-rethinkdb-failed-html&#34;&gt;&lt;a href=&#34;http://www.defstartup.org/2017/01/18/why-rethinkdb-failed.html&#34;&gt; RethinkDB: why we failed &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In the HN discussion thread people proposed many reasons for why RethinkDB failed, from inexplicable perversity of human nature and clever machinations of MongoDB&amp;rsquo;s marketing people, to failure to build an experienced go-to-market team, to lack of numeric type support beyond 64-bit float. New companies aren&amp;rsquo;t getting built on top of Oracle, so there is a window of opportunity to build a new infrastructure company. If we build a product that captures some of that market, we&amp;rsquo;ll end up building a very successful company. We set out to build a good database system, but users wanted a good way to do X. It&amp;rsquo;s not that we didn&amp;rsquo;t try to ship quickly, make RethinkDB fast, and build the ecosystem around it to make doing useful work easy. We had no intuition for products or markets, so we&amp;rsquo;d go through the motions of building a company without actually understanding what we were doing. Engineers love building developer tools, so they badly want developer tools companies to thrive. If you do set out to build a developer tools company, tread carefully.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-to-make-a-neural-network-intro-to-deep-learning-https-www-youtube-com-watch-v-p69khggr1jo&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=p69khggr1Jo&#34;&gt; How to Make a Neural Network - Intro to Deep Learning &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;How do we learn? In this video, I&amp;rsquo;ll discuss our brain&amp;rsquo;s biological neural network, then we&amp;rsquo;ll talk about how an artificial neural network works. We&amp;rsquo;ll create our own single layer feedforward network in Python, demo it, and analyze the implications of our results. This is the 2nd weekly video in my intro to deep learning series. Github.io/2015/07/27&amp;hellip;. The guy at the beginning is my Jeet Kune Do instructor. Special thanks Catherine Olsson of OpenAI for being the hook to my backpropagation rap.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;toolkits-for-the-mind-how-tech-companies-are-shaped-by-programming-languages-https-www-technologyreview-com-s-536356-toolkits-for-the-mind&#34;&gt;&lt;a href=&#34;https://www.technologyreview.com/s/536356/toolkits-for-the-mind/&#34;&gt; Toolkits for the Mind: How Tech Companies Are Shaped By Programming Languages &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Software developers as a species tend to be convinced that programming languages have a grip on the mind strong enough to change the way you approach problems-even to change which problems you think to solve. If you want to know why Facebook looks and works the way it does and what kinds of things it can do for and to us next, you need to know something about PHP, the programming language Mark Zuckerberg built it with. Among programmers, PHP is perhaps the least respected of all programming languages. The programming language PHP ­created and sustains Facebook&amp;rsquo;s move-fast, hacker-oriented corporate culture. Programs written with a type system tend to be far more reliable than those written without one-useful when a program might trade $30 billion on a big day. The language&amp;rsquo;s rigor is like catnip to some people giving Jane Street an unusual advantage in the tight hiring market for programmers. Programming-language designer Guido van Rossum, who spent seven years at Google and now works at Dropbox, says that once a software company gets to be a certain size, the only way to stave off chaos is to use a language that requires more from the programmer up front.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;i-made-a-crash-course-on-web-security-for-people-who-have-never-dealt-with-it-before-http-www-sohamkamani-com-blog-2017-01-16-web-security-essentials&#34;&gt;&lt;a href=&#34;http://www.sohamkamani.com/blog/2017/01/16/web-security-essentials/&#34;&gt; I made a crash course on web security, for people who have never dealt with it before &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Securing a web application is hard, but it&amp;rsquo;s also extremely important. There is so much to learn, and the learning curve is so steep, that newcomers to web development are often overwhelmed when they look at all that goes into making a simple login authenticated website. I made this crash course because I too faced a lot of trouble in learning and implementing most of the security features that come with standard web applications. This was because most of the resources on these topics are scattered and explained in a way not suitable for people just getting started. This course is aimed at newcomers who want to get up to speed with some of the most basic and important concepts like password management, session cookies, and some of the most common types of attacks. All posts are kept short, contain examples, and can be completed in a few days. These topics are compiled based on my experience in web development.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;ranges-the-stl-to-the-next-level-http-arne-mertz-de-2017-01-ranges-stl-next-level&#34;&gt;&lt;a href=&#34;http://arne-mertz.de/2017/01/ranges-stl-next-level/&#34;&gt; Ranges: the STL to the Next Level &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Ranges provide a different approach to the STL that solves these two issues in a very elegant manner. Ranges were already used in some way by code using the STL before the Range concept was defined, but clumsily. Most of the time, what you are really trying to represent is a range, which corresponds better to the level of abstraction of your code. Such algorithms reuse the STL versions in their implementation, by forwarding the begin and the end of the range to the native STL versions. A range adaptor is an object that can be combined with a range in order to produce a new range. An important thing to note is that the ranges resulting from associations with range adaptors, although they are merely view over the ranges they adapt and don&amp;rsquo;t actually store elements, answer to the range interface so they are themselves ranges. Ranges raise the level of abstraction of code using the STL, therefore clearing up code using the STL from superfluous iterators.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-lost-art-of-3d-rendering-without-shaders-http-machinethink-net-blog-3d-rendering-without-shaders&#34;&gt;&lt;a href=&#34;http://machinethink.net/blog/3d-rendering-without-shaders/&#34;&gt; The lost art of 3D rendering without shaders &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The model is made up of triangles because triangles are easy to draw. A vertex describes an position in 3D space, but also the color of the triangle at that vertex and a normal vector for lighting calculations. To implement the 3D model for the cube we just need to provide a list of these triangles. The cube not only has vertices and triangles that determine its shape, but it also has a position in the 3D world, a scale, and an orientation that is given by three rotation angles. Func render() // 3: Take the cube, place it in the 3D world, adjust the viewpoint for // the camera, and project everything to two-dimensional triangles. In math terms, we need to project our triangles from 3D to 2D somehow. The depth buffer makes sure that a triangle that is further away does not obscure a triangle that is closer to the camera.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-a-robot-got-super-mario-64-and-portal-running-on-an-snes-http-arstechnica-com-gaming-2017-01-how-a-robot-got-super-mario-64-and-portal-running-on-an-snes&#34;&gt;&lt;a href=&#34;http://arstechnica.com/gaming/2017/01/how-a-robot-got-super-mario-64-and-portal-running-on-an-snes/&#34;&gt; How a robot got Super Mario 64 and Portal “running” on an SNES &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Can you really, playably emulate games like Super Mario 64 and Portal on a stock standard SNES only by hacking in through the controller ports? The answer is still no, but for a brief moment at this week&amp;rsquo;s Awesome Games Done Quick speedrunning marathon, it certainly looked like the impossible finally became possible. TASBot moved on to a few &amp;ldquo;Total control runs,&amp;rdquo; exploiting known glitches in Super Mario Bros. The method was taken to ridiculous extremes last year, when TASbot managed to &amp;ldquo;Beat&amp;rdquo; Super Mario Bros. After a few minutes of setup, the Zelda screen faded out, then faded back in on a bordered window with an ersatz logo for the &amp;ldquo;Super N64.&amp;rdquo; Without any forthcoming explanation from the runners on stage, TASBot started apparently playing through a glitch-filled speedrun of Super Mario 64 on the Super NES, following it up with a similar glitch-filled speedrun through Valve&amp;rsquo;s PC classic Portal. Streaming audio to the NES. To unwind how the TASBot team &amp;ldquo;Played&amp;rdquo; relatively modern games through 25-year-old SNES hardware, we need to go back to China&amp;rsquo;s Geekpwn hacking conference a few months ago. After taking total control of the SNES through a known Link to the Past glitch, TASBot essentially turns the SNES into a dumb pipe for video data. While the AGDQ SM64 and Portal TASBot runs were really just pre-recorded video and audio streaming through the SNES, Cecil said it would be theoretically possible to let a speedrunner actually play those games live on the SNES. Using a fixed, &amp;ldquo;Good enough&amp;rdquo; palette of 256 colors and no pre-processing, TASBot would be able to pipe through 10 fps gameplay with about 100 ms of latency, he said.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;webpack-2-is-finally-here-https-github-com-webpack-webpack-releases&#34;&gt;&lt;a href=&#34;https://github.com/webpack/webpack/releases&#34;&gt; Webpack 2 is finally here &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-first-few-chapters-of-my-free-book-on-implementing-programming-languages-are-up-now-http-www-craftinginterpreters-com&#34;&gt;&lt;a href=&#34;http://www.craftinginterpreters.com/&#34;&gt; The first few chapters of my free book on implementing programming languages are up now &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This book contains everything you need to implement a full-featured, efficient scripting language. You&amp;rsquo;ll learn both high-level concepts around parsing and semantics and gritty details like bytecode representation and garbage collection. Starting from main(), you&amp;rsquo;ll build a language that features rich syntax, dynamic typing, garbage collection, lexical scope, first-class functions, closures, classes, and inheritance. I got bitten by the language bug eight years ago when I was on paternity leave with a lot of free time between middle of the night feedings. I&amp;rsquo;ve cobbled together a number of languages of various ilk before worming my way into an honest-to-God full-time programming language job. Before I fell in love with languages, I was a game developer for eight years at Electronic Arts. If you like the book, you&amp;rsquo;ll probably like it too.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;everything-you-need-to-know-about-http-security-headers-https-blog-appcanary-com-2017-http-security-headers-html&#34;&gt;&lt;a href=&#34;https://blog.appcanary.com/2017/http-security-headers.html&#34;&gt; Everything you need to know about HTTP security headers &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This article explains what secure headers are and how to implement these headers in Rails, Django, //blog. Js Use helmet Go Use unrolled/secure Nginx add header X-XSS-Protection &amp;ldquo;1; mode=block&amp;rdquo;; Apache Header always set X-XSS-Protection &amp;ldquo;1; mode=block&amp;rdquo; I want to know more. Content Security Policy can be thought of as much more advanced version of the X-XSS-Protection header above. If you&amp;rsquo;re an intrepid reader and went ahead and checked the headers appcanary.com returns2, you&amp;rsquo;ll see that we don&amp;rsquo;t have CSP implemented yet. The HSTS header solves the meta-problem: how do you know if the person you&amp;rsquo;re talking to actually supports encryption? Js Use helmet Go Use unrolled/secure Nginx add header X-Frame-Options &amp;ldquo;deny&amp;rdquo;; Apache Header always set X-Frame-Options &amp;ldquo;deny&amp;rdquo; I want to know more X-Content-Type-Options X-Content-Type-Options: nosniff; Why? The X-Content-Type-Options headers exist to tell the browser to shut up and set the damn content type to what I tell you, thank you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;and-that-kids-is-why-we-call-it-a-patch-https-twitter-com-codealike-status-819990490774904833&#34;&gt;&lt;a href=&#34;https://twitter.com/Codealike/status/819990490774904833&#34;&gt; And that, kids, is why we call it a &amp;ldquo;Patch&amp;rdquo; &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-practice-of-programming-18-years-later-https-blog-kjamistan-com-the-practice-of-programming-18-years-later&#34;&gt;&lt;a href=&#34;https://blog.kjamistan.com/the-practice-of-programming-18-years-later/&#34;&gt; The Practice of Programming: 18 Years Later &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Over the new year holiday time I had a chance to get away from it all, and snuck up to Finland to sit in a lodge on the Gulf of Finland, sip coffee, take saunas and read. I brought along a few books, the only programming one being Brian W. Kernighan and Rob Pike&amp;rsquo;s &amp;ldquo;The Practice of Programming.&amp;rdquo; You want to provide the owner with as good a test case as you can manage. As a fan of testing, this chapter stood out; not just for it&amp;rsquo;s methodical evaluation of how, when and why to write tests, but also it&amp;rsquo;s use of data validation and test automation. It&amp;rsquo;s easy to delude yourself about how carefully you are testing, so try to ignore the code and think of the hard cases, not the easy ones. To quote Don Knuth describing how he creates tests for the TEX formatter, &amp;ldquo;I get into the meanest, nastiest frame of mind that I can manage, and I write the nastiest [testing] code I can think of; then I turn around and embed that in even nastier constructions that are almost obscene.&amp;rdquo; How many times have I written the obvious test instead of devoting a day or a few hours figuring out how to break my own code? 2. Code to roll your own RegEx parser in C. Telnetting from machine to machine to copy files and using checksum to test if the copy was properly performed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-problem-with-amp-https-80x24-net-post-the-problem-with-amp&#34;&gt;&lt;a href=&#34;https://80x24.net/post/the-problem-with-amp/&#34;&gt; The Problem With AMP &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Google&amp;rsquo;s Accelerated Mobile Pages or AMP is a markup language similar to HTML that allows publishers to write mobile optimized content that loads &amp;ldquo;Instantly&amp;rdquo;. The goal of the AMP project is to make websites faster by essentially disabling external JavaScript and caching all pages on Google&amp;rsquo;s CDN. While the intentions of the project seem good, there are a number of issues with AMP that both promote lock-in and provide a poor user experience. These bugs are simply unacceptable for a standard that has been in use and promoted by Google for over a year, and there have been numerous complaints from users about AMP. The largest complaint by far is that the URLs for AMP links differ from the canonical URLs for the same content, making sharing difficult. Clicking on an AMP link feels like you never even leave the search page, and links to AMP content are displayed prominently in Google&amp;rsquo;s news carousel. Google has the ability to further change the AMP HTML specification to keep publishers in their ecosystem. Despite touting AMP HTML as an open standard, every one of the AMP Project&amp;rsquo;s core developers appears to be a Google employee. The AMP HTML Specification states that all AMP HTML pages must load a JavaScript file from &lt;a href=&#34;https://cdn&#34;&gt;https://cdn&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2017 week 3 in programming</title>
      <link>http://iszlai.github.io/post/2017_week_03_in_programming/</link>
      <pubDate>Sun, 15 Jan 2017 17:45:18 +0100</pubDate>
      
      <guid>http://iszlai.github.io/post/2017_week_03_in_programming/</guid>
      <description>

&lt;h2 id=&#34;trello-is-being-acquired-by-atlassian-http-blog-trello-com-trello-atlassian&#34;&gt;&lt;a href=&#34;http://blog.trello.com/trello-atlassian&#34;&gt; Trello Is Being Acquired By Atlassian &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;We wanted Trello to be fluid and adaptable to a huge range of problems that all revolved around getting people on the same page. We&amp;rsquo;ve been humbled and excited to see the millions of use cases for Trello around the world, and we build the product each day proudly knowing we&amp;rsquo;re helping teams do great things. As part of Atlassian, Trello will be able to leverage investments in R&amp;amp;D that will enhance the product in meaningful ways. We are certain that Atlassian understands the unique and novel reasons why Trello is so successful and well-loved. In short: you can expect Trello to become even more awesome and more fun than it is today. Thank you to all the Trello users out there who have helped make Trello what it is today. Your passion, feedback, and love for Trello inspire all of us to continue to make Trello more useful and delightful.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;things-you-probably-didn-t-know-you-could-do-with-chrome-s-developer-console-https-medium-freecodecamp-com-10-tips-to-maximize-your-javascript-debugging-experience-b69a75859329-8mba7zmqr&#34;&gt;&lt;a href=&#34;https://medium.freecodecamp.com/10-tips-to-maximize-your-javascript-debugging-experience-b69a75859329#.8mba7zmqr&#34;&gt; Things you probably didn’t know you could do with Chrome’s Developer Console &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;You can again go ahead and select a particular element among them by specifying the position of that element in the array. &amp;lsquo;.className&amp;rsquo;) will give you all the elements that have the class className, and $$(&amp;lsquo;.className&amp;rsquo;) and $$(&amp;lsquo;.className&amp;rsquo;) will give you the first and the second element respectively. Find Events Associated with an Element in the DOMWhile debugging, you must be interested in finding the event listeners bound to an element in the DOM. The developer console makes it easier to find these. Monitor EventsIf you want to monitor the events bound to a particular element in the DOM while they are executed, you can this in the console as well. MonitorEvents($(&amp;lsquo;selector&amp;rsquo; will monitor all the events associated with the element with your selector, then log them in the console as soon as they&amp;rsquo;re fired. Inspect($(&amp;lsquo;selector&amp;rsquo; will inspect the element that matches the selector and take you to the Elements tab in the Chrome Developer Tools. List the Properties of an ElementIf you want to list all the properties of an element, you can do that directly from the Console.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;debugging-mechanism-in-intel-cpus-allows-seizing-control-via-usb-port-https-www-scmagazine-com-debugging-mechanism-in-intel-cpus-allows-seizing-control-via-usb-port-article-630480&#34;&gt;&lt;a href=&#34;https://www.scmagazine.com/debugging-mechanism-in-intel-cpus-allows-seizing-control-via-usb-port/article/630480/?&#34;&gt; Debugging mechanism in Intel CPUs allows seizing control via USB port &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Researchers from Positive Technologies have revealed that some new Intel CPUs contain a debugging interface, accessible via USB 3.0 ports, that can be used to obtain full control over a system and perform attacks that are undetectable by current security tools. The JTAG debugging interface, now accessible via USB, has the potential to enable dangerous and virtually undetectable attacks. On older Intel CPUs, accessing JTAG required connecting a special device to a debugging port on the motherboard. Starting with the Skylake processor family in 2015, Intel introduced the Direct Connect Interface which provides access to the JTAG debugging interface via common USB 3.0 ports. Goryachy and Ermolov speculated that this mechanism in Intel CPUs could lead to a whole new class of Bad USB-like attacks, but at a deeper and even more dangerous level than their predecessor. SC asked Goryachy if he would compare this vulnerability to Stuxnet, to which he said: &amp;ldquo;This mechanism can be used on a hacked system regardless of the OS installed. Stuxnet was infecting only Windows machines, meanwhile the DCI can be used on any system with Intel U-series processor. This series is used on laptops and NUC. As of today, no publicly available security system will detect it.&amp;rdquo; Goryachy told SC, &amp;ldquo;We have reported this case to Intel. As of today, this mechanism can be exploited only on Intel U-series processors.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;simple-and-terrifying-encryption-story-https-blog-elpassion-com-simple-and-terrifying-encryption-story-c1f1d6707c07-kmlwibas7&#34;&gt;&lt;a href=&#34;https://blog.elpassion.com/simple-and-terrifying-encryption-story-c1f1d6707c07#.kmlwibas7&#34;&gt; Simple and Terrifying Encryption Story &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;ProblemI wanted to build an app where users can encrypt and decrypt messages. AES seemed to be a reasonable choice for such a symmetric encryption, so my first step was to find a proper AES library. SolutionI was programming in Ruby, so I did what every Rubyist would do - I googled &amp;ldquo;Ruby gem aes&amp;rdquo;. I wrote a test for decoding messages with wrong keys. To be more specific, I replaced the key first char with some other chars. As a result it is possible to decrypt messages with almost any key. The problem is that it&amp;rsquo;s the first Google search result for &amp;ldquo;Aes gem&amp;rdquo; or &amp;ldquo;Ruby aes gem&amp;rdquo; query and we don&amp;rsquo;t question top Google results very often.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;learn-opengl-extensive-tutorial-resource-for-learning-modern-opengl-https-learnopengl-com&#34;&gt;&lt;a href=&#34;https://learnopengl.com/&#34;&gt; Learn OpenGL, extensive tutorial resource for learning Modern OpenGL &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;does-anyone-else-have-trouble-finishing-their-side-programming-projects-http-www-jacksimpson-co-finishing-being-productive-busy&#34;&gt;&lt;a href=&#34;http://www.jacksimpson.co/finishing-being-productive-busy/&#34;&gt; Does anyone else have trouble finishing their side-programming projects? &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;If you&amp;rsquo;re always starting interesting projects and not finishing, then no matter how hard you work, you&amp;rsquo;re just busy, not productive. In a lot of ways they are not a waste - I definitely learn a lot from these projects and gain a new skill. The same applies to the projects we work on: even if you dedicate many hours to a task and it&amp;rsquo;s 80% of the way there, if you never finish then no-one will care. Now I have written out a list of every one of my projects, and broken them down into steps I can attack piece-by-piece, and I focus on making sure that every day I cross-off at least one item, so I&amp;rsquo;m getting closer to moving a project from my &amp;lsquo;to-do&amp;rsquo; list, and into my &amp;lsquo;finished&amp;rsquo; list. What is the minimal state of completion this project needs to reach for me to consider it a success and having been worth my time? If I cannot realistically commit to the amount of time required to bring the project to that state, am I better off putting my energy into finishing projects that I am currently working on? Taking on a project that you do not have the time to finish is going to burn more bridges than telling people you don&amp;rsquo;t have the time to contribute. I have a list of projects that every day I am whittling down, and I intend to follow up this post at the end of the year with a list of my projects that are finally complete.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;stackoverflow-a-post-mortem-on-the-recent-developer-story-information-leak-http-meta-stackoverflow-com-questions-340960-a-post-mortem-on-the-recent-developer-story-information-leak&#34;&gt;&lt;a href=&#34;http://meta.stackoverflow.com/questions/340960/a-post-mortem-on-the-recent-developer-story-information-leak&#34;&gt; StackOverflow | A Post-Mortem on the Recent Developer Story Information Leak &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The information wasn&amp;rsquo;t actually printed to browsers, but was present in the page&amp;rsquo;s HTML source markup. Discovery of the information was possible only through very specific searches containing the user&amp;rsquo;s email address or phone number. Our second priority was to get in touch with major search engines in order to get the accidentally disclosed information out of their indexes. Personally-identifiable information is something that every developer needs to handle with care. It&amp;rsquo;s extremely important, if not critical, to know when you&amp;rsquo;re working with something that in any way transmits personally-identifiable information in any way. Identification of PII in the code base and database, so developers immediately know if the code they&amp;rsquo;re working with stores or transmits PII and precisely the kind of information that needs to be considered. We take our responsibility as custodians of your information and trust very seriously; now that we&amp;rsquo;ve taken every possible measure to mitigate any potential inconvenience to those affected, we feel that we owe it to you to be as transparent about what happened as possible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;chris-lattner-joins-tesla-https-www-tesla-com-blog-welcome-chris-lattner&#34;&gt;&lt;a href=&#34;https://www.tesla.com/blog/welcome-chris-lattner&#34;&gt; Chris Lattner Joins Tesla &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;We would like to welcome Chris Lattner, who will join Tesla as our Vice President of Autopilot Software. Chris&amp;rsquo;s reputation for engineering excellence is well known. He comes to Tesla after 11 years at Apple where he was primarily responsible for creating Swift, the programming language for building apps on Apple platforms and one of the fastest growing languages for doing so on Linux. Prior to Apple, Chris was lead author of the LLVM Compiler Infrastructure, an open source umbrella project that is widely used in commercial products and academic research today. As Chris joins Tesla, we would like to give a special thanks to Jinnah Hosein, SpaceX&amp;rsquo;s Vice President of Software, who has been serving a dual role as the interim Vice President of Tesla Autopilot Software and will now be heading back to SpaceX full-time. We would like to thank Jinnah for the efforts needed to achieve excellence in both roles, David Nister, our Vice President of Autopilot Vision, and the team for their exceptional work in advancing Autopilot. We are very excited that Chris is joining Tesla to lead our Autopilot engineering team and accelerate the future of autonomous driving.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;disassembling-jak-daxter-which-has-one-of-the-best-game-engine-ever-created-http-www-codersnotes-com-notes-disassembling-jak&#34;&gt;&lt;a href=&#34;http://www.codersnotes.com/notes/disassembling-jak/&#34;&gt; Disassembling Jak &amp;amp; Daxter (which has one of the best Game Engine ever created) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The only part of the game not written in GOAL is the loader/linker, which is written in C++. This is the equivalent of their DLL loader; it&amp;rsquo;s just a simple stub program to load the rest. So where does the loader get its data from? First we need to examine the file formats used here. It&amp;rsquo;s not really fair to call this &amp;ldquo;Hotloading&amp;rdquo;, it&amp;rsquo;s really just &amp;ldquo;Loading&amp;rdquo;, as updating the game with new code/data is no different than loading it in the first place. These are loaded in-place by the loader, which makes loading very efficient. What we&amp;rsquo;re doing is loading the address of a function and storing it at an offset into the global symbol table. So that&amp;rsquo;s pretty much all there is to loading compiled GO files. You can disassemble the ELF loader to figure out the exact file format, and what with having the ELF symbols for the loader available, it&amp;rsquo;s not that hard to replicate the function of the loader ourselves.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;deeply-typed-programming-languages-response-to-the-dark-path-by-uncle-bob-http-typeinference-com-languages-2017-01-12-deeply-typed-programming-languages-html&#34;&gt;&lt;a href=&#34;http://typeinference.com/languages/2017/01/12/deeply-typed-programming-languages.html&#34;&gt; Deeply typed programming languages (response to The Dark Path by Uncle Bob) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Some months ago he wrote Type Wars, a post to defend static type systems are not really needed if you do TDD. Now he&amp;rsquo;s back. In his latest post, The Dark Path he brings new weapons for the dynamic languages enthusiasts to tell everyone else all these static type checks are useless. Uncle Bob is right saying there are multiple risks using many features of the programming languages. That&amp;rsquo;s the way we have to evaluate whether a programming language feature is appropriate or not. Obviously, if I&amp;rsquo;m just in the playground with a new language as Uncle Bob was with Swift and Kotlin, I&amp;rsquo;m quite far to experiment any benefit from the depth of the type system. In my experience, many programmers coming from dynamic languages see no benefit on static typing because of that: in the hundred lines they wrote following the language getting start guide, they saw no benefit from the type system. In summary, I&amp;rsquo;m really proud of walking on the dark path of deeply typed programming languages.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;chris-lattner-leaves-apple-https-lists-swift-org-pipermail-swift-evolution-week-of-mon-20170109-030063-html&#34;&gt;&lt;a href=&#34;https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20170109/030063.html&#34;&gt; Chris Lattner leaves Apple &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Update on the Swift Project Lead Chris Lattner clattner at apple.com Tue Jan 10 11:07:09 CST 2017 Since Apple launched Swift at WWDC 2014, the Swift team has worked closely with our developer community. When we made Swift open source and launched Swift.org we put a lot of effort into defining a strong community structure. This structure has enabled Apple and the amazingly vibrant Swift community to work together to evolve Swift into a powerful, mature language powering software used by hundreds of millions of people. I&amp;rsquo;m happy to announce that Ted Kremenek will be taking over for me as &amp;ldquo;Project Lead&amp;rdquo; for the Swift project, managing the administrative and leadership responsibility for Swift.org. I plan to remain an active member of the Swift Core Team, as well as a contributor to the swift-evolution mailing list. Working with many phenomenal teams at Apple to launch Swift has been a unique life experience. Swift is in great shape today, and Swift 4 will be a really strong release with Ted as the Project Lead. Note that this isn&amp;rsquo;t a change to the structure - just to who sits in which role - so we don&amp;rsquo;t expect it to impact day-to-day operations in the Swift Core Team in any significant way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;fast-haskell-competing-with-c-at-parsing-xml-http-chrisdone-com-posts-fast-haskell-c-parsing-xml&#34;&gt;&lt;a href=&#34;http://chrisdone.com/posts/fast-haskell-c-parsing-xml&#34;&gt; Fast Haskell: Competing with C at parsing XML &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In this post we&amp;rsquo;re going to look at parsing XML in Haskell, how it compares with an efficient C parser, and steps you can take in Haskell to build a fast library from the ground up. In the very limited benchmarks I&amp;rsquo;ve done it is typically just over 2x faster at parsing than Pugixml, where Pugixml is the gold standard for fast XML DOM parsers. C is really fast right? Like 100s of times faster than Haskell! It&amp;rsquo;s worth the risk. Using the Criterion benchmarking package, we can compare Hexml against the pretty old Haskell xml package. Case Bytes GCs Check 4kb parse 26,096 0 OK 42kb parse 65,696 0 OK 52kb parse 102,128 0 OK Benchmark xeno-memory-bench: FINISH Benchmark xeno-speed-bench: RUNNING&amp;hellip; benchmarking 4KB/hexml time 6.225 μs benchmarking 4KB/xeno time 10.34 μs. The first thing that should jump out at you is the allocations. Case Bytes GCs Check 4kb parse 1,160 0 OK 42kb parse 1,160 0 OK 52kb parse 1,472 0 OK Benchmark xeno-memory-bench: FINISH Benchmark xeno-speed-bench: RUNNING&amp;hellip; benchmarking 4KB/hexml time 6.190 μs benchmarking 4KB/xeno time 4.215 μs. Down to 4.215 μs. That&amp;rsquo;s not as fast as our pre-name-parsing 2.691 μs. But we had to pay something for the extra operations per tag. Benchmarking 1MB/hexml-dom time 1.225 ms 1.000 R² mean 1.239 ms std dev 25.23 μs benchmarking 1MB/xeno-sax time 1.206 ms 1.000 R² mean 1.213 ms std dev 14.58 μs benchmarking 1MB/xeno-dom time 2.768 ms 1.000 R² mean 2.801 ms std dev 41.10 μs. Tada! We matched Hexml, in pure Haskell, using safe accessor functions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-beginner-s-guide-to-the-many-different-ways-to-join-tables-in-sql-https-blog-jooq-org-2017-01-12-a-probably-incomplete-comprehensive-guide-to-the-many-different-ways-to-join-tables-in-sql&#34;&gt;&lt;a href=&#34;https://blog.jooq.org/2017/01/12/a-probably-incomplete-comprehensive-guide-to-the-many-different-ways-to-join-tables-in-sql/&#34;&gt; A beginner&amp;rsquo;s Guide to the many different ways to JOIN tables in SQL &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;SELECT * FROM generate series( &amp;lsquo;2017-01-01&amp;rsquo;::TIMESTAMP, &amp;lsquo;2017-01-01&amp;rsquo;::TIMESTAMP + INTERVAL &amp;lsquo;1 month -1 day&amp;rsquo;, INTERVAL &amp;lsquo;1 day&amp;rsquo; ) AS days(day) - You can always JOIN. ON true - to turn an syntactic INNER JOIN into a semantic CROSS JOIN JOIN departments AS d ON true - &amp;hellip; and then turn the CROSS JOIN back into an INNER JOIN - by putting the JOIN predicate in the WHERE clause: WHERE day &amp;gt;= d.created at. EQUI JOIN. Sometimes, e.g. in literature, you will hear the term EQUI JOIN where &amp;ldquo;EQUI&amp;rdquo; isn&amp;rsquo;t really meant as a SQL keyword, but just as a specific way of writing a special kind of INNER JOIN. In fact, it is weird that &amp;ldquo;EQUI&amp;rdquo; JOIN is the special case, because it&amp;rsquo;s what we&amp;rsquo;re doing most in SQL, also in OLTP applications where we simply JOIN by primary key / foreign key relationship. Convenient syntax: SELECT * FROM a LEFT JOIN b ON &lt;predicate&gt; - Cumbersome, equivalent syntax: SELECT a.&lt;em&gt;, b.&lt;/em&gt; FROM a JOIN b ON &lt;predicate&gt; - LEFT JOIN part UNION ALL SELECT a.&lt;em&gt;, NULL, NULL, &amp;hellip;, NULL FROM a WHERE NOT EXISTS - RIGHT JOIN part UNION ALL SELECT NULL, NULL, &amp;hellip;, NULL, b.&lt;/em&gt; FROM b WHERE NOT EXISTS. Alternative syntaxes: &amp;ldquo;EQUI&amp;rdquo; OUTER JOIN. The above examples again used the &amp;ldquo;Cartesian product with filter&amp;rdquo; kind of JOIN. Much more common is the &amp;ldquo;EQUI&amp;rdquo; OUTER JOIN approach, where we join on a primary key / foreign key relationship. SELECT * FROM actor FULL JOIN film actor USING FULL JOIN film USING. And of course, this also works with NATURAL LEFT JOIN, NATURAL RIGHT JOIN, NATURAL FULL JOIN, but again, these aren&amp;rsquo;t useful at all, as we&amp;rsquo;d be joining again USING, which makes no sense at all. SEMI JOIN. In relational algebra, there is a notion of a semi join operation, which unfortunately doesn&amp;rsquo;t have a syntax representation in SQL. If it did, the syntax would probably be LEFT SEMI JOIN and RIGHT SEMI JOIN, just like the Cloudera Impala syntax extension offers. SELECT a.first name, a.last name, f.* FROM actor AS a LEFT OUTER JOIN LATERAL AS revenue FROM film AS f JOIN film actor AS fa USING JOIN inventory AS i USING JOIN rental AS r USING JOIN payment AS p USING WHERE fa. This was A Probably Incomplete, Comprehensive Guide to the Many Different Ways to JOIN Tables in SQL. I hope you&amp;rsquo;ve found 1-2 new tricks in this article.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;let-s-stop-ascribing-meaning-to-code-points-http-manishearth-github-io-blog-2017-01-14-stop-ascribing-meaning-to-unicode-code-points&#34;&gt;&lt;a href=&#34;http://manishearth.github.io/blog/2017/01/14/stop-ascribing-meaning-to-unicode-code-points/&#34;&gt; Let’s Stop Ascribing Meaning to Code Points &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;One very common misconception I&amp;rsquo;ve seen is that code points have cross-language intrinsic meaning. Folks start implying that code points mean something, and that O(1) indexing or slicing at code point boundaries is a useful operation. UTF8 encodes 7-bit code points as a single byte, 11-bit code points as two bytes, 16-bit code points as 3 bytes, and 21-bit code points as four bytes. UTF-32 encodes all code points as 4-byte code units. The flag emoji &amp;ldquo;🇺🇸&amp;rdquo; is also made of two code points,  + 🇸. One false assumption that&amp;rsquo;s often made is that code points are a single column wide. While the treatment of code points in editing contexts is not consistent, it seems like applications consistently do not consider code points as &amp;ldquo;Editing units&amp;rdquo;. Of course, APIs that work with code points are exposed too, you can iterate over the code points using.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;celebrating-telegram-1-0-by-using-it-as-a-network-tunnel-https-medium-com-stefan-musterschueler-celebrating-telegram-1-0-by-using-it-as-a-network-tunnel-fad2eb181baa-i037saaj5&#34;&gt;&lt;a href=&#34;https://medium.com/@stefan.musterschueler/celebrating-telegram-1-0-by-using-it-as-a-network-tunnel-fad2eb181baa#.i037saaj5&#34;&gt; Celebrating Telegram 1.0 by using it as a network tunnel &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;nim-0-16-released-http-nim-lang-org-news-e029-version-0-16-0-html&#34;&gt;&lt;a href=&#34;http://nim-lang.org/news/e029_version_0_16_0.html&#34;&gt; Nim 0.16 released &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The new Nimble release that is included with Nim 0.16.0 includes a variety of new features and bug fixes. Import compiler/ast, compiler/parser, compiler/lexer import compiler /. The two are equivalent, but the new latter syntax is less redundant. Library AdditionsAdded new parameter to error proc of macro module to provide better error message Added new deques module intended to replace queues. Language AdditionsThe emit pragma now takes a list of Nim expressions instead of a single string literal. Sh error: unknown processor: aarch64&amp;rdquo; Fixed &amp;ldquo;RFC: asyncdispatch. Poll behaviour&amp;rdquo; Fixed &amp;ldquo;Can&amp;rsquo;t access enum members through alias&amp;rdquo; Fixed &amp;ldquo;Type, declared in generic proc body, leads to incorrect codegen&amp;rdquo; Fixed &amp;ldquo;Compiler SIGSEGV when mixing method and proc&amp;rdquo; Fixed &amp;ldquo;Compile-time SIGSEGV when declaring. Importcpp method with return value &amp;rdquo; Fixed &amp;ldquo;Variable declaration incorrectly parsed&amp;rdquo; Fixed &amp;ldquo;Invalid C code when naming a object member &amp;ldquo;Linux&amp;rdquo; Fixed &amp;ldquo;[Windows] MinGW within Nim install is missing libraries&amp;rdquo; Fixed &amp;ldquo;Async: annoying warning for future.finished&amp;rdquo; Fixed &amp;ldquo;New import syntax doesn&amp;rsquo;t work?&amp;rdquo; Fixed &amp;ldquo;Fixes #1994&amp;rdquo; Fixed &amp;ldquo;Can&amp;rsquo;t tell return value of programs with staticExec&amp;rdquo; Fixed &amp;ldquo;StartProcess() on Windows with poInteractive: Second call fails&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-j-source-code-is-pretty-terrible-https-github-com-jsoftware-jsource-blob-master-jsrc-v2-c&#34;&gt;&lt;a href=&#34;https://github.com/jsoftware/jsource/blob/master/jsrc/v2.c&#34;&gt; The J source code is pretty terrible &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Verbs: Primes and Factoring &lt;em&gt;/ #include &amp;ldquo;j.h&amp;rdquo; #define MM 25000L /&lt;/em&gt; interval size to look for primes &lt;em&gt;/ #define PMAX 105097564L /&lt;/em&gt; upper limit of p: ; = p: PMAX &lt;em&gt;/ #define PT 500000L /&lt;/em&gt; interval size in ptt &lt;em&gt;/ static A p4792=0; /&lt;/em&gt; p: i.4792 &lt;em&gt;/ static I ptt[]= ; /&lt;/em&gt; p: PT*1+i. 210 */ static I ptn=sizeof(ptt)/SZI; static I jtsup(J jt,I n,I&lt;em&gt;wv) /&lt;/em&gt; &amp;lt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;optimization-chrome-by-adding-const-and-on-vc-by-deleting-it-https-randomascii-wordpress-com-2017-01-08-add-a-const-here-delete-a-const-there&#34;&gt;&lt;a href=&#34;https://randomascii.wordpress.com/2017/01/08/add-a-const-here-delete-a-const-there/&#34;&gt; Optimization Chrome by adding const (and, on VC++, by deleting it) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Most executable formats have at least two data segments - one for read/write globals and one for read-only globals. If you have constant data, such as kBrotliDictionary, then it is best to have it in the read-only data segment, which is segment &amp;lsquo;2&amp;rsquo; in Chrome&amp;rsquo;s Windows binaries. Putting data in the read-only data segment has a few advantages. When my ShowGlobals tool showed that blink::serializedCharacterData was in the read/write data segment, and when investigation showed that it was never modified, I landed a change to add a const modifier, and it dutifully moved to the read-only data segment. With VC++ if you have a class/struct with a const member variable then any global objects of that type end up in the read/write data segment. For most of my changes the effect was just to move some data from the read/write data segment to the read-only data segment, as expected, but two of the changes did much more. Most importantly, the various globals involved in these two changes go from being mostly or completely per-process private data to being shared data, saving an estimated 200 KB of data per process.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;chrome-command-line-api-reference-a-more-complete-list-of-things-you-probably-didn-t-know-you-could-do-with-chrome-s-developer-console-https-developers-google-com-web-tools-chrome-devtools-console-command-line-reference&#34;&gt;&lt;a href=&#34;https://developers.google.com/web/tools/chrome-devtools/console/command-line-reference&#34;&gt; Chrome Command Line API Reference - A more complete list of things you probably didn’t know you could do with Chrome’s Developer Console &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The Command Line API contains a collection of convenience functions for performing common tasks: selecting and inspecting DOM elements, displaying data in readable format, stopping and starting the profiler, and monitoring DOM events. 0 - $4. The $0, $1, $2, $3 and $4 commands work as a historical reference to the last five DOM elements inspected within the Elements panel or the last five JavaScript heap objects selected in the Profiles panel. Selector) returns the reference to the first DOM element with the specified CSS selector. Dirxml(object) prints an XML representation of the specified object, as seen in the Elements tab. GetEventListeners(object) returns the event listeners registered on the specified object. Log object data with table formatting by passing in a data object in with optional column headings. UnmonitorEvents(object[, events]) stops monitoring events for the specified object and events.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;big-list-of-interesting-open-source-projects-for-contributing-on-such-languages-as-c-c-golang-javascript-python-etc-https-github-com-lk-geimfari-awesomo&#34;&gt;&lt;a href=&#34;https://github.com/lk-geimfari/awesomo&#34;&gt; Big list of interesting open source projects for contributing on such languages as C, C++, Golang, JavaScript, Python etc. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A.W.E.S.O.M. O: The really big list of really interesting open source projects. If you are interested in Open Source and are considering to join the community of Open Source developers, it is possible that in this list you will find the project that will suit you. Wanna support us? Just share this list with your friends on Twitter, Facebook, Medium or somewhere else. To the extent possible under law, the person who associated CC0 with awesomo has waived all copyright and related or neighboring rights to awesomo. You should have received a copy of the CC0 legalcode along with this work. If not, see &lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1&#34;&gt;https://creativecommons.org/publicdomain/zero/1&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;uncle-bob-argues-for-languages-that-let-you-shoot-yourself-in-the-foot-http-blog-cleancoder-com-uncle-bob-2017-01-11-thedarkpath-html&#34;&gt;&lt;a href=&#34;http://blog.cleancoder.com/uncle-bob/2017/01/11/TheDarkPath.html&#34;&gt; Uncle Bob argues for languages that let you shoot yourself in the foot &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;These languages are both a far cry from a truly functional programming language; but every step in that direction is a good step. My problem is that both languages have doubled down on strong static typing. In the case of Swift, the parent language is the bizarre typeless hybrid of C and Smalltalk called Objective-C; so perhaps the emphasis on typing is understandable. The question is: Whose job is it to manage that risk? Is it the language&amp;rsquo;s job? Or is it the programmer&amp;rsquo;s job. The rules of the language insist that when you use a nullable variable, you must first check that variable for null. To become an expert in these languages, you must become a language lawyer. If your answer is that our languages don&amp;rsquo;t prevent them, then I strongly suggest that you quit your job and never think about being a programmer again; because defects are never the fault of our languages.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;senior-engineers-reduce-risk-https-hackernoon-com-senior-engineers-reduce-risk-5ab2adc13c97-vcy6izuud&#34;&gt;&lt;a href=&#34;https://hackernoon.com/senior-engineers-reduce-risk-5ab2adc13c97#.vcy6izuud&#34;&gt; Senior Engineers Reduce Risk &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;New users introduce technical risk but new hires introduce risk into the company&amp;rsquo;s processes and culture. The senior engineers may reduce risk deliberately, or simply have the right skill set at the right time. Senior engineers are storytellersMost risks, especially where managed effectively, never come to pass. If a senior engineer identifies a significant risk, they have to be able to concisely explain and prioritize it for a non-expert audience. Senior engineers choose companies with the right risksEvery company has different risks, and so every company expects something different from their senior engineers. Senior engineers know titles don&amp;rsquo;t mean muchWithout context, knowing someone was a &amp;ldquo;Senior engineer&amp;rdquo; tells you almost nothing. Titles can matter a lot in some environments, but in those cases titles are just another tool for reducing risk; if being a senior, or staff, or principal engineer is the only way to make your voice heard, then pursuing those titles is worthwhile.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;announcing-tokio-0-1-https-tokio-rs-blog-tokio-0-1&#34;&gt;&lt;a href=&#34;https://tokio.rs/blog/tokio-0-1/&#34;&gt; Announcing Tokio 0.1 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Today we are publishing the preliminary version of the Tokio stack, 0.1! Tokio is a platform for writing fast networking code in Rust. You can use the Tokio stack to handle a wide range of protocols, including streaming and multiplexed protocols, as well as more specialized servers like proxies. Tokio is primarily intended as a foundation for other libraries, in particular for high performance protocol implementations. Over time, we expect Tokio to grow a rich middleware ecosystem and ultimately to support various web and application frameworks. Hyper, for example, has been adding Tokio integration, and there&amp;rsquo;s a growing list of other protocol implementations as well. In general, we are eager to support the growing Tokio ecosystem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;dgsh-directed-graph-shell-i-feel-like-i-have-been-waiting-for-something-like-this-my-whole-life-http-www-dmst-aueb-gr-dds-sw-dgsh&#34;&gt;&lt;a href=&#34;http://www.dmst.aueb.gr/dds/sw/dgsh/&#34;&gt; dgsh — directed graph shell &amp;ndash; I feel like I have been waiting for something like this my whole life! &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Process the git history, and create two PNG diagrams depicting committer activity over time. The most active committers appear at the center vertical of the diagram. Demonstrates image processing, mixining of synchronous and asynchronous processing in a scatter block, and the use of an dgsh-compliant join command.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-removing-caching-improved-mobile-performance-by-25-https-engineering-klarna-com-how-removing-caching-improved-mobile-performance-by-25-52a17cc339a2-w5j09dtib&#34;&gt;&lt;a href=&#34;https://engineering.klarna.com/how-removing-caching-improved-mobile-performance-by-25-52a17cc339a2#.w5j09dtib&#34;&gt; How removing caching improved mobile performance by 25% &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A colleague and I were looking at how our flagship product, Klarna Checkout, loads in the browser and contemplating ways to improve the performance. You tell the browser what your app needs to be offline via a manifest, the browser downloads everything in the manifest, and the next time a user hits your page, the browser will first load the cached content before checking over the network if the manifest file has changed. It wasn&amp;rsquo;t actually necessary since for our use case standard HTTP caching techniques already got us what we wanted - cached assets being loaded without going to the network. I still had questions about exactly how and when these files were downloaded and how the downloads affected potentially concurrent requests for the same assets from the HTML itself. On my machine, the application cache removal improved response time by half while the fullscreen deferral improved it by another 15%. w00t! When we put the changes into production, they had a dramatic effect on Chrome Mobile especially, cutting load times by 25%. The other browsers also had an improvement, but it was more modest. In his case, he sometimes had the awful performance I saw so I&amp;rsquo;m going to guess that it had something to do with my machine being newer and thus being able to get farther along in the load process before the &amp;lsquo;ready&amp;rsquo; event came in.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2017 week 2 in programming</title>
      <link>http://iszlai.github.io/post/2017_week_02_in_programming/</link>
      <pubDate>Sun, 08 Jan 2017 17:45:07 +0100</pubDate>
      
      <guid>http://iszlai.github.io/post/2017_week_02_in_programming/</guid>
      <description>

&lt;h2 id=&#34;a-simple-demo-of-phishing-by-abusing-the-browser-autofill-feature-https-github-com-anttiviljami-browser-autofill-phishing&#34;&gt;&lt;a href=&#34;https://github.com/anttiviljami/browser-autofill-phishing&#34;&gt; A simple demo of phishing by abusing the browser autofill feature &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-programmer-s-guide-to-booking-a-plane-https-hackernoon-com-the-programmers-guide-to-booking-a-plane-11e37d610045&#34;&gt;&lt;a href=&#34;https://hackernoon.com/the-programmers-guide-to-booking-a-plane-11e37d610045&#34;&gt; The Programmer’s Guide to Booking a Plane &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Crawling the Southwest websiteA quick look at Southwest&amp;rsquo;s site revealed no API.I figured that straight up scraping their website would be an effective approach. It&amp;rsquo;s printing out fare prices, but I&amp;rsquo;m not really sure what to do with all of this data. So what did I do? I hooked up Twilio to send me a text message whenever a fare hit a certain threshold. Since I didn&amp;rsquo;t think it through, I also chose to send the text message at a low interval so that it would keep pinging me until I stopped the script, even if I was out on a date with my lovely wife. Plotting the DataAfter a few days, I got kind of annoyed with looking at a stream of text and thought of complex ways to make it more appealing to look at for the few seconds that I looked at it every day. Booking the FlightDays later, on a normal Tuesday night, it happened: the prices dropped dramatically, something that did not happen every Tuesday, but rather quite randomly. You can check out the project on GitHub if you&amp;rsquo;d also like to go on a nice vacation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;i-wrote-a-faster-sorting-algorithm-https-probablydance-com-2016-12-27-i-wrote-a-faster-sorting-algorithm&#34;&gt;&lt;a href=&#34;https://probablydance.com/2016/12/27/i-wrote-a-faster-sorting-algorithm/&#34;&gt; I Wrote a Faster Sorting Algorithm &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;These days it&amp;rsquo;s a pretty bold claim if you say that you invented a sorting algorithm that&amp;rsquo;s 30% faster than state of the art. I have implemented this sorting algorithm using Timo Bingmann&amp;rsquo;s Sound of Sorting. So my final sort algorithm actually looks at the number of elements in the collection, and if it&amp;rsquo;s less than 128 I call std::sort, if it&amp;rsquo;s less than 1024 I call American Flag Sort, and if it&amp;rsquo;s more than that I run my new sorting algorithm. So if you&amp;rsquo;re sorting log messages and you have a lot of messages that start with &amp;ldquo;Warning:&amp;rdquo; or &amp;ldquo;Error:&amp;rdquo; then my implementation of radix sort would first sort those into separate partitions, and then within each of those partitions it would skip over the common prefix and continue sorting at the first differing character. Is an in-place radix sort algorithm Sorts one byte at a time Falls back to std::sort if a collection contains less than some threshold of items Uses the inner loop of American Flag Sort if a collection contains less than a larger threshold of items Uses Ska Byte Sort if the collection is larger than that Calls itself recursively on each of the 256 partitions using the next byte as the sort key Falls back to std::sort if it recurses too many times Uses std::partition to sort booleans Automatically converts signed integers, floats and char types to the correct unsigned integer type Automatically deals with pairs, tuples, strings, vectors and arrays by sorting one element at a time Skips over common prefixes of collections. The sorting algorithm still succeeded at splitting the data into many smaller partitions, so when I fall back to std::sort, it has a much easier time than it would have had sorting the whole range. Since the interface of this sorting algorithm works differently from existing sorting algorithms, I have to invent new customization points.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;add-asshole-driven-development-http-scottberkun-com-2007-asshole-driven-development&#34;&gt;&lt;a href=&#34;http://scottberkun.com/2007/asshole-driven-development/&#34;&gt; Add : asshole driven development &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;From Agile, to Extreme Programming , to Test Driven Development, the acronyms and frameworks keep piling up. Others say it&amp;rsquo;s because software people like making things up and can&amp;rsquo;t help themselves. Asshole-Driven development - Any team where the biggest jerk makes all the big decisions is asshole driven development. Cognitive Dissonance development - In any organization where there are two or more divergent beliefs on how software should be made. Development By Denial - Everybody pretends there is a method for what&amp;rsquo;s being done, and that things are going ok, when in reality, things are a mess and the process is on the floor. The worse things get, the more people depend on their denial of what&amp;rsquo;s really happening, or their isolation in their own small part of the project, to survive. Get Me Promoted Methodology - People write code and design things to increase their visibility, satisfy their boss&amp;rsquo;s whims, and accelerate their path to a raise or the corner office no matter how far outside of stated goals their efforts go.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;grumpy-go-running-python-by-google-https-opensource-googleblog-com-2017-01-grumpy-go-running-python-html&#34;&gt;&lt;a href=&#34;https://opensource.googleblog.com/2017/01/grumpy-go-running-python.html&#34;&gt; Grumpy: Go running Python! by Google &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;network-cheatsheet-https-github-com-espadrine-solve-data-in-code-blob-master-misc-network-md&#34;&gt;&lt;a href=&#34;https://github.com/espadrine/Solve-Data-In-Code/blob/master/misc/network.md&#34;&gt; Network cheatsheet &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Source port in 2 bytes, destination port in 2 bytes, sequence number in 4 bytes: in a SYN, this is the client Initial Sequence Number, picked usually randomly, otherwise it is + 1 + number of bytes previously sent, ensuring that packets can be reordered to obtain the original segment. Data offset in 4 bits, the size of the TCP header in 32-bit words, 000, flags in 9 bits: NS, CWR, ECE, URG, ACK, PSH, RST, SYN, FIN, window size in 2 bytes, allowing flow and congestion control, checksum in 2 bytes to check header and data corruption, urgent pointer in 2 bytes pointing to a sequence number, options eg. IPv4 addresses fit in 4 bytes, commonly written in dot-separated decimal, eg. IPv6 addresses fit in 16 bytes, with pairs of bytes represented as colon-separated hexadecimal numbers, with adjacent zeros replaced by :: once in the address. Preamble: 7 bytes to ensure we know this is a frame, not a lower-level header, and to synchronize clocks, Start of Frame Delimiter: 1 byte to break the pattern of the preamble and mark the start of the frame metadata, destination Media Access Control address of the target machine: each machine knows the MAC address of all machines it is directly connected to. Among its 6 bytes, it contains two special bits: the Universal vs. Local bit is 0 if the MAC is separated in 3 bytes identifying the network card&amp;rsquo;s constructor, and 3 bytes arbitrarily but uniquely assigned by the constructor for each card. EtherType indicates what protocol is used in the payload; if the value is &amp;lt; 1536, it represents the payload size in bytes, payload: up to 1500 bytes of data from the layer above, typically IP, Frame Check Sequence, a common wireless protocol.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;cracking-sublime-text-3-http-blog-fernandodominguez-me-cracking-sublime-text-3&#34;&gt;&lt;a href=&#34;http://blog.fernandodominguez.me/cracking-sublime-text-3&#34;&gt; Cracking Sublime Text 3 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Our goal will be to stop the annoying Sublime Text pop-up from reminding you to buy a license each now and then. If g valid license is 0x0, i.e: FALSE and the pop-up has not been shown for a while, show it. As cmp byte , 0x0 compares g valid license to 0x0 and jne 0x100072b0 jumps to the specified address if the comparison &amp;lsquo;returned&amp;rsquo; not equal, i.e: the license is valid, efectively skipping the part of the procedure that shows the pop-up. Aand that&amp;rsquo;s pretty much it, the license pop-up will not bother you again. Rax = check license(var 30, g license name, g license seats, var 4C); *(int8 t *) g valid license = COND BYTE SET(E);. 0x1: License is valid, as the message Thanks for purchasing will show. 0x2: License is invalid, as the message That license key doesn&amp;rsquo;t appear to be valid.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;ai-algorithm-of-snake-game-share-opinions-if-you-have-interests-https-github-com-stevennl-snake&#34;&gt;&lt;a href=&#34;https://github.com/stevennL/Snake&#34;&gt; AI algorithm of snake game. Share opinions if you have interests! &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Keyboard Controls Key Feature W move up A move left S move down D move right Space pause/resume the snake Esc exit game. Tips: When the snake is running, you could press the Space key to pause the snake and then press the W/A/S/D key to move the snake step by step. Anytime if you want the snake to start running again, just press Space key again. DecideNext(): compute the next move direction D of the snake S1. Compute the shortest path P1 from snake S1&amp;rsquo;s head to the food. Direct a virtual snake, S2, to eat the food along path P1. Compute the longest path P2 from snake S2&amp;rsquo;s head to its tail. Compute the longest path P3 from snake S1&amp;rsquo;s head to its tail. Let D be the direction that moves the snake along the longest path to the food.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;sublime-text-vs-visual-studio-code-vs-atom-performance-test-dec-2016-https-blog-xinhong-me-post-sublime-text-vs-vscode-vs-atom-performance-dec-2016&#34;&gt;&lt;a href=&#34;https://blog.xinhong.me/post/sublime-text-vs-vscode-vs-atom-performance-dec-2016/&#34;&gt; Sublime Text vs Visual Studio Code vs Atom Performance Test (Dec 2016) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The reason I sticked with Sublime Text was performance: Atom was slow, even after when Atom 1.0 was announced. These days, I Googled &amp;ldquo;Sublime Text vs Atom 2016&amp;rdquo;, trying to see if Atom has significant improvement when I found Visual Studio Code. Visual Studio is also built using Web Technology like Atom, but reviewers said it is faster. Visual Studio Code did not allow me to open &amp;ldquo;10m lines&amp;rdquo; file saying &amp;ldquo;Very large&amp;rdquo;. Visual Studio Code could not keep syntax highlighting when openning the &amp;ldquo;1m lines&amp;rdquo; file. Atom and Visual Studio Code perform significantly worse compared to Sublime Text and TextEdit: launching and Opening windows are seconds slower which it is noticeable and they occupied much more RAM. Visual Studio Code has advantages over Atom in opening files and RAM usage. Sublime Text is still the speedy king, Visual Studio Code second and Atom is the last.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;deep-learning-enables-you-to-hide-screen-when-your-boss-is-approaching-http-ahogrammer-com-2016-11-15-deep-learning-enables-you-to-hide-screen-when-your-boss-is-approaching&#34;&gt;&lt;a href=&#34;http://ahogrammer.com/2016/11/15/deep-learning-enables-you-to-hide-screen-when-your-boss-is-approaching/&#34;&gt; Deep Learning Enables You to Hide Screen when Your Boss is Approaching &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Specifically, Keras is used to implement neural network for learning his face, a web camera is used to recognize that he is approaching, and switching the screen. First, let the computer learn the face of the boss with deep learning. Taking face image Recognizing face image Switching screen. Next, we use machine learning so that the computer can recognize the face of the boss. First of all, I need to collect a large number of images for learning. Now, when learned model recognize the face of the boss, I need to change the screen. In this time, I combined the real-time image acquisition from Web camera with face recognition using Keras to recognize my boss and hide the screen.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;cross-platform-graphics-in-net-core-https-medium-com-cameronaavik-cross-platform-graphics-in-net-core-901be29dabd7-hx5e67krd&#34;&gt;&lt;a href=&#34;https://medium.com/@cameronaavik/cross-platform-graphics-in-net-core-901be29dabd7#.hx5e67krd&#34;&gt; Cross-Platform Graphics in .NET Core &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;NET Core and Framework provide the ability to access structs, callbacks, and functions in unmanaged libraries using something called Platform Invoke. Another nice thing about GLFW is the permissive license that allowed me to redistribute the library freely. The first hurdle I knew I had to figure out was to somehow reference different GLFW libraries depending on the platform it was running on as I had a glfw. The name of the library had to be specified at compile time, and could not be decided at runtime. Outputs for each platformAfter searching through many documents, I came across this section of an article about how to include native dependencies in libraries and thought this was just what I wanted. Referencing the right OpenGL librarySo, it turns out that the OpenGL library is not called libopengl32. NET Core, I&amp;rsquo;d probably take a look at the stuff he is working on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;i-m-learning-to-code-at-56-here-s-an-epic-beat-down-of-my-critical-inner-self-https-medium-freecodecamp-com-yes-im-56-and-learning-to-code-f33abea6fd4c-taav0dfn4&#34;&gt;&lt;a href=&#34;https://medium.freecodecamp.com/yes-im-56-and-learning-to-code-f33abea6fd4c#.taav0dfn4&#34;&gt; I’m learning to code at 56. Here’s an epic beat-down of my critical inner self. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;What 20-year-old stays with their first developer job that long? Chances are an entry level developer job will pay me less than I&amp;rsquo;m making now. There&amp;rsquo;s no guarantee that the job I have now will last. Most programming jobs aren&amp;rsquo;t even in the technology industry. Me: First things first, I&amp;rsquo;m going to apply to a lot of jobs, build a network of hiring managers, and make sure I get a lot of interviews. At my current job, I show up every day knowing that somebody at work has something to teach me. That&amp;rsquo;s how I&amp;rsquo;ve fit in at every job I&amp;rsquo;ve had over the last 36 years.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;google-s-new-website-to-learn-computer-science-and-programming-https-www-google-com-edu-cs-learn-html&#34;&gt;&lt;a href=&#34;https://www.google.com/edu/cs/learn.html&#34;&gt; Google’s New Website To Learn Computer Science and Programming &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Computers are everywhere in our world today and being an educated citizen requires an understanding of the fundamentals of computer science and its underlying problem-solving methodology of computational thinking. Not every child should become a computer scientist, but all children should have the opportunity to explore and create with computing. Google has developed programs, tools and resources that advance computer science education and provide opportunities for exploration and learning in school, in informal settings and at home.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;alacritty-a-gpu-accelerated-terminal-emulator-written-in-rust-http-blog-jwilm-io-announcing-alacritty&#34;&gt;&lt;a href=&#34;http://blog.jwilm.io/announcing-alacritty/&#34;&gt; Alacritty, a GPU-accelerated terminal emulator written in Rust &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Alacritty is a blazing fast, GPU accelerated terminal emulator. Alacritty is the result of frustration with existing terminal emulators. Correctness: Alacritty should be able to properly render modern terminal applications like tmux and vim. Performance: Alacritty should be the fastest terminal emulator available anywhere. Alacritty&amp;rsquo;s biggest claim is that it&amp;rsquo;s the fastest terminal emulator available. Nominally, Alacritty will draw a new frame whenever the terminal state changes, and only when the state changes. Alacritty is a very fast and usable terminal emulator.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;super-nintendo-entertainment-system-features-pt-01-graphics-palettes-https-www-youtube-com-watch-v-57ibhdu2sai-t-0s&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=57ibhDU2SAI&amp;amp;t=0s&#34;&gt; Super Nintendo Entertainment System Features - Pt. 01: Graphics &amp;amp; Palettes &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-we-ported-linux-to-the-ps4-https-fail0verflow-com-blog-2016-console-hacking-2016-postscript&#34;&gt;&lt;a href=&#34;https://fail0verflow.com/blog/2016/console-hacking-2016-postscript/&#34;&gt; How we ported Linux to the PS4 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Last year we demoed Linux on the PS4. Since then, we&amp;rsquo;ve gotten 3D graphics working, polished a number of drivers, and wrote some new ones. Linux on the PS4 is now actually quite a usable OS, with some minor caveats. Continuing last year&amp;rsquo;s theme of focusing on the Linux port and loader instead of on exploits, this year&amp;rsquo;s talk focused on the hardware and what it takes to bring up Linux on a very much non-PC-compatible x86 platform. What&amp;rsquo;s next? Well, last year we said we&amp;rsquo;d like to upstream some of the work into the Linux kernel, and we still plan to do so. Linux currently boots on it, but the GPU driver needs fixups. As we said last year, we are not planning to release our exploits, as we believe that there are plenty of people capable of developing their own exploits for the PS4 userland and kernel; we are leaving that to the community. We had several people do so throughout the year and that helped fix some Linux bugs and improve ps4-kexec.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;til-visual-studio-has-pascal-case-based-intellisense-https-blogs-msdn-microsoft-com-zainnab-2010-02-09-using-the-new-intellisense-pascal-case&#34;&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/zainnab/2010/02/09/using-the-new-intellisense-pascal-case/&#34;&gt; TIL - Visual Studio has pascal case based intellisense &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;visualise-your-css-before-you-write-it-with-cssreference-io-http-cssreference-io&#34;&gt;&lt;a href=&#34;http://cssreference.io/&#34;&gt; Visualise your CSS before you write it with cssreference.io &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Border-bottom-color border-bottom-left-radius border-bottom-right-radius border-bottom-style border-bottom-width In collection: box-model. Border-bottom border-collapse border-color border-left-color border-left-style border-left-width In collection: box-model. Border-left border-radius border-right-color border-right-style border-right-width In collection: box-model. Border-right border-style border-top-color border-top-left-radius border-top-right-radius border-top-style border-top-width In collection: box-model. List-style-image list-style-position list-style-type list-style margin-bottom In collection: box-model. Outline-color outline-style outline-width outline overflow-wrap overflow-x overflow-y overflow padding-bottom In collection: box-model. Transform-origin transform transition-delay In collection: transitions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;openstreetmap-plugin-for-unreal-engine-4-https-github-com-ue4plugins-streetmap&#34;&gt;&lt;a href=&#34;https://github.com/ue4plugins/StreetMap&#34;&gt; OpenStreetMap plugin for Unreal Engine 4 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This plugin allows you to import OpenStreetMap XML data into your Unreal Engine 4 project as a new StreetMap asset type. You can now drag and drop OpenStreetMap XML files into Content Browser to import map data! Of course, there are many other places you can find raw OpenStreetMap XML data on the web also, but keep in mind the plugin has only been tested with files exported directly from OpenStreetMap so far. When you import an OSM file, the plugin will create a new Street Map asset to represent the map data in UE4. All mesh data is generated at load time from the cartographic data in the map asset, including colorized road strips and simple building meshes with triangulated roof polygons. While importing OpenStreetMap XML files, we store all of the data that&amp;rsquo;s interesting to us in an FOSMFile data structure in memory. Finally, a big thanks to the OpenStreetMap Foundation and the fantastic community who contribute map data and maintain the database.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;an-absolute-beginner-s-guide-to-machine-learning-and-image-classification-with-neural-networks-https-github-com-humphd-have-fun-with-machine-learning&#34;&gt;&lt;a href=&#34;https://github.com/humphd/have-fun-with-machine-learning&#34;&gt; An absolute beginner&amp;rsquo;s guide to Machine Learning and Image Classification with Neural Networks &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a hands-on guide to machine learning for programmers with no background in AI. Using a neural network doesn&amp;rsquo;t require a PhD, and you don&amp;rsquo;t need to be the person who makes the next breakthrough in AI in order to use what exists today. Setup and use existing, open source machine learning technologies, specifically Caffe and DIGITS Create a dataset of images Train a neural network from scratch Test our neural network on images it has never seen before Improve our neural network&amp;rsquo;s accuracy by fine tuning existing neural networks Deploy and use our neural network. This guide won&amp;rsquo;t teach you how neural networks are designed, cover much theory, or use a single mathematical expression. Installing DIGITS. nVidia&amp;rsquo;s Deep Learning GPU Training System, or DIGITS, is BSD-licensed Python web app for training neural networks. Fine tuning takes advantage of the layout of deep neural networks, and uses pretrained networks to do the hard work of initial object detection. We&amp;rsquo;ll throw away the final classification layer(s) and retrain the network with our image dataset, fine tuning it to our image classes. Deciding whether or not it&amp;rsquo;s worth investing time in learning the theories of machine learning and neural networks is easier when you&amp;rsquo;ve been able to see it work in a small way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-tourist-s-guide-to-the-llvm-source-code-http-blog-regehr-org-archives-1453&#34;&gt;&lt;a href=&#34;http://blog.regehr.org/archives/1453&#34;&gt; A Tourist’s Guide to the LLVM Source Code &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The core LLVM representation lives in RAM and is manipulated using a large C++ API. This representation can be dumped to readable text and parsed back into memory, but this is only a convenience for debugging: during a normal compilation using LLVM, textual IR is never generated. The second subdirectory, llvm, is a biggie: it contains 878 header files that define all of the LLVM APIs. Projects doesn&amp;rsquo;t contain anything by default but it&amp;rsquo;s where you checkout LLVM components such as compiler-rt, OpenMP support, and the LLVM C++ library that live in separate repos. AsmParser: parse textual IR into memory Bitcode: serialize IR into the compact format and read it back into RAM CodeGen: the LLVM target-independent code generator, basically a framework that LLVM backends fit into and also a bunch of library functions that backends can use. DebugInfo is a library for maintaining mappings between LLVM instructions and source code locations. ExecutionEngine: Although LLVM is usually translated into assembly code or machine code, it can be directly executed using an interpreter. Fuzzer: this is libFuzzer, a coverage-guided fuzzer similar to AFL. It doesn&amp;rsquo;t fuzz LLVM components, but rather uses LLVM functionality in order to perform fuzzing of programs that are compiled using LLVM. IR: sort of a grab-bag of IR-related code, with no other obvious unifying theme.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;getting-past-c-http-blog-ntpsec-org-2017-01-03-getting-past-c-html&#34;&gt;&lt;a href=&#34;http://blog.ntpsec.org/2017/01/03/getting-past-c.html&#34;&gt; Getting Past C &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;One of the medium-term possibilities we&amp;rsquo;re seriously considering for NTPsec is moving the entire codebase out of C into a language with no buffer overruns, and in general much stronger security and correctness guarantees. These are not going to translate into any language with the correctness properties we want. Another necessary step will be to corral the few remaining platform dependencies into well-isolated library modules, so the vast bulk of the code will in principle translate mechanically into whatever binding of the ANSI/POSIX API the new language supports. There&amp;rsquo;s lots of web evangelism around both languages, so I&amp;rsquo;m not going to attempt a detailed comparison here. If it&amp;rsquo;s not, maybe I can up-gun it until it is - language parsing and translation is a kind of problem I&amp;rsquo;m pretty good at and enjoy working. In the end it might come down to which language I feel more comfortable in. Despite my huge investment of time in the language, I&amp;rsquo;m ready.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;imperative-vs-declarative-programming-https-tylermcginnis-com-imperative-vs-declarative-programming&#34;&gt;&lt;a href=&#34;https://tylermcginnis.com/imperative-vs-declarative-programming/&#34;&gt; Imperative vs Declarative Programming &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Sadly, you probably encountered a definition similar to this, &amp;ldquo;You know, imperative programming is like how you do something, and declarative programming is more like what you do, or something.&amp;rdquo; Let&amp;rsquo;s go back to the initial definition I made fun of, &amp;ldquo;Imperative programming is like&amp;rdquo;How&amp;rdquo; you do something and declarative programming is more like &amp;ldquo;What&amp;rdquo; you do. Before we dive into code, it&amp;rsquo;s important to realize that many declarative approaches have some sort of imperative abstraction layer. The declarative response to the Red Lobster employee is assuming that the Red Lobster employee knows all the imperative steps to get us to the table. To make the leap more graceful, let&amp;rsquo;s look at some programming &amp;ldquo;Languages&amp;rdquo; that are inherently declarative versus those which are imperative by nature. Declarative Programming is programming with declarations, i.e. declarative sentences. Declarative languages contrast with imperative languages which specify explicit manipulation of the computer&amp;rsquo;s internal state; or procedural languages which specify an explicit sequence of steps to follow.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;tensorkart-self-driving-mariokart-with-tensorflow-http-kevinhughes-ca-blog-tensor-kart&#34;&gt;&lt;a href=&#34;http://kevinhughes.ca/blog/tensor-kart&#34;&gt; TensorKart: self-driving MarioKart with TensorFlow &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Project - use TensorFlow to train an agent that can play MarioKart 64. To train a TensorFlow model, you have to define a function for TensorFlow to optimize. Higher level machine learning frameworks might abstract this, but TensorFlow forces the developer to think about what is happening and helps dispel the magic around machine learning. TensorFlow has great documentation and there are plenty of tutorials and source code available. With my model trained, I was ready to let it loose on MarioKart 64. With this in mind I played more MarioKart to record new training data. TensorFlow is super cool despite being a lower level abstraction than tools I used several years ago.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-i-write-tests-https-blog-nelhage-com-2016-12-how-i-test&#34;&gt;&lt;a href=&#34;https://blog.nelhage.com/2016/12/how-i-test/&#34;&gt; How I Write Tests &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I do try to write a lot of tests, these days and I do try to write my code with tests in mind. If your interface is too complex, you can still provide a &amp;ldquo;Programmable&amp;rdquo; fake that lets tests configure or plug in its behavior in appropriate ways, instrucing it how to respond to inputs. The &amp;ldquo;Sarama&amp;rdquo; Go Kafka client implements such a programmable fake kafka broker, which is used repeatedly in the library&amp;rsquo;s own tests, and can also be used by consumers wishing to construct more end-to-end tests. In order to make these tests self-contained, and able to express many varieties of tests, GCC developers have built a custom annotation/directive system to instruct the test harness how to interpret this test case, and what to check for. Building a runner for these test cases is a bit of upfront investment, but it&amp;rsquo;s well worth it; By making it easier to write tests, you&amp;rsquo;ll ensure that you and other contributors write more tests, and your future selves will thank you for the effort. Regression tests, Regression tests, Regression tests. There are probably nigh-infinitely many bugs you could write, but the set of desired behaviors of your system is relatively finite, and the set of bugs you&amp;rsquo;re likely to write is similarly limited, and if you turn every bug into a test on one of those behaviors, you&amp;rsquo;ll eventually converge on testing for most of the important failure modes of your system.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2016 week 52 in programming</title>
      <link>http://iszlai.github.io/post/2016_week_52_in_programming/</link>
      <pubDate>Sat, 31 Dec 2016 10:59:35 +0200</pubDate>
      
      <guid>http://iszlai.github.io/post/2016_week_52_in_programming/</guid>
      <description>

&lt;h2 id=&#34;creating-an-elf-virus-using-assembly-https-cranklin-wordpress-com-2016-12-26-how-to-create-a-virus-using-the-assembly-language&#34;&gt;&lt;a href=&#34;https://cranklin.wordpress.com/2016/12/26/how-to-create-a-virus-using-the-assembly-language/&#34;&gt; Creating an ELF Virus using Assembly &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;With even more luck, your virus would gain notoriety like the Whale Virus or the Michelangelo Virus. The way to achieve this is to: - change the entry point to the end of the text section - add the page size to the offset for the section header table - increase the file size and memory size of the text segment by the size of the virus code - for each program header that resides after the virus, increase the offset by the page size - find the last section header in the TEXT segment and increase the section size - for each section header that exists after the virus, increase the offset by the page size - insert the actual virus at the end of the text section - insert code that jumps to the original host entry point. The way we achieve this is: - add the virus size to the offset for the section header table, - in the text segment program header, decrease the virtual address by the size of the virus - in the text segment program header, increase the file size and memory size by the size of the virus - for each program header with an offset greater than the text segment, increase it by the size of the virus - change the entry point to the original text segment virtual address - the size of the virus - increase the program header offset by the size of the virus - insert the actual virus at the beginning of the text section. Increase the section header offset by the size of the virus - change the entry point to the end of the data segment - in the data segment program header, increase the page and memory size by the size of the virus - increase the bss offset by the size of the virus - set the executable permission bit on the DATA segment. A question you may ask yourself is, how does a virus grab its own code? How does a virus determine its own size? These are very good questions. Mov eax, 4 mov ecx, v start ; attach the virus portion mov edx, v stop - v start ; size of virus bytes int 80h. The size of the virus will calculate just fine, but the reference to the beginning of the virus code will fail after the first infection. Mov eax, 4 lea ecx, ; attach the virus portion mov edx, v stop - v start ; size of virus bytes int 80h. Notice that I didn&amp;rsquo;t include the system exit call in the virus.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;microsoft-word-for-windows-version-1-1a-source-code-http-www-computerhistory-org-atchm-microsoft-word-for-windows-1-1a-source-code&#34;&gt;&lt;a href=&#34;http://www.computerhistory.org/atchm/microsoft-word-for-windows-1-1a-source-code&#34;&gt; Microsoft Word for Windows Version 1.1a Source Code &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Microsoft Word for DOS, which had been released in 1983, was an also-ran. With the permission of Microsoft Corporation, the Computer History Museum is pleased to make available, for non-commercial use, the source code of Word for Windows version 1.1a as it was on January 10, 1991. In the summer of 1982 Brodie began working with others at Microsoft on a word processor to be controlled by a mouse. Free demonstration copies of Microsoft Word for MS-DOS were bundled with the November 1983 issue of PC World magazine. The first version for Microsoft Windows was released in late 1989 at a single-user price of $495. It received a glowing review in Inforworld that didn&amp;rsquo;t flinch at the price: &amp;ldquo;If your system is powerful enough to support Microsoft Windows, at $495 it is an excellent value.&amp;rdquo; Microsoft Word For Windows had started its remarkable climb to 90% market share. We are grateful to Roy Levin, Managing Director of Microsoft Research, Silicon Valley, for working hard to find the source code and getting permission for us to release it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-death-of-cyanogenmod-and-what-it-means-for-development-https-www-xda-developers-com-the-death-of-cyangenmod-and-whats-in-store-for-the-future&#34;&gt;&lt;a href=&#34;https://www.xda-developers.com/the-death-of-cyangenmod-and-whats-in-store-for-the-future/&#34;&gt; The Death of CyanogenMod and What it Means for Development &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Cyanogen Inc. has finally delivered a bullet to the brain - of CyanogenMod. CyanogenMod will no longer receive nightly builds after December 31st. But wait, what if the team simply finds another host to build nightlies? The CyanogenMod team will not continue official development on the project. Cyanogen Inc. owns the rights to the brand, so the CyanogenMod team has decided that it is no longer worth continuing development for the open source distribution without monetary or infrastructural support. Even if the team were to find an alternative revenue stream, the trouble isn&amp;rsquo;t worth it due to the potential legal issues that could be involved if Cyanogen Inc., and all brands that the company owns including CyanogenMod, were to be sold to another company. Plus, the team argues that the CyanogenMod brand has been tainted due to its association with Cyanogen, so new users may be wary of installing CyanogenMod. In this case, many devices may suffer a development drought as the development community largely relied on CyanogenMod to provide a stable branch that individuals could then fork. Whether or not the death of CyanogenMod spells the death of stable custom ROM development on certain devices will be up to developers and users alike.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;coding-standards-horror-story-http-www-lhotka-net-weblog-codingstandardshorrorstory-aspx&#34;&gt;&lt;a href=&#34;http://www.lhotka.net/weblog/CodingStandardsHorrorStory.aspx&#34;&gt; Coding standards horror story &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;He and I would butt heads constantly over coding standards and coding style. Mark had defined a strict set of coding standards and a style guide, and he&amp;rsquo;d dial back into work from home at night to review our code. Several months after starting to work with Mark, and absorbing this rigorous standards-based approach to coding, our company was purchased by another company. Another developer clearly learned to program on an Apple ][ and his VAX Basic code had line numbers. My point is that everyone in that dev shop had radically different coding styles and approaches. Yes, it is truly painful to adapt to the idea of living within strict coding and style guidelines. Ever since that experience I insist on consistency of coding standards and styles within each project where I work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;building-microservices-here-is-what-you-should-know-https-cloudncode-wordpress-com-2016-07-22-msa-getting-started&#34;&gt;&lt;a href=&#34;https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/&#34;&gt; Building Microservices? Here is what you should know &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Just to refresh our memories, micro service architecture is an evolution of the SOA architecture, whereas SOA was focused on integration of various applications, Micro services architecture aims to create small modular services which belong to a single application. One other major advantage with MSA and often overlooked is that now independent services can be written and re-written in different languages which is best suited for the service, or just because it has too much bloat which would otherwise spark off a multi-year re-write project and we all know where that leads us. When building an application through MSA, it is a common problem to get carried away and make the services simply too small, so small that the overhead and complexities of so many services begin to outweigh the benefits, such services are known as nano-services so yes, they are a bad thing. Every time a service is being called in another service plumbing code needs to be written to integrate with the service, including models, connectors etc, if you are one of those super organized teams which churn out clients after every time a service is built for every language that other teams uses, then rule this statement out. The circuit breaker pattern is rather simple, in the pattern the code keeps a counter of what is happening to any particular service and if a threshold number of errors have been continuously returned by the service, it &amp;ldquo;Opens&amp;rdquo; the circuit and fails fast all the subsequent requests to the same service for a predetermined amount of time thereby giving the errant service time to recover rather than bombarding it with more messages preventing it from healing itself again usually by standing up more servers and warming up. The best answer, database per service allows each service to be independent, gets deployed independently, gets the power to choose a different persistence technology per service. One thing which is possible is that each service has its own dedicated set of tables and development processes keep services to use other service&amp;rsquo;s tables.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;markdown-css-make-html-look-like-plain-text-http-mrcoles-com-demo-markdown-css&#34;&gt;&lt;a href=&#34;http://mrcoles.com/demo/markdown-css/&#34;&gt; Markdown.css - make HTML look like plain-text &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Css it looks like plain-text, despite being HTML. Inspect it with firebug or click on &lt;HTML/&gt; to see the markup. Lists they look like this it&amp;rsquo;s how you&amp;rsquo;d format them in pure markdown, if you took the time to indent when it wrapped to a new line. Ordered lists here&amp;rsquo;s one line from a numbered list here&amp;rsquo;s another in markdown, the actual numbers don&amp;rsquo;t matter-you can toggle this with the class markdown-ones Block quotes This is a blockquote that extendsto multiple lines. Code blocks )() Different headers h4 header h5 header h6 header. Since sharing this with people, I have learned about an older markdown CSS project that does the same sort of things in a very similar way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;8bitworkshop-an-ide-for-8-bit-retro-game-consoles-right-now-it-supports-the-atari-2600-http-8bitworkshop-com-platform-vcs-file-examples-2fhello&#34;&gt;&lt;a href=&#34;http://8bitworkshop.com/?platform=vcs&amp;amp;file=examples%2Fhello&#34;&gt; 8bitworkshop - an IDE for 8-bit retro game consoles. Right now it supports the Atari 2600 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Right now it supports the Atari 2600/VCS. Enter 6502 source code on the left, and we&amp;rsquo;ll assemble it and show you the result on the right. You can also select a sample program from the pulldown at the top-left of the page. Edits are saved to your browser&amp;rsquo;s local storage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;for-god-s-sake-secure-your-mongo-redis-etc-https-medium-com-shahinism-for-gods-sake-secure-your-mongo-redis-etc-4f310cf1bed2-m01e3zylf&#34;&gt;&lt;a href=&#34;https://medium.com/@shahinism/for-gods-sake-secure-your-mongo-redis-etc-4f310cf1bed2#.m01e3zylf&#34;&gt; For God’s sake, secure your Mongo/Redis/etc! &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Well apparently, I&amp;rsquo;m too late to the party, it is out there since 2009.Before finding Shodan, I always assumed that gathering data about system security, needs some basic knowledge about what you are looking for and at least access to some scanners like Nmap, but now, it&amp;rsquo;s just a click away! Use a simple redis-cli -h x.x.x.x to access any server on that list. In versions greater than 3, Mongo suggests that binding to global access 0.0.0.0 is unnecessary and warns you. For Redis, you will face a horrible story about older versions bound to global access, yet still, newer versions are not that much safe to just reveal its access to the world! Mongo provides an authentication system which is a good thing to have and will protect you from unwanted access. Not binding your database systems to global access and using an authentication system, will provide you a minimum required security. Ufw default deny #Deny all incoming requests$ ufw enableJust like that you can reject any unnecessary access to your server and buy yourself some confidence.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-little-book-about-os-development-http-littleosbook-github-io&#34;&gt;&lt;a href=&#34;http://littleosbook.github.io&#34;&gt; The little book about OS development &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In chapter 2 and 3 we set up our development environment and boot up our OS kernel in a virtual machine, eventually starting to write code in C. We continue in chapter 4 with writing to the screen and the serial port, and then we dive into segmentation in chapter 5 and interrupts and input in chapter 6. When developing an OS it is very convenient to be able to run your code in a virtual machine instead of on a physical computer, since starting your OS in a virtual machine is much faster than getting your OS onto a physical medium and then running it on a physical machine. The only difference between an interrupt handler and a trap handler is that the interrupt handler disables interrupts, which means you cannot get an interrupt while at the same time handling an interrupt. Since the CPU does not push the interrupt number on the stack it is a little tricky to write a generic interrupt handler. The OS can set up the programmable interval timer to raise an interrupt after a short period of time, for example 20 ms. In the interrupt handler for the PIT interrupt the OS will change the running process to a new one. Interrupting a process in kernel mode is a little bit different than interrupting a process in user mode, due to the way the CPU sets up the stack at interrupts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;threadtone-half-tone-circular-loom-image-with-threads-http-www-thevelop-nl-blog-2016-12-25-threadtone&#34;&gt;&lt;a href=&#34;http://www.thevelop.nl/blog/2016-12-25/ThreadTone/&#34;&gt; ThreadTone - half-tone circular loom image with threads &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;First a little image pre-processing is done to various input images for threading. To allow image processing on a pixel level we use openCV. Let&amp;rsquo;s get started and do some initial processing of the image. Import cv2 import numpy as np # Invert grayscale image def invertImage(image): return # Apply circular mask to image def maskImage(image, radius): y, x = np. Ogrid mask = x&lt;strong&gt;2 + y&lt;/strong&gt;2 &amp;gt; radius**2 image[mask] = 0 return image # Load image image = cv2. Once the image is of the correct size it is converted to a gray-scale image and inverted. Int)-1). Using the functions above the algorithm iteratively adds lines to the image until either the maximum number of lines is reached or the stopping criteria is reached. Move over the image in question to see the original image.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-art-of-defensive-programming-https-medium-com-web-engineering-vox-the-art-of-defensive-programming-6789a9743ed4&#34;&gt;&lt;a href=&#34;https://medium.com/web-engineering-vox/the-art-of-defensive-programming-6789a9743ed4&#34;&gt; The Art of Defensive Programming &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A first sight to Defensive ProgrammingWhy do I think Defensive Programming is a good approach to issue these problems in certain kind of projects? There are many definitions for Defensive Programming, it also depends on the level of &amp;ldquo;Security&amp;rdquo; and level of resources you need for your software projects. Defensive programming practices are often used where high availability, safety or security is needed - Wikipedia. Let&amp;rsquo;s explore some of my diluted key points in order to achieve a Defensive Programming approach. Don&amp;rsquo;t trust developersDefensive programming can be related to something called Defensive Driving. In Defensive Driving we assume that everyone around us can potentially and possibly make mistakes. The same concept applies to Defensive Programming where us, as developers shouldn&amp;rsquo;t trust others developers&amp;rsquo; code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;an-amazing-set-of-resources-for-optimizing-c-and-assembly-for-different-processors-and-operating-systems-http-www-agner-org-optimize&#34;&gt;&lt;a href=&#34;http://www.agner.org/optimize/&#34;&gt; An amazing set of resources for optimizing C++ and assembly for different processors and operating systems. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Optimizing software in C++: An optimization guide for Windows, Linux and Mac platforms This is an optimization manual for advanced C++ programmers. Optimizing subroutines in assembly language: An optimization guide for x86 platforms This is an optimization manual for advanced assembly language programmers and compiler makers. The microarchitecture of Intel, AMD and VIA CPUs: An optimization guide for assembly programmers and compiler makers This manual contains details about the internal working of various microprocessors from Intel, AMD and VIA. Topics include: Out-of-order execution, register renaming, pipeline structure, execution unit organization and branch prediction algorithms for each type of microprocessor. Intended as a source of reference for programmers who want to make function libraries compatible with multiple compilers or operating systems and for makers of compilers and other development tools who want their tools to be compatible with existing tools. Supports many different compilers under Windows, Linux, BSD and Mac OS X operating systems, 32 and 64 bits. The ForwardCom instruction set has variable-length vector registers and a special addressing mode that allows the software to automatically adapt to different microprocessors with different maximum vector lengths and make efficient loops through arrays regardless of whether the array size is divisible by the vector length. Pdf, size: 461263, last modified: 2016-Dec-08.Download. Test programs that I have used for my research.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;bearssl-constant-time-crypto-https-www-bearssl-org-constanttime-html&#34;&gt;&lt;a href=&#34;https://www.bearssl.org/constanttime.html&#34;&gt; BearSSL - Constant-Time Crypto &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Constant-time implementations are pieces of code that do not leak secret information through timing analysis. Even if a strong RNG is available at some level, bringing it to the implementation of a nominally deterministic algorithm can be troublesome in terms of internal API. For these reasons, BearSSL aims for constant-time implementations for all algorithms, or at least all implementations used by default. Using a signed type would be a bit weird, but it would make some sort of sense if the developer is in fact converting an existing implementation in Java to C code, because Java does not have unsigned types, and guarantees modular arithmetics. A very good source on how to implement constant-time operations in C is the Cryptography Coding Standard, a collaborative effort for describing issues related to secure implementation of cryptographic algorithms, and, more generally, of code that processes secret data elements. The &amp;ldquo;Big&amp;rdquo; implementation is a classic, table-based implementation, which is not constant-time. The &amp;ldquo;Size&amp;rdquo; values correspond to the total code footprint for CBC and CTR implementations, respectively. Current BearSSL implementation of elliptic curve cryptography uses the same generic big integer code as RSA. It thus inherits its constant-time characteristics.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;autovpn-a-script-to-create-an-openvpn-endpoint-on-aws-https-github-com-ttlequals0-autovpn&#34;&gt;&lt;a href=&#34;https://github.com/ttlequals0/autovpn&#34;&gt; autovpn - a Script to create an OpenVPN Endpoint on AWS &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Script that allows the easy creation of OpenVPN endpoints in any AWS region. Once instance is configured an OpenVPN configuration file is downloaded and ready to use. Execute autovpn with -C -k and -r options to deploy to AWS./autovpn -C -r us-east-1 -k macbook OpenVPN config files are downloaded to current working directory. EXAMPLES: Create OpenVPN endpoint: autovpn -C -r us-east-1 -k macbook Generate keypair in a region. Autovpn -G -r us-east-1 Get running instances autovpn -S -r us-east-1 Terminate OpenVPN endpoint autovpn -T -r us-east-1 -z i-b933e00c Using custom options autovpn -C -r us-east-1 -k macbook -a ami-fce3c696 -u ec2 user -i m3. Create on demand OpenVPN Endpoints in AWS that can easily be destroyed after done only pay for what you use. Autovpn -C -r &lt;region&gt; -k &lt;region&gt; vpnkey Start OpenVPN If everything is working, you should have the file &lt;region&gt; aws vpn.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;crystal-new-year-resolutions-for-2017-1-0-https-crystal-lang-org-2016-12-29-crystal-new-year-resolutions-for-2017-1-0-html&#34;&gt;&lt;a href=&#34;https://crystal-lang.org/2016/12/29/crystal-new-year-resolutions-for-2017-1-0.html&#34;&gt; Crystal new year resolutions for 2017: 1.0 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Our primary goal for Crystal is to see it thrive: we love to hear success stories of fellow devs, from many getting to know the language, to others using it at work to solve real-life problems. While Crystal is a beautiful language to play with, investing on using it at work to implement a system that should be maintained for the long run seems risky for many developers. And in line with our goal of seeing the language grow, we are setting a new year resolution to have Crystal reach the 1.0 milestone in 2017. Windows support: We are aware that there is a significant portion of the development community working on Windows who would like to get their hands on Crystal; also, Windows support would allow Crystal to be a good fit for developing cross-platform desktop apps. Part of the work before 1.0 will be to review them, and make sure they play along well with the rest of the language, as we don&amp;rsquo;t want to have any breaking changes to the macro language after 1.0. We want to make sure it&amp;rsquo;s clear what Crystal is and what it is not, especially with so many people coming directly from a dynamic languages background. We will focus not just in documentation but in tutorials as well, and assist in defining use cases for Crystal that could in turn shape the language itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;adopt-python-3-https-medium-com-broken-window-python-3-support-for-third-party-libraries-dcd7a156e5bd-u3u5hb34l&#34;&gt;&lt;a href=&#34;https://medium.com/broken-window/python-3-support-for-third-party-libraries-dcd7a156e5bd#.u3u5hb34l&#34;&gt; Adopt Python 3 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In the midst of all the celebration, many of you were still asking if it is safe to drop Python 2 and move over to Python 3. Let&amp;rsquo;s start with popular packages i.e packages that have the highest download counts on PyPI. Python 3 Wall of Superpowers and Python 3 Readiness are two websites that maintain a list of 200 and 360 most popular packages respectively. If you open these sites today, you will see that &lt;sup&gt;187&lt;/sup&gt;&amp;frasl;&lt;sub&gt;200&lt;/sub&gt;, and &lt;sup&gt;341&lt;/sup&gt;&amp;frasl;&lt;sub&gt;360&lt;/sub&gt; packages support Python 3. Total Python 3 coverage is at 72 %. That&amp;rsquo;s not so bad given that Python 3 came out in 2008 and 2020 is the official EOL of Python 2.7. The small packages shouldn&amp;rsquo;t hold anyone back from Python 3, because if you desperately need them at some point, you should be able to port them yourself without much overhead. A whopping 75 % of such Python2-only packages are small and easy-to-port. If you need them and there isn&amp;rsquo;t a Python 3 compatible alternative, then you are stuck with Python 2. You can adopt Python 3 and enjoy all the goodies that come along with it!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;writing-a-tiny-x86-bootloader-http-joebergeron-io-posts-post-two-html&#34;&gt;&lt;a href=&#34;http://joebergeron.io/posts/post_two.html&#34;&gt; Writing a Tiny x86 Bootloader &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Movecursor: push bp mov bp, sp pusha mov dx, [bp+4] # get the argument from the stack. Bp| = 2, |arg| = 2 mov ah, 0x02 # set cursor position mov bh, 0x00 # page 0 - doesn&amp;rsquo;t matter, we&amp;rsquo;re not using double-buffering int 0x10 popa mov sp, bp pop bp ret. The only thing that might look unusual is the mov dx, [bp+4]. We use some more labels and a conditional jump, but at risk of being too verbose, understanding the code is left as an excercise to the reader ;). print: push bp mov bp, sp pusha mov si, [bp+4] # grab the pointer to the data mov bh, 0x00 # page number, 0 again mov bl, 0x00 # foreground color, irrelevant - in text mode mov ah, 0x0E # print character to TTY.char: mov al, [si] # get the current char from our pointer position add si, 1 # keep incrementing si until we see a null char or al, 0 je. Bits 16 mov ax, 0x07C0 mov ds, ax mov ax, 0x07E0 # 07E0h =/10h, beginning of stack segment. Bp| = 2, |arg| = 2 mov ah, 0x02 # set cursor position mov bh, 0x00 # page 0 - doesn&amp;rsquo;t matter, we&amp;rsquo;re not using double-buffering int 0x10 popa mov sp, bp pop bp ret print: push bp mov bp, sp pusha mov si, [bp+4] # grab the pointer to the data mov bh, 0x00 # page number, 0 again mov bl, 0x00 # foreground color, irrelevant - in text mode mov ah, 0x0E # print character to TTY.char: mov al, [si] # get the current char from our pointer position add si, 1 # keep incrementing si until we see a null char or al, 0 je. Return: popa mov sp, bp pop bp ret msg: db &amp;ldquo;Oh boy do I sure love assembly!&amp;rdquo;, 0 times 510-($-$$) db 0 dw 0xAA55.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;we-re-bringing-gitlab-pages-to-the-community-edition-https-about-gitlab-com-2016-12-24-were-bringing-gitlab-pages-to-community-edition&#34;&gt;&lt;a href=&#34;https://about.gitlab.com/2016/12/24/were-bringing-gitlab-pages-to-community-edition/?&#34;&gt; We’re bringing GitLab Pages to the Community Edition &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The wider community asked us open source GitLab pages. Inspired by the holiday-spirit we&amp;rsquo;re happy to bring GitLab Pages to the Community Edition of GitLab. GitLab Pages allows you to host static websites straight from GitLab, with any kind of static site generator. My personal website is hosted through GitLab Pages on GitLab.com using my favorite static site generator Middleman. Until today, GitLab Pages was exclusive to the Enterprise Edition of GitLab. More than a hundred people voted and discussed bringing GitLab Pages to our open-source MIT-licensed Community Edition. In this case, I&amp;rsquo;m happy to announce that we will be bringing GitLab Pages to the Community Edition.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;why-physicists-still-use-fortran-http-www-moreisdifferent-com-2015-07-16-why-physicsts-still-use-fortran&#34;&gt;&lt;a href=&#34;http://www.moreisdifferent.com/2015/07/16/why-physicsts-still-use-fortran/&#34;&gt; Why physicists still use Fortran &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The heavy use of Fortran by physicists often confounds computer scientists and other outsiders who tend to view Fortran as a historical anachronism. Fortran has legacy codeGiven the long history of Fortran, it is no surprise that a large amount of legacy code in physics is written in Fortran. In a survey of Fortran users at the 2014 Supercomputing Convention, 100% of respondents said they thought they would still be using Fortran in five years. Anticipating the increased mixing of Fortran and C code, the Fortran 2015 specification will have greater features for code interoperability. The computer scientists who bash physicists for using Fortran fail to realize that Fortran remains uniquely suited for doing what it was named for - FOrmula TRANslation, or converting physics formulas into code. On the other hand, even the most modern Fortran standard retains backwards compatibility to Fortran 77 and most of Fortran 66. Further reading:&amp;ldquo;The Ideal HPC Programming Language&amp;rdquo; - A software engineer does a detailed analysis and concludes Fortran comes closest to the ideal language for HPC.Is Fortran faster than C? - The first answer to this StackOverflow question explains why Fortran&amp;rsquo;s assumption of no aliasing of memory makes it faster than C.Implicit None - a blog written by a Fortran enthusiast.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;writing-software-is-hard-https-m-signalvnoise-com-writing-software-is-hard-388d5e982ad9&#34;&gt;&lt;a href=&#34;https://m.signalvnoise.com/writing-software-is-hard-388d5e982ad9&#34;&gt; Writing software is hard &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Good software is uncommon because writing it is hard. This is classic cognitive dissonance: Accepting that writing software is hard, but expecting that all of it should be good. When we expect good software to be the most likely outcome from the hardship of writing it, we&amp;rsquo;re setting ourselves up for inevitable disappointment. Anyway, that&amp;rsquo;s a big preamble to arrive at a basic yet uncomfortable truth: Software frequently fails to be good because its creators simply aren&amp;rsquo;t competent enough software writers. To stop expecting that everyone who sets out to write software is going to end up with beautiful code and maintainable structures as the most likely outcome. The true purpose of finding the right tools is how it helps the software writer progress in their journey towards mastery. You&amp;rsquo;re more likely to do that if accept the odds: You will write poor software for a long time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;cryptography-coding-standard-https-cryptocoding-net-index-php-cryptography-coding-standard&#34;&gt;&lt;a href=&#34;https://cryptocoding.net/index.php/Cryptography_Coding_Standard&#34;&gt; Cryptography Coding Standard &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Welcome to the Cryptography Coding Standard homepage. The Cryptography Coding Standard is a set of coding rules to prevent the most common weaknesses in software cryptographic implementations. CCS was first presented and discussed at the Internet crypto workshop on Jan 23, 2013. Coding rules: the list of coding rules, with for each rule a statement of the problem addressed and one or more proposed solutions. These pages can also be accessed with the navigation bar on the left.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-to-find-size-of-an-array-in-c-without-sizeof-http-arjunsreedharan-org-post-69303442896-the-difference-between-arr-and-arr-how-to-find&#34;&gt;&lt;a href=&#34;http://arjunsreedharan.org/post/69303442896/the-difference-between-arr-and-arr-how-to-find&#34;&gt; How to find size of an array in C without sizeof &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Int n = sizeof(arr) / sizeof(arr );. Here we take the size of the array in bytes; then divide it by the size of an individual array element. Since an int takes up 4 bytes, points to the second element of the array. Taking the size of int into consideration, is 5 int-sizes away from the beginning of the array. Points to the memory address after the end of the array. &amp;amp;arr points to the entire array where as arr points to the first element of the array. Gives us the address after the end of the array and arr that of the first element of the array. A: C doesn&amp;rsquo;t allow access to memory beyond the end of the array.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;8bitworkshop-online-6502-ide-that-targets-the-atari-2600-http-8bitworkshop-com&#34;&gt;&lt;a href=&#34;http://8bitworkshop.com/&#34;&gt; 8bitworkshop: Online 6502 IDE that targets the Atari 2600 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Right now it supports the Atari 2600/VCS. Enter 6502 source code on the left, and we&amp;rsquo;ll assemble it and show you the result on the right. You can also select a sample program from the pulldown at the top-left of the page. Edits are saved to your browser&amp;rsquo;s local storage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;computer-science-from-the-bottom-up-https-www-bottomupcs-com&#34;&gt;&lt;a href=&#34;https://www.bottomupcs.com/&#34;&gt; Computer Science from the Bottom Up &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;moving-to-gitlab-github-censors-daplie-s-letsencrypt-module-https-daplie-com-articles-why-github-took-down-daplie&#34;&gt;&lt;a href=&#34;https://daplie.com/articles/why-github-took-down-daplie/&#34;&gt; Moving to GitLab: GitHub Censors Daplie&amp;rsquo;s LetsEncrypt Module &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;So I shoot off an email to support immediately and reach out to my network to see if I still know anyone working at github. If Github legally or morally doesn&amp;rsquo;t agree with the content that we&amp;rsquo;re publishing, it would be nice if you would have invited me to leave before taking down all of the documentation and web access to our various projects. Our end goal was never to give away total control of our assets and pay rent to someone else for access - which is what we&amp;rsquo;re all doing when we use GitHub. If you pay in dollars you can keep code private, otherwise you pay in bringing GitHub greater brand recognition and source that they&amp;rsquo;re free to use for their needs. If Github is going to tell me what a README should be used for, then are they also going to start telling me what a LICENSE should be used for too? or that I can&amp;rsquo;t use semicolons in my JavaScript? Our message reached our market in the &amp;ldquo;Right way&amp;rdquo; GitHub documented their policy GitHub communicated with us as a process, not just shut us down. There&amp;rsquo;s a good chance that when the higher-ups see the situation they&amp;rsquo;ll reinstate our account but&amp;hellip; the &amp;ldquo;Barrier of Convenience&amp;rdquo; that kept us tied to GitHub in the first place has been removed and we&amp;rsquo;re already gone.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2016 week 51 in programming</title>
      <link>http://iszlai.github.io/post/2016_week_51_in_programming/</link>
      <pubDate>Sat, 24 Dec 2016 10:59:20 +0200</pubDate>
      
      <guid>http://iszlai.github.io/post/2016_week_51_in_programming/</guid>
      <description>

&lt;h2 id=&#34;python-3-6-released-https-www-python-org-downloads-release-python-360&#34;&gt;&lt;a href=&#34;https://www.python.org/downloads/release/python-360/&#34;&gt; Python 3.6 released! &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;bootstrap-4-drops-ie9-support-and-goes-full-flexbox-https-github-com-twbs-bootstrap-pull-21389&#34;&gt;&lt;a href=&#34;https://github.com/twbs/bootstrap/pull/21389&#34;&gt; Bootstrap 4 drops IE9 support and goes full flexbox &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-programmer-s-guide-to-booking-a-concert-https-medium-com-sinahab-the-programmers-guide-to-booking-a-concert-e048a580735f-p36sl0rav&#34;&gt;&lt;a href=&#34;https://medium.com/@sinahab/the-programmers-guide-to-booking-a-concert-e048a580735f#.p36sl0rav&#34;&gt; The Programmer’s Guide to Booking a Concert &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The simple keyword search would not allow me to write a query like &amp;ldquo;Return any user based in San Francisco or Oakland who has less than 10k followers and has posted at least one track&amp;rdquo;. I could write an algorithm which, when seeded with a Soundcloud user, would pull all their followers and followings, and then in turn pull all followers and followings for each of those users. Musicians regularly have tens or hundreds of thousands of followers. Pulling all followers for all users was obviously a sub-optimal approach. By keeping track of who follows who, I could later use an algorithm like PageRank to find up-and-comers who do not yet have many followers but nevertheless have a vote of confidence from the community. Analyzing the NetworkI wrote a Python script to query the database for any Soundcloud user with at least 500 followers, at least one track, and based in San Francisco or Oakland. We followed them through joyful and melancholic moments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;creating-an-elf-virus-using-assembly-https-cranklin-wordpress-com-2016-12-26-how-to-create-a-virus-using-the-assembly-language&#34;&gt;&lt;a href=&#34;https://cranklin.wordpress.com/2016/12/26/how-to-create-a-virus-using-the-assembly-language/&#34;&gt; Creating an ELF Virus using Assembly &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;With even more luck, your virus would gain notoriety like the Whale Virus or the Michelangelo Virus. The way to achieve this is to: - change the entry point to the end of the text section - add the page size to the offset for the section header table - increase the file size and memory size of the text segment by the size of the virus code - for each program header that resides after the virus, increase the offset by the page size - find the last section header in the TEXT segment and increase the section size - for each section header that exists after the virus, increase the offset by the page size - insert the actual virus at the end of the text section - insert code that jumps to the original host entry point. The way we achieve this is: - add the virus size to the offset for the section header table, - in the text segment program header, decrease the virtual address by the size of the virus - in the text segment program header, increase the file size and memory size by the size of the virus - for each program header with an offset greater than the text segment, increase it by the size of the virus - change the entry point to the original text segment virtual address - the size of the virus - increase the program header offset by the size of the virus - insert the actual virus at the beginning of the text section. Increase the section header offset by the size of the virus - change the entry point to the end of the data segment - in the data segment program header, increase the page and memory size by the size of the virus - increase the bss offset by the size of the virus - set the executable permission bit on the DATA segment. A question you may ask yourself is, how does a virus grab its own code? How does a virus determine its own size? These are very good questions. Mov eax, 4 mov ecx, v start ; attach the virus portion mov edx, v stop - v start ; size of virus bytes int 80h. The size of the virus will calculate just fine, but the reference to the beginning of the virus code will fail after the first infection. Mov eax, 4 lea ecx, ; attach the virus portion mov edx, v stop - v start ; size of virus bytes int 80h. Notice that I didn&amp;rsquo;t include the system exit call in the virus.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-death-of-cyanogenmod-and-what-it-means-for-development-https-www-xda-developers-com-the-death-of-cyangenmod-and-whats-in-store-for-the-future&#34;&gt;&lt;a href=&#34;https://www.xda-developers.com/the-death-of-cyangenmod-and-whats-in-store-for-the-future/&#34;&gt; The Death of CyanogenMod and What it Means for Development &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Cyanogen Inc. has finally delivered a bullet to the brain - of CyanogenMod. CyanogenMod will no longer receive nightly builds after December 31st. But wait, what if the team simply finds another host to build nightlies? The CyanogenMod team will not continue official development on the project. Cyanogen Inc. owns the rights to the brand, so the CyanogenMod team has decided that it is no longer worth continuing development for the open source distribution without monetary or infrastructural support. Even if the team were to find an alternative revenue stream, the trouble isn&amp;rsquo;t worth it due to the potential legal issues that could be involved if Cyanogen Inc., and all brands that the company owns including CyanogenMod, were to be sold to another company. Plus, the team argues that the CyanogenMod brand has been tainted due to its association with Cyanogen, so new users may be wary of installing CyanogenMod. In this case, many devices may suffer a development drought as the development community largely relied on CyanogenMod to provide a stable branch that individuals could then fork. Whether or not the death of CyanogenMod spells the death of stable custom ROM development on certain devices will be up to developers and users alike.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;json-schema-faker-combines-json-schema-standard-with-fake-data-generators-allowing-users-to-generate-fake-data-that-conform-to-the-schema-http-json-schema-faker-js-org&#34;&gt;&lt;a href=&#34;http://json-schema-faker.js.org/&#34;&gt; JSON Schema Faker combines JSON Schema standard with fake data generators, allowing users to generate fake data that conform to the schema. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;linus-torvalds-what-is-acceptable-for-ffast-math-https-gcc-gnu-org-ml-gcc-2001-07-msg02150-html&#34;&gt;&lt;a href=&#34;https://gcc.gnu.org/ml/gcc/2001-07/msg02150.html&#34;&gt; Linus Torvalds - What is acceptable for -ffast-math? &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Most of the traditional heavy FP code tends to be much more about cache layout and good memory access patterns. Oh, round-to-zero is definitely acceptable in the world of &amp;ldquo;Who cares about IEEE, we want fast math, and we&amp;rsquo;ll use fixed arithmetic if the FP code is too slow&amp;rdquo;. What the hell do you call &amp;ldquo;Serious numerical coding&amp;rdquo;? Take a look at the computer game market today. It&amp;rsquo;s a lot more serious than most matematicians puttering around in their labs, let me tell you. The people you apparently consider serious are a lot more interested in fast communication and incredible memory bandwidth. I doubt you&amp;rsquo;ll find many of your &amp;ldquo;Serious numerical coding&amp;rdquo; people who would even notice the raw FP throughput. Look at SpecFP - CPU&amp;rsquo;s are fast enough, it spends most of its time waiting on memory.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-curated-list-of-awesome-bitwise-operations-and-tricks-https-github-com-keonkim-awesome-bits&#34;&gt;&lt;a href=&#34;https://github.com/keonkim/awesome-bits&#34;&gt; A curated list of awesome bitwise operations and tricks &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A curated list of awesome bitwise operations and tricks. These are techniques inspired by the fast inverse square root method. Frexp gives the 2n decomposition of a number, so that man, exp = frexp(x) means that man * 2exp = x and 0.5 &amp;lt;= man &amp;lt; 1. Fast nth Root of positive numbers via Infinite Series. Caveat: The 0x5c416 bias is given to center the method. If you plug in exp = -0.5, this gives the 0x5f3759df magic constant of the fast inverse root method. See these set of slides for a derivation of this method.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;threadtone-half-tone-circular-loom-image-with-threads-http-www-thevelop-nl-blog-2016-12-25-threadtone&#34;&gt;&lt;a href=&#34;http://www.thevelop.nl/blog/2016-12-25/ThreadTone/&#34;&gt; ThreadTone - half-tone circular loom image with threads &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;First a little image pre-processing is done to various input images for threading. To allow image processing on a pixel level we use openCV. Let&amp;rsquo;s get started and do some initial processing of the image. Import cv2 import numpy as np # Invert grayscale image def invertImage(image): return # Apply circular mask to image def maskImage(image, radius): y, x = np. Ogrid mask = x&lt;strong&gt;2 + y&lt;/strong&gt;2 &amp;gt; radius**2 image[mask] = 0 return image # Load image image = cv2. Once the image is of the correct size it is converted to a gray-scale image and inverted. Int)-1). Using the functions above the algorithm iteratively adds lines to the image until either the maximum number of lines is reached or the stopping criteria is reached. Move over the image in question to see the original image.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-art-of-defensive-programming-https-medium-com-web-engineering-vox-the-art-of-defensive-programming-6789a9743ed4&#34;&gt;&lt;a href=&#34;https://medium.com/web-engineering-vox/the-art-of-defensive-programming-6789a9743ed4&#34;&gt; The Art of Defensive Programming &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A first sight to Defensive ProgrammingWhy do I think Defensive Programming is a good approach to issue these problems in certain kind of projects? There are many definitions for Defensive Programming, it also depends on the level of &amp;ldquo;Security&amp;rdquo; and level of resources you need for your software projects. Defensive programming practices are often used where high availability, safety or security is needed - Wikipedia. Let&amp;rsquo;s explore some of my diluted key points in order to achieve a Defensive Programming approach. Don&amp;rsquo;t trust developersDefensive programming can be related to something called Defensive Driving. In Defensive Driving we assume that everyone around us can potentially and possibly make mistakes. The same concept applies to Defensive Programming where us, as developers shouldn&amp;rsquo;t trust others developers&amp;rsquo; code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;modern-garbage-collection-https-medium-com-octskyward-modern-garbage-collection-911ef4f8bd8e&#34;&gt;&lt;a href=&#34;https://medium.com/@octskyward/modern-garbage-collection-911ef4f8bd8e&#34;&gt; Modern garbage collection &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Program throughput: how much does your algorithm slow the program down? This is sometimes expressed as a percentage of CPU time spent doing collection vs useful work. The first garbage collection algorithms were designed for uniprocessor machines and programs that had small heaps. In these cases you are probably willing to use an algorithm that actually slows down your program whilst it runs in order to do collection in the background and with low pause times. Warmup time: in response to the tuning issue, some collectors dynamically adapt the young generation size by observing how the program runs in practice, but now pause times depend on how long the program is running for as well. Put simply, the more memory your program uses the more slowly memory gets freed up, and the more time your computer spends doing collection vs useful work. Pause distribution: any garbage collector that runs concurrently with your program can encounter what the Java world calls a &amp;ldquo;Concurrent mode failure&amp;rdquo;: your program creates garbage faster than the GC threads can clean it up. Go optimises for pause times as the expense of throughput to such an extent that it seems willing to slow down your program by almost any amount in order to get even just slightly faster pauses.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;rocket-a-web-framework-for-rust-https-rocket-rs&#34;&gt;&lt;a href=&#34;https://rocket.rs/&#34;&gt; Rocket: a web framework for Rust &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;an-amazing-set-of-resources-for-optimizing-c-and-assembly-for-different-processors-and-operating-systems-http-www-agner-org-optimize&#34;&gt;&lt;a href=&#34;http://www.agner.org/optimize/&#34;&gt; An amazing set of resources for optimizing C++ and assembly for different processors and operating systems. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Optimizing software in C++: An optimization guide for Windows, Linux and Mac platforms This is an optimization manual for advanced C++ programmers. Optimizing subroutines in assembly language: An optimization guide for x86 platforms This is an optimization manual for advanced assembly language programmers and compiler makers. The microarchitecture of Intel, AMD and VIA CPUs: An optimization guide for assembly programmers and compiler makers This manual contains details about the internal working of various microprocessors from Intel, AMD and VIA. Topics include: Out-of-order execution, register renaming, pipeline structure, execution unit organization and branch prediction algorithms for each type of microprocessor. Intended as a source of reference for programmers who want to make function libraries compatible with multiple compilers or operating systems and for makers of compilers and other development tools who want their tools to be compatible with existing tools. Supports many different compilers under Windows, Linux, BSD and Mac OS X operating systems, 32 and 64 bits. The ForwardCom instruction set has variable-length vector registers and a special addressing mode that allows the software to automatically adapt to different microprocessors with different maximum vector lengths and make efficient loops through arrays regardless of whether the array size is divisible by the vector length. Pdf, size: 461263, last modified: 2016-Dec-08.Download. Test programs that I have used for my research.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;bearssl-constant-time-crypto-https-www-bearssl-org-constanttime-html&#34;&gt;&lt;a href=&#34;https://www.bearssl.org/constanttime.html&#34;&gt; BearSSL - Constant-Time Crypto &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Constant-time implementations are pieces of code that do not leak secret information through timing analysis. Even if a strong RNG is available at some level, bringing it to the implementation of a nominally deterministic algorithm can be troublesome in terms of internal API. For these reasons, BearSSL aims for constant-time implementations for all algorithms, or at least all implementations used by default. Using a signed type would be a bit weird, but it would make some sort of sense if the developer is in fact converting an existing implementation in Java to C code, because Java does not have unsigned types, and guarantees modular arithmetics. A very good source on how to implement constant-time operations in C is the Cryptography Coding Standard, a collaborative effort for describing issues related to secure implementation of cryptographic algorithms, and, more generally, of code that processes secret data elements. The &amp;ldquo;Big&amp;rdquo; implementation is a classic, table-based implementation, which is not constant-time. The &amp;ldquo;Size&amp;rdquo; values correspond to the total code footprint for CBC and CTR implementations, respectively. Current BearSSL implementation of elliptic curve cryptography uses the same generic big integer code as RSA. It thus inherits its constant-time characteristics.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;autovpn-a-script-to-create-an-openvpn-endpoint-on-aws-https-github-com-ttlequals0-autovpn&#34;&gt;&lt;a href=&#34;https://github.com/ttlequals0/autovpn&#34;&gt; autovpn - a Script to create an OpenVPN Endpoint on AWS &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Script that allows the easy creation of OpenVPN endpoints in any AWS region. It spins up a tagged ec2 instance and configures OpenVPN software. Once instance is configured an OpenVPN configuration file is downloaded and ready to use. Additional functionality includes specifying instance type, generate ssh keypairs, specify custom ami, change login user and more to come. Execute autovpn with -C -k and -r options to deploy to AWS./autovpn -C -r us-east-1 -k macbook OpenVPN config files are downloaded to current working directory. EXAMPLES: Create OpenVPN endpoint: autovpn -C -r us-east-1 -k macbook Generate keypair in a region. Autovpn -G -r us-east-1 Get running instances autovpn -S -r us-east-1 Terminate OpenVPN endpoint autovpn -T -r us-east-1 -z i-b933e00c Using custom options autovpn -C -r us-east-1 -k macbook -a ami-fce3c696 -u ec2 user -i m3.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;adopt-python-3-https-medium-com-broken-window-python-3-support-for-third-party-libraries-dcd7a156e5bd-u3u5hb34l&#34;&gt;&lt;a href=&#34;https://medium.com/broken-window/python-3-support-for-third-party-libraries-dcd7a156e5bd#.u3u5hb34l&#34;&gt; Adopt Python 3 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In the midst of all the celebration, many of you were still asking if it is safe to drop Python 2 and move over to Python 3. Let&amp;rsquo;s start with popular packages i.e packages that have the highest download counts on PyPI. Python 3 Wall of Superpowers and Python 3 Readiness are two websites that maintain a list of 200 and 360 most popular packages respectively. If you open these sites today, you will see that &lt;sup&gt;187&lt;/sup&gt;&amp;frasl;&lt;sub&gt;200&lt;/sub&gt;, and &lt;sup&gt;341&lt;/sup&gt;&amp;frasl;&lt;sub&gt;360&lt;/sub&gt; packages support Python 3. Total Python 3 coverage is at 72 %. That&amp;rsquo;s not so bad given that Python 3 came out in 2008 and 2020 is the official EOL of Python 2.7. The small packages shouldn&amp;rsquo;t hold anyone back from Python 3, because if you desperately need them at some point, you should be able to port them yourself without much overhead. A whopping 75 % of such Python2-only packages are small and easy-to-port. If you need them and there isn&amp;rsquo;t a Python 3 compatible alternative, then you are stuck with Python 2. You can adopt Python 3 and enjoy all the goodies that come along with it!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;hacksaw-academy-interactive-platform-where-you-can-quickly-learn-html-css-and-javascript-by-building-functional-apps-https-hacksaw-academy&#34;&gt;&lt;a href=&#34;https://hacksaw.academy&#34;&gt; Hacksaw Academy - Interactive platform where you can quickly learn HTML, CSS, and Javascript by building functional apps &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;announcing-rust-1-14-https-blog-rust-lang-org-2016-12-22-rust-1-14-html&#34;&gt;&lt;a href=&#34;https://blog.rust-lang.org/2016/12/22/Rust-1.14.html&#34;&gt; Announcing Rust 1.14 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The Rust team is happy to announce the latest version of Rust, 1.14.0. Rust is a systems programming language focused on safety, speed, and concurrency. As always, you can install Rust 1.14.0 from the appropriate page on our website, and check out the detailed release notes for 1.14.0 on GitHub. One of the biggest features in Rust 1.14 isn&amp;rsquo;t actually in the language or compiler: the rustup tool has reached a 1.0 release, and is now the recommended way to install Rust from the project directly. Rustup installs The Rust Programming Language from the official release channels, enabling you to easily switch between stable, beta, and nightly compilers and keep them updated. The community has been doing interesting, experimental work in this area: see Jan-Erik&amp;rsquo;s slides for the workshop he ran at Rust Belt Rust for some examples, or check out Tim&amp;rsquo;s example of the classic TodoMVC project. Xargo allows for easy cross-compilation of Rust to bare-metal targets.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;google-employee-sues-company-for-illegal-confidentiality-policies-that-violate-labor-laws-http-www-androidcentral-com-google-employee-sues-company-illegal-confidentiality-policies-violate-labor-laws&#34;&gt;&lt;a href=&#34;http://www.androidcentral.com/google-employee-sues-company-illegal-confidentiality-policies-violate-labor-laws&#34;&gt; Google employee sues company for &amp;lsquo;illegal&amp;rsquo; confidentiality policies that violate labor laws &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A Google product manager has accused the company of violating California labor laws via its restrictive confidentiality policies. According to The Information, the employee filed a suit with the California Superior Court in San Francisco, alleging that Google is running an internal &amp;ldquo;Spying program&amp;rdquo; that encourages employees to report co-workers suspected of leaking information to the media. The lawsuit also states that Google&amp;rsquo;s policies prohibit employees from reporting illegal activities within the company, even to its own attorneys. Weirdly, there&amp;rsquo;s also a policy that prevents employees from writing a novel about working for a Silicon Valley corporation without getting approval from Google. One of the reasons for the stringent policies is to ensure that confidential information isn&amp;rsquo;t leaked to the press. The suit also says that confidential information is classified as &amp;ldquo;Everything at Google,&amp;rdquo; which prevents employees from talking about their workplace conditions with the &amp;ldquo;Press, members of the investment community, partners, or anyone else outside of Google.&amp;rdquo; If Google is found to be guilty of the alleged 12 violations of California&amp;rsquo;s labor laws, it could pay out as much as $3.8 billion in total, with 75% of the penalty collected by the state and the rest distributed to Google&amp;rsquo;s 65,000 employees.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;we-re-bringing-gitlab-pages-to-the-community-edition-https-about-gitlab-com-2016-12-24-were-bringing-gitlab-pages-to-community-edition&#34;&gt;&lt;a href=&#34;https://about.gitlab.com/2016/12/24/were-bringing-gitlab-pages-to-community-edition/?&#34;&gt; We’re bringing GitLab Pages to the Community Edition &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The wider community asked us open source GitLab pages. Inspired by the holiday-spirit we&amp;rsquo;re happy to bring GitLab Pages to the Community Edition of GitLab. GitLab Pages allows you to host static websites straight from GitLab, with any kind of static site generator. My personal website is hosted through GitLab Pages on GitLab.com using my favorite static site generator Middleman. Until today, GitLab Pages was exclusive to the Enterprise Edition of GitLab. More than a hundred people voted and discussed bringing GitLab Pages to our open-source MIT-licensed Community Edition. In this case, I&amp;rsquo;m happy to announce that we will be bringing GitLab Pages to the Community Edition.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;cryptography-coding-standard-https-cryptocoding-net-index-php-cryptography-coding-standard&#34;&gt;&lt;a href=&#34;https://cryptocoding.net/index.php/Cryptography_Coding_Standard&#34;&gt; Cryptography Coding Standard &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Welcome to the Cryptography Coding Standard homepage. The Cryptography Coding Standard is a set of coding rules to prevent the most common weaknesses in software cryptographic implementations. CCS was first presented and discussed at the Internet crypto workshop on Jan 23, 2013. Coding rules: the list of coding rules, with for each rule a statement of the problem addressed and one or more proposed solutions. These pages can also be accessed with the navigation bar on the left.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;computer-science-from-the-bottom-up-https-www-bottomupcs-com&#34;&gt;&lt;a href=&#34;https://www.bottomupcs.com/&#34;&gt; Computer Science from the Bottom Up &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;8bitworkshop-online-6502-ide-that-targets-the-atari-2600-http-8bitworkshop-com&#34;&gt;&lt;a href=&#34;http://8bitworkshop.com/&#34;&gt; 8bitworkshop: Online 6502 IDE that targets the Atari 2600 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Right now it supports the Atari 2600/VCS. Enter 6502 source code on the left, and we&amp;rsquo;ll assemble it and show you the result on the right. You can also select a sample program from the pulldown at the top-left of the page.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;is-mathematics-the-oldest-legacy-system-https-www-oreilly-com-ideas-striking-parallels-between-mathematics-and-software-engineering&#34;&gt;&lt;a href=&#34;https://www.oreilly.com/ideas/striking-parallels-between-mathematics-and-software-engineering&#34;&gt; Is mathematics the oldest legacy system? &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The design of mathematics encompasses a number of other principles that are also present in software engineering. Let&amp;rsquo;s now take a look at the real number system. Throw in the operations of multiplication and division, and we get the rational numbers, which is now a field. The story might end here, and we&amp;rsquo;d all be happy: we have a bunch of numbers and a bunch of operations, we can apply those operations to those numbers and still end up with the same set of numbers. In the end, one might say that there is nothing real about the real numbers - it&amp;rsquo;s all a construction! From an alternative perspective, mathematics contains striking parallels with software engineering. By becoming more familiar with the landscape of mathematics, we can help with the cross pollination of ideas between mathematics and software engineering.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;is-this-still-relevant-gce-vs-aws-in-2016-why-you-should-never-use-amazon-https-thehftguy-com-2016-06-15-gce-vs-aws-in-2016-why-you-should-never-use-amazon&#34;&gt;&lt;a href=&#34;https://thehftguy.com/2016/06/15/gce-vs-aws-in-2016-why-you-should-never-use-amazon/&#34;&gt; Is this still relevant? &amp;ldquo;GCE vs AWS in 2016: Why you should NEVER use Amazon!&amp;rdquo; &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;We are running hundreds of instances on AWS, and we&amp;rsquo;ve been doing so for some time, growing at a sustained pace. The following highlights many issues encountered day to day on AWS so that [hopefully] you don&amp;rsquo;t do the same mistakes we&amp;rsquo;ve done by picking AWS. There are a lot of clouds: GCE, AWS, Azure, Digital Ocean, RackSpace, SoftLayer, OVH, GoDaddy Check out our article Choosing a Cloud Provider: AWS vs GCE vs SoftLayer vs DigitalOcean vs. We&amp;rsquo;ll focus only on GCE and AWS in this article. Base instance plus storage cost Add provisioned IOPS for databases Add local SSD Add 10% on top of everything for Premium Support Add 10% for dedicated instances or dedicated hosts. Base instance plus storage cost Enjoy fast and dependable IOPS out-of-the-box on remote SSD volumes Add local SSD Enjoy automatic discount for sustained usage AWS IO are expensive and inconsistent EBS SSD volumes: IOPS, and P-IOPS. We are forced to pay for Provisioned-IOPS whenever we need dependable IO. The P-IOPS are NOT really faster. Local SSD storage is only available via the i2 instances family which are the most expensive instances on AWS. There is no granularity possible. &amp;ldquo;Dedicated instances are Amazon EC2 instances that run in a virtual private cloud on hardware that&amp;rsquo;s dedicated to a single customer. Your Dedicated instances are physically isolated at the host hardware level from your instances that aren&amp;rsquo;t Dedicated instances and from instances that belong to other AWS accounts.&amp;rdquo; What GCE does by comparison is a PURELY AWESOME MONTHLY AUTOMATIC DISCOUNT. Instances hours are counted at the end of every month and discount is applied automatically.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2016 week 50 in programming</title>
      <link>http://iszlai.github.io/post/2016_week_50_in_programming/</link>
      <pubDate>Sat, 17 Dec 2016 10:59:04 +0200</pubDate>
      
      <guid>http://iszlai.github.io/post/2016_week_50_in_programming/</guid>
      <description>

&lt;h2 id=&#34;amd-creates-a-tool-to-convert-cuda-code-to-portable-vendor-neutral-c-https-github-com-gpuopen-professionalcompute-tools-hip&#34;&gt;&lt;a href=&#34;https://github.com/GPUOpen-ProfessionalCompute-Tools/HIP&#34;&gt; AMD creates a tool to convert CUDA code to portable, vendor-neutral C++ &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;HIP allows developers to convert CUDA code to portable C++. The same source code can be compiled to run on NVIDIA or AMD GPUs. HIP provides porting tools which make it easy to port existing CUDA codes to the HIP layer, with no loss of performance as compared to the original CUDA application. HIP is not intended to be a drop-in replacement for CUDA, and developers should expect to do some manual coding and performance tuning work to complete the port. Programmers familiar with CUDA will also be able to quickly learn and start coding with the HIP API. Compute kernels are launched with the &amp;ldquo;HipLaunchKernel&amp;rdquo; macro call. On the Nvidia CUDA platform, HIP provides header file which translate from the HIP runtime APIs to CUDA runtime APIs. The header file contains mostly inlined functions and thus has very low overhead - developers coding in HIP should expect the same perforamnce as coding in native CUDA. The code is then compiled with nvcc, the standard C++ compiler provided with the CUDA SDK. Developers can use any tools supported by the CUDA SDK including the CUDA profiler and debugger. The HIP runtime implements HIP streams, events, and memory APIs, and is a object library that is linked with the application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;pixar-s-use-of-mass-spring-systems-pixar-in-a-box-https-www-youtube-com-watch-v-yeyw8tiwlg8&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=YeYW8TIWLG8&#34;&gt; Pixar&amp;rsquo;s use of mass-spring systems (Pixar in a Box) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;oracle-is-massively-ramping-up-audits-of-java-customers-it-claims-are-in-breach-of-its-licences-six-years-after-it-bought-sun-microsystems-http-www-theregister-co-uk-2016-12-16-oracle-targets-java-users-non-compliance&#34;&gt;&lt;a href=&#34;http://www.theregister.co.uk/2016/12/16/oracle_targets_java_users_non_compliance&#34;&gt; Oracle is massively ramping up audits of Java customers it claims are in breach of its licences – six years after it bought Sun Microsystems &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Oracle is massively ramping up audits of Java customers it claims are in breach of its licences - six years after it bought Sun Microsystems. Oracle bought Java with Sun Microsystems in 2010 but only now is its License Management Services division chasing down people for payment, we are told by people familiar with the matter. The Register has learned of one customer in the retail industry with 80,000 PCs that was informed by Oracle it was in breach of its Java agreement. That perception dates from the time of Sun; Java under Sun was available for free - as it is under Oracle - but for a while Sun did charge a licensee fee to companies like IBM and makers of Blu-ray players, though for the vast majority, Java came minus charge. Java SE is a broad and all-encompassing download that includes Java SE Advanced Desktop, introduced by Oracle in February 2014, and Java SE Advanced and Java SE Suite, introduced by Oracle in May 2011. If you want to roll out Java SE in a big deployment, as you would following development of your app, then you&amp;rsquo;ll need Microsoft Windows Installer Enterprise JRE Installer - and that&amp;rsquo;s not part of the free Java SE. &amp;ldquo;People aren&amp;rsquo;t aware,&amp;rdquo; Guarente told The Reg. Why is Oracle acting now, six years into owning Java through the Sun acquisition?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;dear-hackers-ubuntu-s-app-crash-reporter-will-happily-execute-your-evil-code-on-a-victim-s-box-http-www-theregister-co-uk-2016-12-15-researcher-details-justpatched-pwnage-flaws-in-ubuntu&#34;&gt;&lt;a href=&#34;http://www.theregister.co.uk/2016/12/15/researcher_details_justpatched_pwnage_flaws_in_ubuntu/&#34;&gt; Dear hackers, Ubuntu&amp;rsquo;s app crash reporter will happily execute your evil code on a victim&amp;rsquo;s box &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Researcher Donncha O&amp;rsquo;Cearbhaill, who discovered and privately reported the vulnerabilities to the Ubuntu team, said that a successful exploit of the bugs could allow an attacker to remotely execute code by tricking a victim into downloading a maliciously booby-trapped file. In this case, O&amp;rsquo;Cearbhaill says, his exploit code takes advantage of the Apport crash reporting tool on Ubuntu. By exploiting the flaws, an attacker would have the ability to gain control over the targeted Ubuntu box simply by convincing them to open a single document that then targets the flaws in the crash reporter. O&amp;rsquo;Cearbhaill has provided a copy of the source code for his proof-of-concept on GitHub, as well as a video showing the exploit in action - opening a ZIP archive from the internet containing a malicious crash report runs a calculator program. &amp;ldquo;I would encourage all security researchers to audit free and open source software if they have time on their hands,&amp;rdquo; the researcher said. At the same time, O&amp;rsquo;Caerbhaill notes the reality that many researchers face the dilemma of selling their discoveries to third-party brokers who may not immediately report the flaws or find other nefarious uses for the zero-day vulnerabilities. &amp;ldquo;To improve security for everyone we need to find sustainable ways to incentivize researchers to find and disclose issues and to get bugs fixed,&amp;rdquo; said O&amp;rsquo;Caerbhaill.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;visual-studio-code-1-8-released-http-code-visualstudio-com-updates-v1-8&#34;&gt;&lt;a href=&#34;http://code.visualstudio.com/updates/v1_8&#34;&gt; Visual Studio Code 1.8 released &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Node.js Debugging - Just My Code, load environment variables from files, help for sourcemaps. Using multi-target debugging is very simple: after you&amp;rsquo;ve started a first debug session, VS Code no longer blocks you from launching another session. In the November release, only the built-in Node.js debuggers contribute snippets. Use the &amp;lsquo;old&amp;rsquo; debugger node when debugging Node.js versions &amp;lt; 6.3 and the new debugger node2 for versions &amp;gt;= 6.3. The VS Code Node debugger now supports to load environment variables from a file and passes them to the node runtime. The OutputEvent type now supports to send structured objects to the debug console and VS Code renders them as expandable objects. If a debug adapter opts into this, the VS Code debugger UI no longer implements the Restart action by terminating and restarting the debug adapter but instead sends a RestartRequest to the adapter.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;jetbrains-gogland-capable-and-ergonomic-go-ide-https-www-jetbrains-com-go&#34;&gt;&lt;a href=&#34;https://www.jetbrains.com/go/&#34;&gt; JetBrains Gogland: Capable and Ergonomic Go IDE &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks for your interest in being a part of the private Gogland Early Access Program! We&amp;rsquo;ve added you to the list and will email you a link to a fresh Gogland EAP build once your request is approved. The IDE is still in its early development stages so it may take some time before a working build is available for your particular environment and requirements.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-discord-handles-push-request-bursts-of-over-a-million-per-minute-with-elixir-s-genstage-https-discord-engineering-how-discord-handles-push-request-bursts-of-over-a-million-per-minute-with-elixirs-genstage-8f899f0221b4-u29lfn92n&#34;&gt;&lt;a href=&#34;https://discord.engineering/how-discord-handles-push-request-bursts-of-over-a-million-per-minute-with-elixirs-genstage-8f899f0221b4#.u29lfn92n&#34;&gt; How Discord handles push request bursts of over a million per minute with Elixir’s GenStage &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Stage 1 - the Push Collector: The Push Collector is a producer that collects push requests. Stage 2 - the Pusher: The Pusher is a consumer that demands push requests from the Push Collector and pushes the requests to Firebase. The Push Collector never sends a request to a Pusher unless the Pusher asks for one. Load-sheddingSince the Pushers put back-pressure on the Push Collector, we now have a potential bottleneck at the Push Collector. In the Push Collector, we specify how many push requests to buffer. If there are way too many messages moving through the system and the buffer fills up then the Push Collector will shed incoming push requests. The bottom graph is the number of push requests buffered by the Push Collector.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;i-am-tired-of-makefiles-https-dmitryfrank-com-blog-2016-1211-i-am-tired-of-makefiles&#34;&gt;&lt;a href=&#34;https://dmitryfrank.com/blog/2016/1211_i_am_tired_of_makefiles&#34;&gt; I am tired of Makefiles &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;At Cesanta, we use Makefiles to build our firmwares, libraries, and perform other things. I want my incremental builds to be reliable, and I want to be able to reuse my Makefiles as needed. A &amp;hellip;. Now, we have a project app with a separate Makefile, and we want to use mylib. We don&amp;rsquo;t want the app target to always get rebuilt. The app won&amp;rsquo;t be rebuilt, even though we want it to. My point is that if the author of makefile wants some variable to be overriddable, they should just use FOO ?= foo. There are plenty of other issues, some of them require ancient wisdom to write Makefiles which are correct, but I got used to most of them.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;net-core-2-0-and-net-standard-2-0-planned-for-spring-2017-link-to-updated-roadmap-https-github-com-dotnet-core-blob-master-roadmap-md&#34;&gt;&lt;a href=&#34;https://github.com/dotnet/core/blob/master/roadmap.md&#34;&gt; .NET Core 2.0 and .NET Standard 2.0 planned for Spring 2017 (link to updated Roadmap) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;NET Core 1.0 tooling to RTM quality for the Visual Studio 2017 RTM. However, we are also starting to think of the next version of the runtime. NET Core version to target, to change the version of. NET Core repository and GitHub and build the product. Ship Dates Milestone Release Date.NET Core 2.0 Spring 2017.NET Standard 2.0 Spring 2017.NET Core is a general purpose, modular, cross-platform and open source implementation of. Microsoft provides commercially reasonable support for ASP.NET Core 1.0,.NET Core 1.0 and Entity Framework Core 1.0 on the OS and Version detailed in the table above. Microsoft provides support for ASP.NET Core 1.0,.NET Core 1.0 and Entity Framework Core 1.0 on Windows, Linux, and Mac OS X. For an explanation of available support options, please visit Support for Business and Developers. NET Core will ship as part of many Linux distros and we are actively working with key partners in the Linux community to make it natural for.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;dccp-the-socket-type-you-probably-never-heard-of-https-www-anmolsarma-in-post-dccp&#34;&gt;&lt;a href=&#34;https://www.anmolsarma.in/post/dccp/&#34;&gt; DCCP: The socket type you probably never heard of &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;DCCP makes use of Explicit Congestion Notification but it is transparent the application. DCCP can cater to the different needs of applications by allowing applications to negotiate the congestion control schemes. DCCP congestion control schemes are denoted by Congestion Control Identifiers - CCIDs. The largest packet size that does not require fragmentation anywhere along a path is referred to as the path maximum transmission unit or PMTU. Applications can usually get better error tolerance by producing packets smaller than the PMTU. DCCP defines a maximum packet size based on the PMTU and the congestion control scheme used for each connection. Be sure to enable all the CCIDs in the kernel configuration in Networking Support -&amp;gt; Networking Options -&amp;gt; The DCCP Protocol -&amp;gt; DCCP CCIDs Configuration. Like the Debian Installation Guide Says, &amp;ldquo;Don&amp;rsquo;t be afraid to try compiling the kernel. It&amp;rsquo;s fun and profitable.&amp;rdquo; For now, Linux is the only operating system supporting native DCCP, unless you count the patch for an ancient version of FreeBSD. Example in C. The server and client look almost exactly the same as their TCP counterparts with the exception fo the socket type and setting of the service code. Although Linux DCCP NAT is functional, many intermediate boxes will probably just drop DCCP traffic.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;well-what-started-as-an-r-programmerhumor-joke-is-now-a-real-programming-language-enter-coding-a-stack-based-markup-language-https-github-com-molarmanful-codinglang&#34;&gt;&lt;a href=&#34;https://github.com/molarmanful/codinglang&#34;&gt; Well, what started as an r/ProgrammerHumor joke is now a real programming language. Enter Coding, a stack-based markup language. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Coding has 2 stacks, one for strings and another for HTML output. Parentheses push to the string stack; for example, would push asdf to the string stack. The standard library has a function S that can push from the string stack to the output stack. &amp;gt;: Pops top string stack element, wraps with a tag name, and pushes to output stack. Adds an attribute to the top output stack element using the popped top string stack element. S: Push the top string stack element to the output stack in text form. Se: Push the HTML string form of the top output stack element to the string stack.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;oracle-finally-targets-java-non-payers-six-years-after-plucking-sun-http-www-theregister-co-uk-2016-12-16-oracle-targets-java-users-non-compliance&#34;&gt;&lt;a href=&#34;http://www.theregister.co.uk/2016/12/16/oracle_targets_java_users_non_compliance/&#34;&gt; Oracle finally targets Java non-payers – six years after plucking Sun &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Oracle is massively ramping up audits of Java customers it claims are in breach of its licences - six years after it bought Sun Microsystems. Oracle bought Java with Sun Microsystems in 2010 but only now is its License Management Services division chasing down people for payment, we are told by people familiar with the matter. The Register has learned of one customer in the retail industry with 80,000 PCs that was informed by Oracle it was in breach of its Java agreement. That perception dates from the time of Sun; Java under Sun was available for free - as it is under Oracle - but for a while Sun did charge a licensee fee to companies like IBM and makers of Blu-ray players, though for the vast majority, Java came minus charge. Java SE is a broad and all-encompassing download that includes Java SE Advanced Desktop, introduced by Oracle in February 2014, and Java SE Advanced and Java SE Suite, introduced by Oracle in May 2011. If you want to roll out Java SE in a big deployment, as you would following development of your app, then you&amp;rsquo;ll need Microsoft Windows Installer Enterprise JRE Installer - and that&amp;rsquo;s not part of the free Java SE. &amp;ldquo;People aren&amp;rsquo;t aware,&amp;rdquo; Guarente told The Reg. Why is Oracle acting now, six years into owning Java through the Sun acquisition?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;nist-no-character-requirements-for-passwords-and-no-frequent-password-changes-https-pages-nist-gov-800-63-3-sp800-63b-html-memorized-secret-verifiers&#34;&gt;&lt;a href=&#34;https://pages.nist.gov/800-63-3/sp800-63b.html#memorized-secret-verifiers&#34;&gt; NIST: No character requirements for passwords and no frequent password changes &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Authenticator Assurance Level 2 - AAL 2 provides high confidence that the claimant controls the authenticator registered to a subscriber. The authenticator secret is the canonical example of a long term authentication secret, while the authenticator output, if it is different from the authenticator secret, is usually a short term authentication secret. At AAL 2, it is required to have a multi-factor authenticator, or a combination of two single-factor authenticators. Multi-factor OTP authenticators operate in a similar manner to single-factor OTP authenticators, except that they require the entry of either a memorized secret or use of a biometric to obtain a password from the authenticator. In contrast, authenticators that involve the manual entry of an authenticator output, such as out of band and one-time password authenticators, SHALL NOT be considered verifier impersonation resistant because they assume the vigilance of the claimant to determine that they are communicating with the intended verifier. Loss, theft, damage to and unauthorized duplication of an authenticator are handled similarly, because in most cases one must assume that a lost authenticator has potentially been stolen or recovered by someone that is not the legitimate claimant of the authenticator. To facilitate secure reporting of loss or theft of or damage to an authenticator, the CSP SHOULD provide the subscriber a method to authenticate to the CSP using a backup authenticator; either a memorized secret or a physical authenticator MAY be used for this purpose.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;github-is-building-a-coder-s-paradise-it-s-not-coming-cheap-the-vc-backed-unicorn-startup-lost-66-million-in-nine-months-of-2016-financial-documents-show-https-www-bloomberg-com-news-articles-2016-12-15-github-is-building-a-coder-s-paradise-it-s-not-coming-cheap&#34;&gt;&lt;a href=&#34;https://www.bloomberg.com/news/articles/2016-12-15/github-is-building-a-coder-s-paradise-it-s-not-coming-cheap&#34;&gt; GitHub Is Building a Coder’s Paradise. It’s Not Coming Cheap - The VC-backed unicorn startup lost $66 million in nine months of 2016, financial documents show &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;GitHub Inc. is losing money through profligate spending and has stood by as new entrants emerged in a software category it essentially gave birth to, according to people familiar with the business and financial paperwork reviewed by Bloomberg. GitHub management may have been a little too eager to spend the new money. GitHub lost $27 million in the fiscal year that ended in January 2016, according to an income statement seen by Bloomberg. That&amp;rsquo;s more than twice as much lost in any nine-month time frame by Twilio Inc., another maker of software tools founded the same year as GitHub. Wanstrath started GitHub with three friends during the recession of 2008 and bootstrapped the business for four years. GitHub quickly became essential to the code-writing process at technology companies of all sizes and gave birth to a new generation of programmers by hosting their open-source code for free. GitHub says it has 18 million users, and its Enterprise service is used by half of the world&amp;rsquo;s 10 highest-grossing companies, including Wal-Mart Stores Inc. and Ford Motor Co. Some longtime GitHub fans weren&amp;rsquo;t happy with the new direction, though.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-visual-and-interactive-guide-to-the-basics-of-neural-networks-meant-mainly-for-developers-with-no-ai-experience-https-jalammar-github-io-visual-interactive-guide-basics-neural-networks&#34;&gt;&lt;a href=&#34;https://jalammar.github.io/visual-interactive-guide-basics-neural-networks/&#34;&gt; A Visual and Interactive Guide to the Basics of Neural Networks [meant mainly for developers with no AI experience] &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;For each point, the error is measured by the difference between the actual value and the predicted value, raised to the power of 2. If we add a bias we can find values that improve the model. Our lines can better approximate our values now that we have this b value added to the line formula. The two new graphs are to help you track the error values as you fiddle with the parameters of the model. The neural networks we&amp;rsquo;ve been toying around with until now are all doing &amp;ldquo;Regression&amp;rdquo; - they calculate and output a &amp;ldquo;Continuous&amp;rdquo; value. In these problems, the neural network&amp;rsquo;s output has to be from a set of discrete values like &amp;ldquo;Good&amp;rdquo; or &amp;ldquo;Bad&amp;rdquo;. Which translates the values to say the network is 88% sure that the inputted value is &amp;ldquo;Bad&amp;rdquo; and our friend would not like that house.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;riot-games-engineering-elementalist-lux-10-skins-in-30-megabytes-https-engineering-riotgames-com-news-elementalist-lux&#34;&gt;&lt;a href=&#34;https://engineering.riotgames.com/news/elementalist-lux&#34;&gt; Riot Games Engineering: Elementalist Lux: 10 Skins in 30 Megabytes &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The initial conversation about Elementalist Lux&amp;rsquo;s memory requirements sounded something like this: &amp;ldquo;Lux will have 10 forms, each the size and scope of a full skin. One full skin takes about 20 megabytes of in-game memory, so we would need 200 megabytes for Elementalist Lux.&amp;rdquo; With a maximum memory budget of 30 megabytes per skin, this obviously was not going to fly. Why did most of our skins need 20 megabytes of in-game memory? And where does all of that memory go for something relatively simple like a game character anyway? The VFX artists took advantage of these techniques to severely reduce the memory overhead of all the of Elementalist Lux&amp;rsquo;s effects. Mission Accomplished, Right? Celebrations were had, but when we booted up the memory report, we were surprised to see that Elementalist Lux was still 20% over budget! With under a week left until Lux hit PBE, we had to find and fix the discrepancy before it was too late. Some quick sleuthing using our memory reporting tools showed that we were allocating over 10 megabytes of in-game memory to effects without even accounting for textures. With Elementalist Lux however, we were loading upwards of 3000 emitters, and her memory cost quickly ballooned. While we still have more work ahead to modularize the emitter system such that each effect pays the memory cost for only what it uses, this was a great first step that helped bring Elementalist Lux under budget and saved memory overall throughout the game.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;all-code-from-machine-learning-with-tensorflow-is-now-available-on-github-https-github-com-binroot-tensorflow-book&#34;&gt;&lt;a href=&#34;https://github.com/BinRoot/TensorFlow-Book&#34;&gt; All code from &amp;ldquo;Machine Learning with TensorFlow&amp;rdquo; is now available on GitHub &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This is the official code repository for Machine Learning with TensorFlow. Warning: The book will be released in a month or two, so this repo is a pre-release of the entire code. I will be heavily updating this repo in the coming weeks. Stay tuned, and follow along! :). Get started with machine learning using TensorFlow, Google&amp;rsquo;s latest and greatest machine learning library.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-open-closed-principle-http-patrick-louys-ch-2016-12-11-open-closed-principle&#34;&gt;&lt;a href=&#34;http://patrick.louys.ch/2016/12/11/open-closed-principle/&#34;&gt; The Open/Closed Principle &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;One of the principles - the open/closed principle - is often misunderstood. The author clearly misunderstood the principle and now he is advocating against dependency injection with the reason that it makes extending things a pain. Your code hides its dependencies and has become very hard to test. How do we follow the open/closed principle while using dependency injection at the same time? So why not decouple everything and make the whole thing easily extensible in the spirit of the open/closed principle? We had to write a little more code and more classes, but in the end we ended up with very simple code and little mental overhead compared to using inheritance. We followed the open/closed principle while also following the other SOLID principles.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;sega-game-coding-in-assembly-language-computerphile-https-youtu-be-gh94fktgr0m&#34;&gt;&lt;a href=&#34;https://youtu.be/GH94fKtGr0M&#34;&gt; SEGA game coding in assembly language - computerphile &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Matt Phillips is creating a brand new game for a 25 year old console. Computerphile is a sister project to Brady Haran&amp;rsquo;s Numberphile.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-dropbox-securely-stores-your-passwords-https-blogs-dropbox-com-tech-2016-09-how-dropbox-securely-stores-your-passwords&#34;&gt;&lt;a href=&#34;https://blogs.dropbox.com/tech/2016/09/how-dropbox-securely-stores-your-passwords/&#34;&gt; How Dropbox securely stores your passwords &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s universally acknowledged that it&amp;rsquo;s a bad idea to store plain-text passwords. If a database containing plain-text passwords is compromised, user accounts are in immediate danger. While this prevents the direct reading of passwords in case of a compromise, all hashing mechanisms necessarily allow attackers to brute force the hash offline, by going through lists of possible passwords, hashing them, and comparing the result. Some implementations of bcrypt truncate the input to 72 bytes, which reduces the entropy of the passwords. Other implementations don&amp;rsquo;t truncate the input and are therefore vulnerable to DoS attacks because they allow the input of arbitrarily long passwords. As a result, if only the password storage is compromised, the password hashes are encrypted and of no use to an attacker. Our password hashing procedure is just one of many measures we use to secure Dropbox.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;pdf-concepts-the-future-of-generic-programming-by-bjarne-stroustrup-http-www-stroustrup-com-good-concepts-pdf&#34;&gt;&lt;a href=&#34;http://www.stroustrup.com/good_concepts.pdf&#34;&gt; [PDF] &amp;ldquo;Concepts: The Future of Generic Programming&amp;rdquo; by Bjarne Stroustrup &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Designing with concepts What makes a good concept? Ideally, a concept represents a fundamental concept in some domain, hence the name &amp;ldquo;Concept.&amp;rdquo; A concept has semantics; it means something; it is not just a set of unrelated operations and types. Examples are C/C++ built-in type concepts: arithmetic, integral, and floating STL concepts like iterators and containers Mathematical concepts like monad, group, ring, and field Graph concepts like edges and vertices; graph, DAG, etc. The first step to design a good concept is to consider what is a complete set of properties to match the domain concept, taking into account the semantics of that domain concept. We call such overly simple or incomplete concepts &amp;ldquo;Constraints&amp;rdquo; to distinguish them from the &amp;ldquo;Real concepts.&amp;rdquo; 12/11/2016 Page 12 of 23 Stroustrup D-R-A-F-T Concepts 5.5 Matching types to concepts How can a writer of a new type be sure it matches a concept? That&amp;rsquo;s easy: We simply static assert the desired concept matches. Overload resolution based on concepts is fundamentally simple: If a function matches the requirements of one concept only, call it If a function matches the requirements of no concept, the call is an error If the function matches the requirements of two concepts, see if the requirements of one of those concepts is a subset of the requirements of the other. 8.7 Concepts like classes Based on experience with other languages and experimentation with C++0x concepts, some people are convinced that concepts should be defined like classes. We have worked together on concepts for many years and share some favorite examples that we have used in the design of concepts and to explain concepts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;steve-wozniak-was-my-computer-teacher-in-1995-http-motherboard-vice-com-read-steve-wozniak-was-my-computer-teacher-in-1995&#34;&gt;&lt;a href=&#34;http://motherboard.vice.com/read/steve-wozniak-was-my-computer-teacher-in-1995&#34;&gt; Steve Wozniak Was My Computer Teacher in 1995 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Sara&amp;rsquo;s dad happens to be Steve Wozniak, co-founder of Apple. Wozniak was teaching my 5th grade class back in 1995, almost a decade after the brain behind the Apple 1 had left the company to start other ventures, including CL9, which brought the first programmable remote control to the commercial market. Steve had a sincere demeanor about the class, but he made sure to keep things interesting. Steve Wozniak leads a conga line of 7th and 8th graders carrying Apple Macintosh PowerBook laptops he purchased for them, in an image dated 1993. Steve Wozniak instructs children in his after-school computer class in the 1990s. My most vivid memory from the class was a conversation I had with Steve. At the end of the year, we were all given a hard copy of Steve&amp;rsquo;s biography, Steve Wozniak, Inventor of the Apple Computer, by Martha E. Kendall.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;printbf-brainfuck-interpreter-in-printf-https-github-com-hexhive-printbf&#34;&gt;&lt;a href=&#34;https://github.com/HexHive/printbf&#34;&gt; printbf &amp;ndash; Brainfuck interpreter in printf &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Generic POSIX printf itself can be Turing complete as shown in Control-Flow Bending. Here we take printf-oriented programming one step further and preset a brainfuck interpreter inside a single printf statement. An attacker can control a printf statement through a format string vulnerability or if the attacker can control the first argument to a printf statement through, e.g., a generic memory corruption. C sources to see what is needed to setup the interpreter and also look at the tokenizer in toker. Keep in mind that this printbf interpreter is supposed to be a fun example of Turing completeness that is available in current programs and not a new generic attack vector. To use printbf in the wild an attacker will either have to disable FORTIFY SOURCE checking or get around the checks by placing lining up the format strings and placing them in readonly memory. The attacker model for printbf assumes that the attacker can use memory corruption vulnerabilities to set-up the attack or that the sources are compiled without enabled FORTIFY SOURCE defenses.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;git-query-language-https-github-com-cloudson-gitql&#34;&gt;&lt;a href=&#34;https://github.com/cloudson/gitql&#34;&gt; Git query language &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In a repository path &amp;hellip;. See more here. Gitql &amp;ldquo;Your query&amp;rdquo;orgit ql &amp;ldquo;Your query&amp;rdquo;. Commits author author email committer committer email hash date message full message. Select hash, author, message from commits limit 3 select hash, message from commits where &amp;lsquo;hell&amp;rsquo; in full message or &amp;lsquo;Fuck&amp;rsquo; in full message select hash, message, author email from commits where author = &amp;lsquo;cloudson&amp;rsquo; select date, message from commits where date &amp;lt; &amp;lsquo;2014-04-10&amp;rsquo; select message from commits where &amp;lsquo;hell&amp;rsquo; in message order by date asc Questions? Gitql doesn&amp;rsquo;t want kill git log 😅. It was created just for science!! It&amp;rsquo;s read-only. Nothing about delete, insert or update commits  The limit default is 10 rows It&amp;rsquo;s inspired by textql But, why gitql is a compiler/interpreter instead of just read a sqlite database with all commits, tags and etc? Answer: Because we would need to sync the tables every time before run sql and we would have sqlite bases for each repository.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;dependency-hell-is-np-complete-https-research-swtch-com-version-sat&#34;&gt;&lt;a href=&#34;https://research.swtch.com/version-sat&#34;&gt; Dependency hell is NP-complete &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;We&amp;rsquo;ll abbreviate package P version V as P:V. A dependency on P:V must be satisfied by version V exactly, not V-1 and not V+1. Given a 3-SAT formula, we can create a package F representing the whole formula, packages C1, C2, , Cn representing each clause, and packages X1, X2, , Xm representing each variable. If the formula is satisfiable, the satisfying assignment gives one way the package manager could successfully install F. Therefore, we&amp;rsquo;ve converted the 3-SAT instance into a corresponding VERSION instance with the same answer, which establishes that 3-SAT can be solved using VERSION, so VERSION is NP-hard. Implementations The assumptions above are quite minimal: packages have a list of dependencies, a package&amp;rsquo;s dependencies can change with its own version to version, a package&amp;rsquo;s dependencies can be restricted to specific versions of those dependencies, and it is possible for two versions of a package to conflict with each other. Some package managers might not allow a dependency to list a specific version, instead requiring a range, but we can easily change the version requirements 0 and 1 to ≤ 0 and ≥ 1. If package version selection is NP-complete, that means the search space of possible package combinations is too large and intricate for efficient systematic analysis; what about efficient systematic testing? If a search finds a conflict-free combination, why should we believe the combination will work? The absence of a version conflict may indicate only that the combination is untested. One way to avoid NP-completeness is to attack assumption 1: what if, instead of allowing a dependency to list specific package versions, a dependency can only specify a minimum version? Then there is a trivial algorithm for finding the packages to use: start with the newest version of what you want to install, and then get the newest version of all its dependencies, recursively. As the examples already hint at, if packages follow semantic versioning, a package manager might automatically use the newest version of a dependency within a major version but then treat different major versions as different packages.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2016 week 49 in programming</title>
      <link>http://iszlai.github.io/post/2016_week_49_in_programming/</link>
      <pubDate>Sat, 10 Dec 2016 21:27:37 +0100</pubDate>
      
      <guid>http://iszlai.github.io/post/2016_week_49_in_programming/</guid>
      <description>

&lt;h2 id=&#34;this-guy-taught-me-better-than-my-professor-https-youtu-be-hranu6ktnes&#34;&gt;&lt;a href=&#34;https://youtu.be/HRANU6KtNEs&#34;&gt; This guy taught me better than my professor. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Welcome to Programming from A to Z! &amp;ldquo;Programming from A to Z&amp;rdquo; is a course I teach at ITP. This playlist is anyone who would like to follow along online. This course focuses on programming strategies and techniques behind procedural analysis and generation of text-based data. We&amp;rsquo;ll explore topics ranging from evaluating text according to its statistical properties to the automated production of text with probabilistic methods to text visualization. Students will learn server-side and client-side JavaScript programming and develop projects that can be shared and interacted with online. Influences and Inspiration for the Programming from A to Z class:Jackson Mac Low&amp;rsquo;s Wikipedia Page: &lt;a href=&#34;https://en&#34;&gt;https://en&lt;/a&gt;. Js: &lt;a href=&#34;https://p5js.org/Processing:&#34;&gt;https://p5js.org/Processing:&lt;/a&gt; &lt;a href=&#34;https://processing.org&#34;&gt;https://processing.org&lt;/a&gt;. For More Programming from A to Z videos: &lt;a href=&#34;https://www&#34;&gt;https://www&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;programming-fibonacci-on-a-8-bits-self-made-breadboard-computer-https-www-youtube-com-watch-v-a73zxdjtu48&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=a73ZXDJtU48&#34;&gt; Programming Fibonacci on a 8 bits self made breadboard computer &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-to-pay-programmers-less-http-www-yegor256-com-2016-12-06-how-to-pay-programmers-less-html&#34;&gt;&lt;a href=&#34;http://www.yegor256.com/2016/12/06/how-to-pay-programmers-less.html&#34;&gt; How to Pay Programmers Less &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;How do you prevent that? Unfortunately, we can&amp;rsquo;t use violence any more, but there are some other mechanisms. If they don&amp;rsquo;t know how much their coworkers are getting, they won&amp;rsquo;t raise salary questions for much longer. They will be emotionally attached to the place and it will be very difficult to leave, no matter how underpaid they will be. Brainwash them regularly by communicating how great your company is, how big its mission is, and how important their contribution is. Spend just a little on all those funny office things, and they will pay you back big time, through the ability to underpay your programmers. They simply don&amp;rsquo;t know how to buy insurance, how to plan a retirement fund, or even how to pay taxes. How do you become friends? Well, meet their families, invite them over for dinner at your house, give them birthday gifts-all those tricks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;linux-kernel-maintainer-says-no-to-amdgpu-patch-https-lists-freedesktop-org-archives-dri-devel-2016-december-126516-html&#34;&gt;&lt;a href=&#34;https://lists.freedesktop.org/archives/dri-devel/2016-December/126516.html&#34;&gt; Linux kernel maintainer says &amp;lsquo;No.&amp;rsquo; to AMDGPU patch &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;RFC] Using DC in amdgpu for upcoming GPU Dave Airlie airlied at gmail.com Thu Dec 8 20:07:26 UTC 2016 &amp;gt; I can&amp;rsquo;t dig into details of DC, so this is not a 100% assessment, but if &amp;gt; you call a function called &amp;ldquo;Validate&amp;rdquo; in atomic commit, you&amp;rsquo;re very, very &amp;gt; likely breaking atomic. If &amp;gt; you want to improve shared code the only downside is that you can&amp;rsquo;t also &amp;gt; improve amd, but that&amp;rsquo;s not so much a problem for non-amd folks ;-) &amp;gt; &amp;gt; The problem otoh with the abstraction layer between drm core and the amd &amp;gt; driver is that you can&amp;rsquo;t ignore if you want to refactor shared code. &amp;gt; &amp;gt; - Another issue is that very often we unify semantics in drivers by adding &amp;gt; some new helpers that at least dtrt for most of the drivers. If you have &amp;gt; your own world then the impendance mismatch will make sure that amd &amp;gt; drivers will have slightly different semantics, and I think that&amp;rsquo;s not &amp;gt; good for the ecosystem and kms - people want to run a lot more than just &amp;gt; a boot splash with generic kms userspace, stuff like xf86-video-$vendor &amp;gt; is going out of favour heavily. The trouble is that having your own world makes it harder for &amp;gt; everyone else to understand the amd driver, and understanding all drivers &amp;gt; is very often step 1 in some big refactoring or feature addition effort. Read up on the whole mac80211 problems we had years ago, where every wireless vendor wrote their own 80211 layer inside their driver, there was a lot of time spent creating a central 80211 before any of those drivers were suitable for merge, well we&amp;rsquo;ve spent our time creating a central modesetting infrastructure, bypassing it is taking a driver in totally the wrong direction. More information about the dri-devel mailing list [RFC] Using DC in amdgpu for upcoming GPU Dave Airlie airlied at gmail.com Thu Dec 8 20:07:26 UTC 2016 &amp;gt; I can&amp;rsquo;t dig into details of DC, so this is not a 100% assessment, but if &amp;gt; you call a function called &amp;ldquo;Validate&amp;rdquo; in atomic commit, you&amp;rsquo;re very, very &amp;gt; likely breaking atomic.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;amd-responds-to-linux-kernel-maintainer-s-rejection-of-amdgpu-patch-https-lists-freedesktop-org-archives-dri-devel-2016-december-126684-html&#34;&gt;&lt;a href=&#34;https://lists.freedesktop.org/archives/dri-devel/2016-December/126684.html&#34;&gt; AMD responds to Linux kernel maintainer&amp;rsquo;s rejection of AMDGPU patch &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Deucher at amd.com Fri Dec 9 17:32:24 UTC 2016 &amp;gt; &amp;mdash;Original Message&amp;mdash; &amp;gt; From: Dave Airlie &amp;gt; Sent: Thursday, December 08, 2016 3:07 PM &amp;gt; To: Daniel Vetter &amp;gt; Cc: Wentland, Harry; dri-devel; Grodzovsky, Andrey; amd-gfx mailing list; &amp;gt; Deucher, Alexander; Cheng, Tony &amp;gt; Subject: Re: [RFC] Using DC in amdgpu for upcoming GPU &amp;gt; &amp;gt; &amp;gt; I can&amp;rsquo;t dig into details of DC, so this is not a 100% assessment, but if &amp;gt; &amp;gt; you call a function called &amp;ldquo;Validate&amp;rdquo; in atomic commit, you&amp;rsquo;re very, very &amp;gt; &amp;gt; likely breaking atomic. It&amp;rsquo;s annoying since &amp;gt; &amp;gt; lots of code, and bugfixes have to be duplicated and all that, but it&amp;rsquo;s &amp;gt; &amp;gt; fairly easy to fix case-by-case, and as long as AMD folks stick around &amp;gt; &amp;gt; not a maintainance issue. If &amp;gt; &amp;gt; you want to improve shared code the only downside is that you can&amp;rsquo;t also &amp;gt; &amp;gt; improve amd, but that&amp;rsquo;s not so much a problem for non-amd folks ;-) &amp;gt; &amp;gt; &amp;gt; &amp;gt; The problem otoh with the abstraction layer between drm core and the &amp;gt; amd &amp;gt; &amp;gt; driver is that you can&amp;rsquo;t ignore if you want to refactor shared code. &amp;gt; &amp;gt; Given the choice between maintaining Linus&amp;rsquo; trust that I won&amp;rsquo;t merge &amp;gt; 100,000 lines &amp;gt; of abstracted HAL code and merging 100,000 lines of abstracted HAL code &amp;gt; I&amp;rsquo;ll give you one guess where my loyalties lie. &amp;gt; &amp;gt; I&amp;rsquo;ve also wondered if the DC code is ready for being part of the &amp;gt; kernel anyways, what &amp;gt; happens if I merge this, and some external contributor rewrites 50% of &amp;gt; it and removes a &amp;gt; bunch of stuff that the kernel doesn&amp;rsquo;t need. If code trumps all, then why do we have staging? I understand forward progress on APIs, but frankly from my perspective, atomic has been a disaster for stability of both atomic and pre-atomic code. Are you basically telling us that you&amp;rsquo;d rather we water down our driver and limit the features and capabilities and stability we can support so that others can refactor our code constantly for hazy goals to support some supposed glorious future that never seems to come? What about right now? Maybe we could try and support some features right now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;why-does-calloc-exist-https-vorpus-org-blog-why-does-calloc-exist&#34;&gt;&lt;a href=&#34;https://vorpus.org/blog/why-does-calloc-exist/&#34;&gt; Why does calloc exist? &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In terms of its public API, calloc is different in two ways: first, it takes two arguments instead of one, and second, it returns memory that is pre-initialized to be all-zeros. So&amp;hellip; why does calloc exist, if it&amp;rsquo;s equivalent to these 2 lines? The C library is not known for its excessive focus on providing convenient shorthands! So that&amp;rsquo;s the first way that calloc cheats: when you call malloc to allocate a large buffer, then probably the memory will come from the operating system and already be zeroed, so there&amp;rsquo;s no need to call memset. Calloc lives inside the memory allocator, so it knows whether the memory it&amp;rsquo;s returning is fresh from the operating system, and if it is then it skips calling memset. This only explains part of the speedup: memset+malloc is actually clearing the memory twice, and calloc is clearing it once, so we might expect calloc to be 2x faster at best. Numpy allocated the array using calloc, and then it wrote 1s in the diagonal&amp;hellip; but most of the array is still zeros, so it isn&amp;rsquo;t actually taking up any memory, and our 2 GiB matrix fits into ~60 MiB of actual RAM. Of course there are other ways to accomplish the same thing, like using a real sparse matrix library, but that&amp;rsquo;s not the point. Calloc exists because it lets the memory allocator and kernel engage in a sneaky conspiracy to make your code faster and use less memory.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;doomrl-open-sourced-https-github-com-chaosforge-doomrl&#34;&gt;&lt;a href=&#34;https://github.com/ChaosForge/doomrl&#34;&gt; DoomRL open sourced &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Parts of this codebase date back to 2002, please do not judge! :P. This FreePascal source code release is provided as is. You can try compiling it using the latest version of Lazarus. Detailed compilation instructions will appear at some later point after the Jupiter Hell Kickstarter finishes. Chaosforge.org/ Copy bin/mp3, bin/music, bin/sound, bin/soundhq from the DoomRL folders to the source tree bin folder Download 32-bit Lazarus Open src/makewad.lpi build, do not run Run makewad.exe from the command line in the bin folder to generate doomrl. Code is distributed under the GPL 2.0 license. All art is 2003-2016 Derek Yu. Art is distributed under the CC-BY-SA 4.0 license.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;what-algorithm-did-microsoft-use-to-dither-color-in-early-versions-of-windows-http-retrocomputing-stackexchange-com-q-1887-621&#34;&gt;&lt;a href=&#34;http://retrocomputing.stackexchange.com/q/1887/621&#34;&gt; What algorithm did Microsoft use to dither color in early versions of Windows? &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Basically, Windows used the basic 16-color CGA palette, which included 4 shades of monochrome, and 12 basic colors, which later formed the basis of the &amp;ldquo;Web safe palette&amp;rdquo; that became popular during the early days of the Internet. The algorithm used back then was known as the Bayer dithering technique, otherwise referred to as ordered dithering. The basic idea was to generate a grid of threshold values in a mathematical arrangement that favors nearly consistent values equal distances from each other, which is what produces the cross-hatch effect. They also included some example source code written in PHP:. &amp;lt;?php /* Create a 8x8 threshold map &lt;em&gt;/ $map = array map(function($p) , range(0,63 ; /&lt;/em&gt; Define palette &lt;em&gt;/ $pal = Array(0x080000,0x201A0B,0x432817,0x492910, 0x234309,0x5D4F1E,0x9C6B20,0xA9220F, 0x2B347C,0x2B7409,0xD0CA40,0xE8A077, 0x6A94AB,0xD5C4B3,0xFCE76E,0xFCFAE2); /&lt;/em&gt; Read input image */ $srcim = ImageCreateFromPng(&amp;lsquo;scene. Basically, the entire thing was dreamed up by Bayer, and this algorithm dominated the market during the 4-bit era of computer graphics. 000000 #808080 #800000 #FF0000 #008000 #00FF00 #808000 #FFFF00 #000080 #0000FF #800080 #FF00FF #008080 #00FFFF #C0C0C0 #FFFFFF. Always dither from a full-color image, otherwise it&amp;rsquo;ll probably look even worse than you intended. Dithering in realtime is trivial for modern systems, as even classic 33mhz systems that ran Windows had no trouble implementing the Bayer dithering pattern.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;postgresql-10-will-ship-with-table-partitioning-https-git-postgresql-org-gitweb-p-postgresql-git-a-commit-h-f0e44751d7175fa3394da2c8f85e3ceb3cdbfe63&#34;&gt;&lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=f0e44751d7175fa3394da2c8f85e3ceb3cdbfe63&#34;&gt; PostgreSQL 10 will ship with table partitioning &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Table partitioning is like table inheritance and reuses much of theexisting infrastructure, but there are some important differences. The parent is called a partitioned table and is always empty; it maynot have indexes or non-inherited constraints, since those make nosense for a relation with no data of its own. Each partition has animplicit partitioning constraint. Multiple inheritance is notallowed, and partitioning and inheritance can&amp;rsquo;t be mixed. Tuple routing isn&amp;rsquo;t yet supported for partitions which are foreigntables, and it doesn&amp;rsquo;t handle updates that cross partition boundaries. Listpartitioning is limited to a single column, but range partitioning caninvolve multiple columns. A partitioning &amp;ldquo;Column&amp;rdquo; can be anexpression.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;i-am-tired-of-makefiles-https-dmitryfrank-com-blog-2016-1211-i-am-tired-of-makefiles&#34;&gt;&lt;a href=&#34;https://dmitryfrank.com/blog/2016/1211_i_am_tired_of_makefiles&#34;&gt; I am tired of Makefiles &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;At Cesanta, we use Makefiles to build our firmwares, libraries, and perform other things. I want my incremental builds to be reliable, and I want to be able to reuse my Makefiles as needed. A &amp;hellip;. Now, we have a project app with a separate Makefile, and we want to use mylib. We don&amp;rsquo;t want the app target to always get rebuilt. The app won&amp;rsquo;t be rebuilt, even though we want it to. My point is that if the author of makefile wants some variable to be overriddable, they should just use FOO ?= foo. There are plenty of other issues, some of them require ancient wisdom to write Makefiles which are correct, but I got used to most of them.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;atari-2600-emulator-in-minecraft-https-www-youtube-com-watch-v-jprkjndmtlc&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=jPRkjNDmTlc&#34;&gt; Atari 2600 Emulator in Minecraft &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;developers-side-projects-https-www-joelonsoftware-com-2016-12-09-developers-side-projects&#34;&gt;&lt;a href=&#34;https://www.joelonsoftware.com/2016/12/09/developers-side-projects/&#34;&gt; Developers’ side projects &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;So let&amp;rsquo;s consider this question: if you&amp;rsquo;re a developer working for software company, does that company own what you do in your spare time? Every software company is going to want to own the copyright to the code that its employees write for them, so no software company can accept the &amp;ldquo;Default&amp;rdquo; way the law works. So before you hire this developer, you agree, &amp;ldquo;Hey listen, I know that inventing happens all the time, and it&amp;rsquo;s impossible to prove whether you invented something while you were sitting in the chair I supplied in the cubicle I supplied or not. I don&amp;rsquo;t just want to buy your 9:00-5:00 inventions. I want them all, and I&amp;rsquo;m going to pay you a nice salary to get them all,&amp;rdquo; and she agrees to that, so now you want to sign something that says that all her inventions belong to the company for as long as she is employed by the company. So every software company tries to own everything that its employees do. Hmmm. OK, what if my employer is a small company making software for the legal industry. All of them need to purchase your copyright and patents without having to prove that they were generated &amp;ldquo;On the clock,&amp;rdquo; so they will all try to do this, unless the company is being negligent and has not arranged for appropriate contracts to be in place, in which case, the company is probably being badly mismanaged and there&amp;rsquo;s another reason not to work there. If you leave and start a competitive company or even a half-competitive company, we will use this contract to bring you to tears.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;well-what-started-as-an-r-programmerhumor-joke-is-now-a-real-programming-language-enter-coding-a-stack-based-markup-language-https-github-com-molarmanful-codinglang&#34;&gt;&lt;a href=&#34;https://github.com/molarmanful/codinglang&#34;&gt; Well, what started as an r/ProgrammerHumor joke is now a real programming language. Enter Coding, a stack-based markup language. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Coding has 2 stacks, one for strings and another for HTML output. Parentheses push to the string stack; for example, would push asdf to the string stack. The standard library has a function S that can push from the string stack to the output stack. &amp;gt;: Pops top string stack element, wraps with a tag name, and pushes to output stack. Adds an attribute to the top output stack element using the popped top string stack element. S: Push the top string stack element to the output stack in text form. Se: Push the HTML string form of the top output stack element to the string stack.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;announcing-typescript-2-1-https-blogs-msdn-microsoft-com-typescript-2016-12-07-announcing-typescript-2-1&#34;&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/typescript/2016/12/07/announcing-typescript-2-1/&#34;&gt; Announcing TypeScript 2.1 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Function get&lt;T, K extends keyof T&gt;(obj: T, propertyName: K): T[K] let x = ; let foo = get(x, &amp;ldquo;Foo&amp;rdquo;); // has type &amp;lsquo;number&amp;rsquo; let bar = get(x, &amp;ldquo;Bar&amp;rdquo;); // has type &amp;lsquo;string&amp;rsquo; let oops = get(x, &amp;ldquo;Wargarbl&amp;rdquo;); // error! Mapped Types. Mapped types are definitely the most interesting feature in TypeScript 2.1. Mapped types are produced by taking a union of literal types, and computing a set of properties for a new object type. Notice how we leveraged TypeScript 2.1&amp;rsquo;s new indexed access types here by writing out T[P]. So instead of defining a completely new type like PartialPerson, we can just write Partial&lt;Person&gt;. Originally, we planned to ship a type operator in TypeScript 2.1 named partial which could create an all-optional version of an existing type. Because the Partial and Readonly types we used above are so useful, they&amp;rsquo;ll be included in TypeScript 2.1. Do be careful though - TypeScript will assume the package has the type any, meaning you can do anything with it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;trendmicro-starts-a-server-in-your-machine-and-was-allowing-remote-code-execution-from-an-http-request-https-bugs-chromium-org-p-project-zero-issues-detail-id-693&#34;&gt;&lt;a href=&#34;https://bugs.chromium.org/p/project-zero/issues/detail?id=693&#34;&gt; TrendMicro starts a server in your machine and was allowing remote code execution from an HTTP request &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;When you install TrendMicro Antivirus on Windows, by default a component called Password Manager is also installed and automatically launched on startup. Html This product is primarily written in JavaScript with node. Js, and opens multiple HTTP RPC ports for handling API requests. It took about 30 seconds to spot one that permits arbitrary command execution, openUrlInDefaultBrowser, which eventually maps to ShellExecute(). This means any website can launch arbitrary commands, like this: x = new XMLHttpRequest() x.open(&amp;ldquo;GET&amp;rdquo;, &amp;ldquo;&lt;a href=&#34;Https://localhost:49155/api/openUrlInDefaultBrowser?url=c:/windows/system32/calc.exe&amp;quot;&#34;&gt;Https://localhost:49155/api/openUrlInDefaultBrowser?url=c:/windows/system32/calc.exe&amp;quot;&lt;/a&gt;, true); try catch ;. This bug is subject to a 90 day disclosure deadline. If 90 days elapse without a broadly available patch, then the bug report will automatically become visible to the public.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;saving-the-internet-2000-terabytes-a-day-fixing-font-awesome-s-fonts-https-pixelambacht-nl-2016-font-awesome-fixed&#34;&gt;&lt;a href=&#34;https://pixelambacht.nl/2016/font-awesome-fixed/&#34;&gt; Saving the internet 2000 terabytes a day: fixing Font Awesome&amp;rsquo;s fonts &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Font Awesome, the most ubiquitous icon font on the web, just succesfully finished a Kickstarter campaign flushing a million dollars towards its creators to revamp the icon set. With a clear signal that Font Awesome isn&amp;rsquo;t going away anytime soon, let&amp;rsquo;s take a look at the technical integrity of its fonts. A font like Font Awesome has about 100.000 coordinates for all glyphs combined, resulting in a potential savings of 100kB! Long story short: the original unitsPerEm of Font Awesome&amp;rsquo;s fonts is 1792. Running our font through it reduces the font down from 150508 to 141376 bytes, saving another 9kB. Not super much, but since it was all dead weight anyway I say good riddance. If each day 73 million websites serve the Font Awesome WOFF to an average of a thousand visitors who don&amp;rsquo;t have these fonts in the browser&amp;rsquo;s cache, at a 26kB savings on the WOFF, we&amp;rsquo;ve saved. If they&amp;rsquo;re sticking to icon fonts instead of SVG, Font Awesome better make their font files awesome too.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;what-s-new-in-python-3-6-https-docs-python-org-3-6-whatsnew-3-6-html&#34;&gt;&lt;a href=&#34;https://docs.python.org/3.6/whatsnew/3.6.html&#34;&gt; What’s New In Python 3.6 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This article explains the new features in Python 3.6, compared to 3.5. Whenever a new class is defined, the new method will be called on all descriptors included in the definition, providing them with a reference to the class being defined and the name given to the descriptor within the class namespace. The new PYTHONMALLOC environment variable allows setting the Python memory allocators and installing debug hooks. The new Collection abstract base class has been added to represent sized iterable container classes. The new DomainFilter filter class has been added to filter block traces by their address space. Since the typing module was provisional in Python 3.5, all changes introduced in Python 3.6 have also been backported to Python 3.5.x. The typing module has a much improved support for generic type aliases. The &amp;ldquo;Object allocated at&amp;rdquo; traceback is new and is only displayed if tracemalloc is tracing Python memory allocations and if the warnings module was already imported.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;talks-that-changed-the-way-i-think-about-programming-http-www-opowell-com-post-talks-that-changed-the-way-i-think-about-programming&#34;&gt;&lt;a href=&#34;http://www.opowell.com/post/talks-that-changed-the-way-i-think-about-programming/&#34;&gt; Talks that changed the way I think about programming &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Here are some talks which have given me new insight into programming, and in particular what good programming is and isn&amp;rsquo;t. Software is the platform Code should be designed around a model of the world Code is more important than data Jonathan Blow: How to program independent games. One of the most important metrics to optimize for is hours of your life spent programming something. Eskil Steenberg: How I program in C. In the beginning all you want is results, in the end, all you want is control. Brian Will: Why OOP is Bad. Almost everything that&amp;rsquo;s interesting in a non-trivial program are &amp;lsquo;cross-cutting&amp;rsquo; concerns. When faced with the reality of real word programs, promises of encapsulation tend to be broken, and object graphs quickly become tangled webs. The emphasis of programming should be on solving problems, and not on the code itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;neovim-state-and-progress-update-https-neovim-io-news-2016-11&#34;&gt;&lt;a href=&#34;https://neovim.io/news/2016/11/&#34;&gt; Neovim State and Progress Update &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Neovim is a refactor of Vim to make it viable for another 30 years of hacking. Neovim very intentionally builds on the long history of Vim community knowledge and user habits. If you find an article about Vim, it likely also applies to Neovim, unless it&amp;rsquo;s about :smile. App is a macOS Neovim GUI available via homebrew for macOS 10.9+. nvim-hs is a host to enable writing Neovim plugins in Haskell. ZyX-I, a prolific committer to Neovim and Vim, agreed to take the role of &amp;ldquo;Lead developer&amp;rdquo;, i.e. the developer who receives the funding. If the project makes you happy, let the pledge continue! API. The Neovim API is one of the defining technical and &amp;ldquo;Soft&amp;rdquo; features of the project. C will be separated into modules, marking a point where Neovim&amp;rsquo;s VimL implementation diverges from Vim&amp;rsquo;s.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;10-features-in-c-that-you-really-should-learn-and-use-https-hownot2code-com-2016-11-24-10-features-in-c-that-you-really-should-learn-and-use&#34;&gt;&lt;a href=&#34;https://hownot2code.com/2016/11/24/10-features-in-c-that-you-really-should-learn-and-use/&#34;&gt; 10 Features in C# That You Really Should Learn (and use!) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;If you start exploring C# or decide to expand your knowledge, you should learn these useful language features, which will help you to simplify the code, avoid errors and save a lot of time. The async / await-pattern works by letting the code continue executing even if something is blocking the execution. The above example can be really useful in unit testing but should be avoided in other contexts as instances of classes should be created using a constructor. These features are practically a necessity in many cases, make sure to actually learn when and how to use them. GetValue(); var defaultValue = 23 //result will be 23 if someValue is null var result = someValue ?? defaultValue;. Format(&amp;ldquo;Some data: , some more data:&amp;ldquo;, someVariable, someOtherVariable); //NewWay var someString = $&amp;ldquo;Some data: , some more data:&amp;ldquo;;. So the new nameof-expression might not seem important, but it really has it value.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;write-a-shell-in-c-https-brennan-io-2015-01-16-write-a-shell-in-c&#34;&gt;&lt;a href=&#34;https://brennan.io/2015/01/16/write-a-shell-in-c/&#34;&gt; Write a Shell in C &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a walkthrough on how I wrote my own simplistic Unix shell in C, in the hopes that it makes other people feel that way too. The code for the shell described here, dubbed lsh, is available on GitHub. University students beware! Many classes have assignments that ask you to write a shell, and some faculty are aware of this tutorial and code. Terminate: After its commands are executed, the shell executes any shutdown commands, frees up any memory, and terminates. These steps are so general that they could apply to many programs, but we&amp;rsquo;re going to use them for the basis for our shell. Our shell will be so simple that there won&amp;rsquo;t be any configuration files, and there won&amp;rsquo;t be any shutdown command. Reading a line from stdin sounds so simple, but in C it can be a hassle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;pdf-concepts-the-future-of-generic-programming-by-bjarne-stroustrup-http-www-stroustrup-com-good-concepts-pdf&#34;&gt;&lt;a href=&#34;http://www.stroustrup.com/good_concepts.pdf&#34;&gt; [PDF] &amp;ldquo;Concepts: The Future of Generic Programming&amp;rdquo; by Bjarne Stroustrup &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Designing with concepts What makes a good concept? Ideally, a concept represents a fundamental concept in some domain, hence the name &amp;ldquo;Concept.&amp;rdquo; A concept has semantics; it means something; it is not just a set of unrelated operations and types. Examples are C/C++ built-in type concepts: arithmetic, integral, and floating STL concepts like iterators and containers Mathematical concepts like monad, group, ring, and field Graph concepts like edges and vertices; graph, DAG, etc. The first step to design a good concept is to consider what is a complete set of properties to match the domain concept, taking into account the semantics of that domain concept. We call such overly simple or incomplete concepts &amp;ldquo;Constraints&amp;rdquo; to distinguish them from the &amp;ldquo;Real concepts.&amp;rdquo; 12/11/2016 Page 12 of 23 Stroustrup D-R-A-F-T Concepts 5.5 Matching types to concepts How can a writer of a new type be sure it matches a concept? That&amp;rsquo;s easy: We simply static assert the desired concept matches. Overload resolution based on concepts is fundamentally simple: If a function matches the requirements of one concept only, call it If a function matches the requirements of no concept, the call is an error If the function matches the requirements of two concepts, see if the requirements of one of those concepts is a subset of the requirements of the other. 8.7 Concepts like classes Based on experience with other languages and experimentation with C++0x concepts, some people are convinced that concepts should be defined like classes. We have worked together on concepts for many years and share some favorite examples that we have used in the design of concepts and to explain concepts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;this-is-unfortunate-and-we-re-stuck-with-it-forever-https-facundoolano-wordpress-com-2016-12-09-this-is-unfortunate-and-were-stuck-with-it-forever&#34;&gt;&lt;a href=&#34;https://facundoolano.wordpress.com/2016/12/09/this-is-unfortunate-and-were-stuck-with-it-forever/&#34;&gt; This is unfortunate and we&amp;rsquo;re stuck with it forever &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The phrase immediately resounded in my head, because to me it was a perfect definition of JavaScript, or at least the current state of JavaScript. II. Douglas Crockford published JavaScript: The Good Parts about eight years ago. It&amp;rsquo;s a masterpiece to me, with a lot of takeaways: JavaScript is loaded with crap; there&amp;rsquo;s a great functional language somewhere in there, striving to get out; sometimes, a lot of the times, less is more. We can make a better language out of JavaScript by subsetting it. IV. Unlike any other language, JavaScript runs in browsers. V. I always wonder how is it like to learn JavaScript in 2016, for new programmers and for programmers coming from other languages. Can&amp;rsquo;t the browsers manage multiple versions of JavaScript? is it worth their save, especially now that this uneven language has crawled its way to the server and the desktop?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-discord-handles-push-request-bursts-of-over-a-million-per-minute-with-elixir-s-genstage-https-discord-engineering-how-discord-handles-push-request-bursts-of-over-a-million-per-minute-with-elixirs-genstage-8f899f0221b4-u29lfn92n&#34;&gt;&lt;a href=&#34;https://discord.engineering/how-discord-handles-push-request-bursts-of-over-a-million-per-minute-with-elixirs-genstage-8f899f0221b4#.u29lfn92n&#34;&gt; How Discord handles push request bursts of over a million per minute with Elixir’s GenStage &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Stage 1 - the Push Collector: The Push Collector is a producer that collects push requests. Stage 2 - the Pusher: The Pusher is a consumer that demands push requests from the Push Collector and pushes the requests to Firebase. The Push Collector never sends a request to a Pusher unless the Pusher asks for one. Since the Pushers put back-pressure on the Push Collector, we now have a potential bottleneck at the Push Collector. In the Push Collector, we specify how many push requests to buffer. If there are way too many messages moving through the system and the buffer fills up then the Push Collector will shed incoming push requests. The bottom graph is the number of push requests buffered by the Push Collector.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;dart-1-21-released-with-generic-gethod-syntax-http-news-dartlang-org-2016-12-dart-121-generic-method-syntax-html&#34;&gt;&lt;a href=&#34;http://news.dartlang.org/2016/12/dart-121-generic-method-syntax.html&#34;&gt; Dart 1.21 released, with generic gethod syntax &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;It introduces support for generic method syntax along with a few popular convenience features. Dart 1.21 introduces syntax allowing type arguments on methods and functions. For more examples, check out the Using Generic Methods article. We&amp;rsquo;ve had generic methods and functions for a while in strong mode. 1.21 introduces support for generic method syntax even without strong mode. Libraries can use this feature and work in both contexts, providing a stepping stone to full generic methods in all Dart code. X is T will not work outside strong mode if T is a method type argument.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2016 week 48 in programming</title>
      <link>http://iszlai.github.io/post/2016_week_48_in_programming/</link>
      <pubDate>Sat, 03 Dec 2016 21:27:26 +0100</pubDate>
      
      <guid>http://iszlai.github.io/post/2016_week_48_in_programming/</guid>
      <description>

&lt;h2 id=&#34;crypto-101-an-introductory-course-on-cryptography-freely-available-for-programmers-of-all-ages-and-skill-levels-https-www-crypto101-io&#34;&gt;&lt;a href=&#34;https://www.crypto101.io/&#34;&gt; Crypto 101 - an introductory course on cryptography, freely available for programmers of all ages and skill levels &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;It tries to go through all of the major dramatis personae of cryptography to make TLS work in 45 minutes. This book is the natural extension of that, with an extensive focus on breaking cryptography.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-the-singapore-circle-line-rogue-train-was-caught-with-data-https-blog-data-gov-sg-how-we-caught-the-circle-line-rogue-train-with-data-79405c86ab6a&#34;&gt;&lt;a href=&#34;https://blog.data.gov.sg/how-we-caught-the-circle-line-rogue-train-with-data-79405c86ab6a&#34;&gt; How the Singapore Circle Line rogue train was caught with data &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;What we&amp;rsquo;d established was that there seemed to be a pattern over time and location: Incidents were happening one after another, in the opposite direction of the previous incident. Could it be something that was not in our dataset that caused the incidents? Imaginary lines connecting the incidents looked suspiciously similar to those in a Marey Chart. We then grouped all related pairs of incidents into larger sets using a disjoint-set data structure. Next, we calculated the percentage of the incidents that could be explained by our clustering algorithm. 189, 259, 0.7297297297297297)What it means: Of the 259 emergency braking incidents in our dataset, 189 cases - or 73% of them - could be explained by the &amp;ldquo;Rogue train&amp;rdquo; hypothesis. We coloured the incident chart based on the clustering results.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;do-while-0-in-macros-http-www-pixelstech-net-article-1390482950-do-7b-7d-while-280-29-in-macros&#34;&gt;&lt;a href=&#34;http://www.pixelstech.net/article/1390482950-do-%7B-%7D-while-%280%29-in-macros&#34;&gt; do {&amp;hellip;} while (0) in macros &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are a C programmer, you must be familiar with macros. If you don&amp;rsquo;t define macros carefully, they may bite you and drive you crazy. There are many this kind of macros which uses do while(0) in Linux kernels and other popular C libraries. Do while(0) is the only construct in C that lets you define macros that always work the same way, so that a semicolon after your macro always has the same effect, regardless of how the macro is used. It isn&amp;rsquo;t possible to write multistatement macros that do the right thing in all situations. You can&amp;rsquo;t make macros behave like functions-without do/while(0). In conclusion, macros in Linux and other codebases wrap their logic in do/while(0) because it ensures the macro always behaves the same, regardless of how semicolons and curly-brackets are used in the invoking code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;let-s-stop-bashing-c-http-h2co3-org-blog-index-php-2016-12-01-lets-stop-bashing-c&#34;&gt;&lt;a href=&#34;http://h2co3.org/blog/index.php/2016/12/01/lets-stop-bashing-c/&#34;&gt; Let’s Stop Bashing C &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The point the author makes about integer division is that it can confuse beginners. The reason for it is simple: when one is working with integers, one often has a problem related to integers in the first place. Performance is not even the point; floating-point numbers are much more complex than integers, and above all, they have different semantics. Bashing the increment and decrement operators became quite popular since Swift has taken the side of their omission. In particular, in C, it&amp;rsquo;s not equivalent with the postfix increment operator. With regards to semicolons: you can&amp;rsquo;t just interpret every newline as if it was a semicolon, because newlines become context-sensitive in this way. Treating newlines as statement endings is hard to remember correctly for humans, too, however appealing it might be at first glance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;google-s-new-public-ntp-servers-provide-smeared-time-https-cloudplatform-googleblog-com-2016-11-making-every-leap-second-count-with-our-new-public-ntp-servers-html&#34;&gt;&lt;a href=&#34;https://cloudplatform.googleblog.com/2016/11/making-every-leap-second-count-with-our-new-public-NTP-servers.html&#34;&gt; Google&amp;rsquo;s new public NTP servers provide smeared time &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;rust-128-bit-integers-preparing-to-be-released-https-github-com-rust-lang-rust-pull-37900-issuecomment-264676043&#34;&gt;&lt;a href=&#34;https://github.com/rust-lang/rust/pull/37900#issuecomment-264676043&#34;&gt; Rust: 128 bit integers preparing to be released &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;writing-c-without-the-standard-library-linux-edition-http-weeb-ddns-net-0-programming-c-without-standard-library-linux-txt&#34;&gt;&lt;a href=&#34;http://weeb.ddns.net/0/programming/c_without_standard_library_linux.txt&#34;&gt; Writing C without the standard library - Linux Edition &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;How do we find out which syscall puts uses? We can either lookthrough the syscall list, or simply install strace to tracesyscalls and write a simple program that uses puts. If you don&amp;rsquo;t know how todo something with syscalls, do it with libc and then strace it tosee which syscalls it uses on the target architecture. Oh no! The &amp;ldquo;Write&amp;rdquo; function is part of the standard library!How do we invoke syscalls without having to link the standard lib? Takes the syscall number followed by either pointers or integersas parameters- sets rax to the syscall number- sets rdi, rsi, rdx, r10, r8 and r9 to the parameters. Syscall numbers are usually named SYS followed by the syscall nameYou can also add the -m32 flags to check values for 32-bit. Legacy syscalls on i386###################################################################There are a few things you should be extremely careful with whendealing with syscalls, especially when targeting multiplearchitectures. Here&amp;rsquo;s our fixed stat struct:&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-typedef uintptr dev t;typedef intptr syscall slong t;typedef uintptr syscall ulong t;typedef uintptr time t;. typedef struct.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-practice-of-code-review-https-zerohour-productions-net-q-node-242&#34;&gt;&lt;a href=&#34;https://zerohour-productions.net/?q=node/242&#34;&gt; The Practice of Code Review &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This process can go by different names: code review, peer review, programmer quality assurance, and probably a few others. Code review is a skill that takes a lot of time and practice to become proficient, and it takes even longer to master it. At first you&amp;rsquo;re more likely going to be the one having your code reviewed. Working with production code is very different than stuff learned in a classroom. Code reviewers will quickly tell you if your code is hard/impossible to follow. How much thought do you put into naming conventions? Do you use nondescript variable names like a, b, c? That won&amp;rsquo;t fly with code review. If you don&amp;rsquo;t have someone to review your code, find someone.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;let-s-stop-copying-c-https-eev-ee-blog-2016-12-01-lets-stop-copying-c&#34;&gt;&lt;a href=&#34;https://eev.ee/blog/2016/12/01/lets-stop-copying-c/&#34;&gt; Let&amp;rsquo;s Stop Copying C &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;C is fairly old - 44 years, now! - and comes from a time when there were possibly more architectures than programming languages. Alas, the popularity of C has led to a number of programming languages&amp;rsquo; taking significant cues from its design, and parts of its design are slightly questionable. I&amp;rsquo;ve listed some languages that do or don&amp;rsquo;t take the same approach as C. Plenty of the listed languages have no relation to C, and some even predate it - this is meant as a cross-reference of the landscape, not a genealogy. In languages with C-like header files, most headers include other headers include more headers, so who knows how any particular declaration is actually ending up in your code? Oh, and there&amp;rsquo;s the whole include guards thing. I think it&amp;rsquo;s considerably worse in a statically typed language like C, because the whole point is that you can rely on the types. The language explicitly leaves type concerns in my hands. So if you&amp;rsquo;re designing a language, don&amp;rsquo;t just copy C. Don&amp;rsquo;t just copy C++ or Java.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;i-made-this-a-multiplayer-game-where-you-code-to-play-http-www-machinegame-com&#34;&gt;&lt;a href=&#34;http://www.machinegame.com&#34;&gt; I made this: a multiplayer game where you code to play &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;arduboy-the-game-system-the-size-of-a-credit-card-create-your-own-games-learn-to-program-or-download-from-a-library-of-open-source-games-for-free-https-www-arduboy-com&#34;&gt;&lt;a href=&#34;https://www.arduboy.com/&#34;&gt; Arduboy, the game system the size of a credit card. Create your own games, learn to program or download from a library of open source games for free! &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Arduboy is a miniature open-source game system that you can program yourself! If you don&amp;rsquo;t know how to program yet, it&amp;rsquo;s a great way to learn! If you already are an expert developer, join our community and show off your skills! Arduboy is a game system the size of your imagination! Recently funded on Kickstarter and on display at Maker Faires around the world, everyone loves Arduboy!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;visualizing-how-developers-rate-their-own-programming-skills-http-minimaxir-com-2016-07-stack-overflow&#34;&gt;&lt;a href=&#34;http://minimaxir.com/2016/07/stack-overflow/&#34;&gt; Visualizing How Developers Rate Their Own Programming Skills &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;On average, developers rate themselves 7.09 / 10. Employing traditional regression analysis to build a model for predicting programming ability would be tricky: does having more experience cause programming skill to improve, or does having strong innate technical skill cause developers to remain in the industry and grow? We can easily confirm that a positive correlation exists between programming activity and experience, with newbie developers rating their skills 5.02 / 10 on average, and extremely experienced developers rating their skills three whole ranks higher at 8.13 / 10. What&amp;rsquo;s also notable is the range of values selected: for developers with less than 1 years of experience, the distribution is almost completely flat between 1-7, showing that they are more honest with the self-assessment of their programming skills. Do freelance / contract developers believe they are better programmers than full-time developers? What about repository commit activity by developers? Are developers who commit more better? One could argue that a developer who commits code often is either vigilant with accounting for functional code changes, or polluting the codebase in an attempt to show productivity. Are developers who use Stack Overflow as a resource better developers who know how to properly use external references in times of crisis, or are they developers who use it as a crutch to compensate for weak coding skills?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-curated-awesome-list-of-lists-of-interview-questions-https-github-com-maximabramchuck-awesome-interview-questions&#34;&gt;&lt;a href=&#34;https://github.com/MaximAbramchuck/awesome-interview-questions&#34;&gt; A curated awesome list of lists of interview questions. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;undocumented-instructions-in-production-why-some-nes-games-use-undocumented-1-byte-and-2-byte-nops-http-retrocomputing-stackexchange-com-q-1839-621&#34;&gt;&lt;a href=&#34;http://retrocomputing.stackexchange.com/q/1839/621&#34;&gt; Undocumented Instructions in Production - Why some NES games use undocumented 1-byte and 2-byte NOPs &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The instruction $89 on the 6502 is a two-byte NOP. Based on adjacent instructions in the opcode matrix, especially LDA #ii, it would have been STA #ii, a store to an immediate value, which makes no sense. On the 65C02, this instruction is changed to BIT #ii, which almost behaves as a two-byte NOP. One hypothesis is that a programmer working on both NES projects and projects for some 65C02-based system forgot that the original 6502 lacked BIT #ii, but because the instruction does so little anyway, the programmer didn&amp;rsquo;t notice any difference. A clockslide is a is a sequence of instructions that wastes a small constant amount of cycles plus one cycle per executed byte, no matter whether it&amp;rsquo;s entered on an odd or even address. With official instructions, one can construct a clockslide from CMP instructions: &amp;hellip; C9 C9 C9 C9 C5 EA:. Disassemble from the start and you get CMP #$C9 CMP #$C9 CMP $00EA. Disassemble one byte in and you get CMP #$C9 CMP #$C5 NOP. A calculated start address into a clockslide can be used with indirect jumps or LDA highbyte PHA LDA lowbyte PHA RTS) to precisely control timing, such as when playing PCM audio or sending video register changes to the PPU in a raster effect. CMP has a side effect of destroying most of the processor status flags, but unofficial instructions that skip one byte can be used to preserve them. As LOIS 16192 mentioned, the official NOP instruction can be inserted at random places in a particular subroutine that isn&amp;rsquo;t an inner loop. It adds even more entropy to use unofficial NOPs, two-byte NOPs, or two-byte NOPs that read the zero page.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;openai-universe-https-openai-com-blog-universe&#34;&gt;&lt;a href=&#34;https://openai.com/blog/universe/&#34;&gt; OpenAI Universe &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Universe exposes a wide range of environments through a common interface: the agent operates a remote desktop by observing pixels of a screen and producing keyboard and mouse commands. The environment exposes a VNC server and the universe library turns the agent into a VNC client. Universe includes browser-based environments which require AI agents to read, navigate, and use the web just like people - using pixels, keyboard, and mouse. Universe agents must deal with real-world griminess that traditional RL agents are shielded from: agents must run in real-time and account for fluctuating action and observation lag. Pong is one of the easiest Atari games, but it had the potential to be intractable as a Universe task, since the agent has to learn to perform very precise maneuvers at 4x realtime. While solving Universe will require an agent far outside the reach of current techniques, these videos show that many interesting Universe environments can be fruitfully approached with today&amp;rsquo;s algorithms. Each of these agents uses the same code and hyperparameters as the Flash game agents.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;introducing-amazon-lightsail-https-aws-amazon-com-blogs-aws-amazon-lightsail-the-power-of-aws-the-simplicity-of-a-vps&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/aws/amazon-lightsail-the-power-of-aws-the-simplicity-of-a-vps/&#34;&gt; Introducing Amazon Lightsail &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;You get the simplicity of a VPS, backed by the power, reliability, and security of AWS. As your needs grow, you will have the ability to smoothly step outside of the initial boundaries and connect to additional AWS database, messaging, and content distribution services. A Quick TourLet&amp;rsquo;s take a quick tour of Amazon Lightsail! Each page of the Lightsail console includes a Quick Assist tab. Advanced Lightsail - APIs and VPC PeeringBefore I wrap up, let&amp;rsquo;s talk about a few of the more advanced features of Amazon Lightsail - APIs and VPC Peering. CreateInstances - Create one or more Lightsail instances. All of the Lightsail instances within an account run within a &amp;ldquo;Shadow&amp;rdquo; VPC that is not visible in the AWS Management Console. If the code that you are running on your Lightsail instances needs access to other AWS resources, you can set up VPC peering between the shadow VPC and another one in your account, and create the resources therein. You can now connect your Lightsail apps to other AWS resources that are running within a VPC. Pricing and AvailabilityWe are launching Amazon Lightsail today in the US East Region, and plan to expand it to other regions in the near future.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-cyber-swiss-army-knife-https-gchq-github-io-cyberchef&#34;&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/&#34;&gt; The cyber Swiss Army knife &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;There are well over 100 operations in CyberChef allowing you to carry simple and complex tasks easily. CyberChef encourages both technical and non-technical people to explore data formats, encryption and compression. Digital data comes in all shapes, sizes and formats in the modern world - CyberChef helps to make sense of this data all on one easy-to-use platform. For those comfortable writing code, CyberChef is a quick and efficient way to prototype solutions to a problem which can then be scripted once proven to work. It is expected that CyberChef will be useful for cybersecurity and antivirus companies. It is hoped that by releasing CyberChef through GitHub, contributions can be added which can be rolled out into future versions of the tool. There are around 150 useful operations in CyberChef for anyone working on anything vaguely Internet-related, whether you just want to convert a timestamp to a different format, decompress gzipped data, create a SHA3 hash, or parse an X.509 certificate to find out who issued it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;sql-injections-vulnerabilities-in-stack-overflow-php-questions-https-laurent22-github-io-so-injections&#34;&gt;&lt;a href=&#34;https://laurent22.github.io/so-injections/&#34;&gt; SQL injections vulnerabilities in Stack Overflow PHP questions &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;parsing-c-is-literally-undecidable-http-blog-reverberate-org-2013-08-parsing-c-is-literally-undecidable-html&#34;&gt;&lt;a href=&#34;http://blog.reverberate.org/2013/08/parsing-c-is-literally-undecidable.html&#34;&gt; Parsing C++ is literally undecidable &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Many programmers are aware that C++ templates are Turing-complete, and this was proved in the 2003 paper C++ Templates are Turing Complete. The C++ FQA has a section showing that parsing C++ is undecidable, but many people have misinterpreted the full implications of this. Some people misinterpret this statement to simply mean that fully compiling a C++ program is undecidable, or that showing the program valid is undecidable. This line of thinking presumes that constructing a parse tree is decidable, but only further stages of the compiler such as template instantiation are undecidable. Simply producing a parse tree for a C++ program is undecidable, because producing a parse tree can require arbitrary template instantiation. Struct SomeType ; template &amp;lt;&amp;hellip;&amp;gt; struct TuringMachine ; template &lt;typename T&gt; struct S ; template&amp;lt;&amp;gt; struct S&lt;SomeType&gt; ; int x; int main(). The parse tree itself depends on arbitrary template instantiation, and is therefore the parsing step is undecidable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;dolphin-progress-report-november-2016-https-dolphin-emu-org-blog-2016-12-01-dolphin-progress-report-november-2016&#34;&gt;&lt;a href=&#34;https://dolphin-emu.org/blog/2016/12/01/dolphin-progress-report-november-2016/&#34;&gt; Dolphin Progress Report: November 2016 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;On the 22nd of November, Marcan of Hackmii.com released the Homebrew Channel as an open source application, removed the anti-emulation hooks, and fixed a few bugs in Dolphin so that it could run properly! Nearly a decade after its inception, the homebrew channel is finally emulated! Admittedly, it has very little use for Dolphin it is extremely cool to have. Some packed Wii homebrew elfs will only run in Dolphin from the homebrew channel currently. One more thing of importance: If you are running Linux and have a Sandy Bridge, Ivy Bridge, Haswell, or Broadwell CPU, you may be having some weird performance issues with Dolphin. In order to make the highest quality video dumps from within Dolphin, users will want to use the built-in framedump features. There are people who use Dolphin&amp;rsquo;s Android builds, and some very high end devices can handle Dolphin in some situations. While Dolphin will currently invalidate UIDs on new builds, this is not necessary and with the proper infrastructure they will only be invalidated on actual shader generation changes. While it&amp;rsquo;s been rather maligned by users and developers alike, it remains the most complete UI for Dolphin.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;what-s-new-in-git-2-11-https-medium-com-kannonboy-whats-new-in-git-2-11-64860aea6c4f&#34;&gt;&lt;a href=&#34;https://medium.com/@kannonboy/whats-new-in-git-2-11-64860aea6c4f&#34;&gt; What’s new in Git 2.11? &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Git diff -submodule=short displays the old commit and new commit from the submodule referenced by your project: git diff -submodule=log is a bit more useful, and displays the summary line from the commit message of any new or removed commits in the updated submodule: Git 2.11 introduces a third option: -submodule=diff. Git stash show 1$ git stash apply 1$ git stash pop 1And so forth. Git LFS reduces your repository size by using a clean filter to squirrel away large file content in the LFS cache, and adds a tiny &amp;ldquo;Pointer&amp;rdquo; file to the Git object store instead. Smudge filters are the opposite of clean filters - hence the name. The Git LFS smudge filter transforms pointer files by replacing them with the corresponding large file, either from your LFS cache or by reading through to your Git LFS store on Bitbucket. As of Git 2.11, smudge and clean filters can be defined as long running processes that are invoked once for the first filtered file, then fed subsequent files that need smudging or cleaning until the parent Git operation exits. Git cat-file -filtersAnother small improvement for users of Git LFS and other filter-based extensions is the new -filters option for the git cat-file command. Png happens to be tracked with Git LFS, and git cat-file skips the Git LFS smudge filter, so rather than getting our image back we just get the contents of the Git LFS pointer file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;get-ready-for-advent-of-code-http-adventofcode-com&#34;&gt;&lt;a href=&#34;http://adventofcode.com/&#34;&gt; Get ready for Advent of Code!! :) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-whole-mess-of-documentation-aggregated-in-an-easy-to-read-searchable-site-with-offline-mode-http-devdocs-io&#34;&gt;&lt;a href=&#34;http://devdocs.io/&#34;&gt; A whole mess of documentation aggregated in an easy to read, searchable site, with offline mode. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;no-excuses-write-unit-tests-https-dev-to-jackmarchant-no-excuses-write-unit-tests&#34;&gt;&lt;a href=&#34;https://dev.to/jackmarchant/no-excuses-write-unit-tests&#34;&gt; No excuses, write unit tests &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Unit testing can sometimes be a tricky subject no matter what language you&amp;rsquo;re writing in. There&amp;rsquo;s fear unit testing will take time your team doesn&amp;rsquo;t have Your team can&amp;rsquo;t agree on an acceptable level of test coverage or get stuck bike-shedding* People are frustrated by breaking tests when changing code. Unit testing your code takes some extra time upfront, because of course, you need to write extra code - the tests. If tests did not break, and that code went out to production, now everywhere else the code was used is now broken, you&amp;rsquo;ve got 99 problems but lucky you, testing ain&amp;rsquo;t one. This rule can be applied to unit testing in a number of ways, but the most useful I&amp;rsquo;ve found is to first write the code to make the thing work, preferably small functions and then write a test for it. After you&amp;rsquo;ve been going writing tests for a while, you should start to notice more things you change will break existing tests. In my experience, I see no reason good enough not to at least have some unit testing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;zero-cost-abstractions-https-ruudvanasseldonk-com-2016-11-30-zero-cost-abstractions&#34;&gt;&lt;a href=&#34;https://ruudvanasseldonk.com/2016/11/30/zero-cost-abstractions&#34;&gt; Zero-cost abstractions &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Iterating over it with a for loop implicitly creates an iterator, however in the case of Range that iterator is the structure itself. Iter() constructs a slice iterator, and the call to zip implicitly constructs an iterator for the buffer slice as well. Zip and map both wrap their input iterators in a new iterator structure. Sum repeatedly calls next() on its input iterator, pattern matches on the result, and adds up the values until the iterator is exhausted. Iterators also introduce extra control flow: zip will terminate after one of its inner iterators is exhausted, so in principle it has to branch twice on every iteration. The input slices have a fixed size of 12 elements, and despite the use of iterators, the compiler was able to unroll everything here. In this post I&amp;rsquo;ve shown a small snippet of code that uses high-level constructs such as closures and iterator combinators, yet the code compiles down to the same instructions that a hand-written C program would compile to.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2016 week 47 in programming</title>
      <link>http://iszlai.github.io/post/2016_week_47_in_programming/</link>
      <pubDate>Sat, 26 Nov 2016 14:21:56 +0100</pubDate>
      
      <guid>http://iszlai.github.io/post/2016_week_47_in_programming/</guid>
      <description>

&lt;h2 id=&#34;programmers-are-having-a-huge-discussion-about-the-unethical-and-illegal-things-they-ve-been-asked-to-do-http-www-businessinsider-com-programmers-confess-unethical-illegal-tasks-asked-of-them-2016-11&#34;&gt;&lt;a href=&#34;http://www.businessinsider.com/programmers-confess-unethical-illegal-tasks-asked-of-them-2016-11&#34;&gt; Programmers are having a huge discussion about the unethical and illegal things they’ve been asked to do &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Dozens of people have already been killed by faulty software in cars, while hundreds of people have been killed from faulty software during air travel. &amp;ldquo;Uncle&amp;rdquo; Bob MartinYouTube/Expert Talks MobileBut Martin pointed out, &amp;ldquo;The weird thing is, it was software developers who wrote that code. It was us. Some programmers wrote cheating code. Do you think they knew? I think they probably knew.&amp;rdquo; Sourour&amp;rsquo;s &amp;ldquo;Ashamed&amp;rdquo; post went viral on Hacker News and Reddit and it unleashed a long list of confessions from programmers about the unethical and, sometimes, illegal things they&amp;rsquo;ve been asked to do. Programmers then wrote scripts to help the company&amp;rsquo;s salespeople target these people. Now, he says, these same programmers are &amp;ldquo;Working on startups that scoop up massive amounts of people&amp;rsquo;s location data.&amp;rdquo; YouTube/&amp;ldquo;Uncle&amp;rdquo; Bob Martin - &amp;ldquo;The Future of Programming&amp;rdquo;Another programmer was hired to write software for a radio device and was asked to make it use channels reserved for emergency services because this would make the device operate faster. He warned, if programmers don&amp;rsquo;t start to govern themselves, after that apocalypse event that kills thousands of people occurs, legislators will do it for them, dictating everything about their jobs, down to the languages they are allowed to use.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;let-s-encrypt-everything-https-blog-codinghorror-com-lets-encrypt-everything&#34;&gt;&lt;a href=&#34;https://blog.codinghorror.com/lets-encrypt-everything/&#34;&gt; Let&amp;rsquo;s Encrypt Everything &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The performance penalty of HTTPS is gone HTTPS arguably performs better than HTTP on modern devices. Historically these certificates have been issued by certificate authorities, and they were at least $30 per year per website, sometimes hundreds of dollars per year. Let&amp;rsquo;s Encrypt is a 501.3&amp;copy;(3) non-profit organization supported by the Linux Foundation. As a company, we&amp;rsquo;ve donated a Discourse hosted support community, and a cash amount that represents how much we would have paid in a year to one of the existing for-profit certificate authorities to set up HTTPS for all the Discourse websites we host. Estimate how much you would have paid for any free SSL certificates you obtained from Let&amp;rsquo;s Encrypt, and please donate that amount to Let&amp;rsquo;s Encrypt. If you work for a large company, urge them to sponsor Let&amp;rsquo;s Encrypt as a fundamental cornerstone of a safe web. If you believe in an unalienable right to privacy on the Internet for every citizen in every nation, please support Let&amp;rsquo;s Encrypt.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;powershell-to-replace-cmd-as-windows-default-shell-inside-14971-https-blogs-windows-com-windowsexperience-2016-11-17-announcing-windows-10-insider-preview-build-14971-for-pc-veeb5jvwfl7qy4x4-97&#34;&gt;&lt;a href=&#34;https://blogs.windows.com/windowsexperience/2016/11/17/announcing-windows-10-insider-preview-build-14971-for-pc/#VeEB5jvwFL7Qy4x4.97&#34;&gt; Powershell to replace CMD as windows default shell (Inside 14971) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Today we are excited to be releasing Windows 10 Insider Preview Build 14971 for PC to Windows Insiders in the Fast ring. Read EPUB books in Microsoft Edge: The reading experience will get even better with the Windows 10 Creators Update! In addition to providing a great reading experience for PDF files - you can now read any unprotected e-book in the EPUB file format with Microsoft Edge. Bringing 3D to Everyone via the Paint 3D Preview app: Starting with this build and going forward, the Paint 3D Preview app is now included as part of Windows 10. Remix 3D Preview, the community counterpart to Paint 3D Preview, is expanding to Austria, Belgium, Denmark, Germany, Ireland, Netherlands, Norway, Sweden, and Switzerland for Windows Insiders today! Remix 3D Preview is currently only available in English but we will continue to expand our region and language support. For those who prefer to use Command Prompt, you can opt out of the WIN + X change by opening Settings &amp;gt; Personalization &amp;gt; Taskbar, and turning &amp;ldquo;Replace Command Prompt with Windows PowerShell in the menu when I right-click the Start button or press Windows key+X&amp;rdquo; to &amp;ldquo;Off&amp;rdquo;. As we have previously announced we are working on the Windows Holographic Shell that is going to be included in the upcoming Windows 10 Creators Update. We love seeing our Windows Insiders organize #WINsiders4Good events on their own! This is exactly why we created the DIY kit and we love seeing you all use it to build relationships and solve problems in your communities.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-unfixable-bug-http-www-ilikebigbits-com-blog-2016-11-22-the-unfixable-bug&#34;&gt;&lt;a href=&#34;http://www.ilikebigbits.com/blog/2016/11/22/the-unfixable-bug&#34;&gt; The Unfixable Bug &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Before modeling a pretty car I started with something simpler: a box. I coded up a simple red box and dropped it into the terrain. At one point I changed the color of the box to white, relaunched the game and - there it was! A nice little box sitting in the landscape. Why would the box only be visible when it has a certain color? I checked the pixel shader. Everything seemed OK - but why was my box invisible when it was red? And only when it was red? I could find it when it was blue, white, black and purple. I tried resetting the color to red again and - WTH!? - there it was! I was back where I started code-wise, but now the box was visible again. As it turned out, the reason I couldn&amp;rsquo;t see the red box in the green landscape was simple: I am red-green color blind.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-list-of-computer-science-courses-with-video-lectures-https-github-com-developer-y-cs-video-courses-blob-master-readme-md&#34;&gt;&lt;a href=&#34;https://github.com/Developer-Y/cs-video-courses/blob/master/README.md&#34;&gt; A list of Computer Science courses with video lectures &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;information-wants-to-be-free-so-we-re-giving-away-our-400-intro-java-lectures-assignments-https-www-ktbyte-com-java-tutorial&#34;&gt;&lt;a href=&#34;https://www.ktbyte.com/java-tutorial&#34;&gt; Information wants to be free, so we&amp;rsquo;re giving away our 400+ intro Java lectures / assignments &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;computer-science-legend-rear-adm-grace-hopper-posthumously-receives-presidential-medal-of-freedom-http-www-navy-mil-submit-display-asp-story-id-97807&#34;&gt;&lt;a href=&#34;http://www.navy.mil/submit/display.asp?story_id=97807&#34;&gt; Computer Science Legend, Rear Adm. Grace Hopper, Posthumously Receives Presidential Medal of Freedom &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Grace Murray Hopper, best known for her advancements in computer programming and data processing, was awarded the Presidential Medal of Freedom posthumously by President Barack Obama during a White House ceremony Nov. 22. &amp;ldquo;While the women who pioneered software were often overlooked the most prestigious award for young computer scientists now bear her name,&amp;rdquo; he said, referring to the annual Grace Murray Hopper Award for Outstanding Young Computer Professionals, established in 1971 by the Association for Computing Machinery. To accept the award on Hopper&amp;rsquo;s behalf was her grand-niece Deborah Murray, who stood alongside the president as the citation was read, &amp;ldquo;As a child who loved disassembling alarm clocks Rear Adm. Grace Murray Hopper found her calling early. Known today as the&amp;rdquo;queen of code&amp;rdquo; Grace Hopper&amp;rsquo;s work helped make the coding language more practical and accessible&amp;hellip;Amazing Grace was committed to making the language of computer programming more universal. Today we honor her contributions to computer science and the sense of possibility she inspired for the generations of young people. There, she completed groundbreaking work in computer technology, including producing a model of the electronic computer, the Mark I, and introducing the word &amp;ldquo;Bug&amp;rdquo; to describe a computer malfunction. Often referred to as the &amp;ldquo;Mother of computing,&amp;rdquo; Hopper was instrumental in the creation of UNIVAC, the first all-electronic digital computer. Tighe, who has described Hopper as a role model, added, &amp;ldquo;Quite simply, and on many levels, Rear Adm. Grace Murray Hopper is an inspiration for us all. As a pioneer in computing, as a woman leading the way in the STEM field at a time when that was almost completely unheard of, and as a dedicated naval officer, she paved the way so that all of us who followed could succeed. All of us in the Information Warfare Community owe her our gratitude. The award of the Presidential Medal of Freedom is both well-earned and well deserved!&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;super-mario-bros-3-wrong-warp-https-www-youtube-com-watch-v-fxzuzos7auk&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fxZuzos7Auk&#34;&gt; Super Mario Bros. 3 - Wrong Warp &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;How does the wrong warp actually work in Super Mario Bros. PATRONSThank you everyone for your help! It means so much to me.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;margaret-hamilton-apollo-software-engineer-awarded-presidential-medal-of-freedom-https-www-nasa-gov-feature-margaret-hamilton-apollo-software-engineer-awarded-presidential-medal-of-freedom&#34;&gt;&lt;a href=&#34;https://www.nasa.gov/feature/margaret-hamilton-apollo-software-engineer-awarded-presidential-medal-of-freedom&#34;&gt; Margaret Hamilton, Apollo Software Engineer, Awarded Presidential Medal of Freedom &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-4-bit-calculator-made-in-cardboard-and-marble-http-lapinozz-github-io-learning-2016-11-19-calculator-with-caordboard-and-marbles-html&#34;&gt;&lt;a href=&#34;http://lapinozz.github.io/learning/2016/11/19/calculator-with-caordboard-and-marbles.html&#34;&gt; A 4-bit Calculator made in cardboard and marble &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;LOGIC. LOGIC is a fully functional 4-bit calculator made entirely out of cardboard, hot glue and marbles. You place your input numbers as binary in the inputs, a marble is a one, no marble is a zero. If there is no marble in: no marble outIf there is one marble in: no marble outIf there is two marble in: one marble out. If you have one marble than it passIf you have two marbles then they should cancel out. If there is one marble: make it fall in the first outputIf there is two marbles: make one of them fall in the second output. The first marble flip a little piece of cardboard, so if there is a second marble it fills fall in a hole. If there is one marble: make it fall in the first outputIf there is two marbles: make one of them fall in the second outputIf there is three marbles: make one the fall in the first output and another in the second.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;humble-book-bundle-o-reilly-unix-books-https-www-humblebundle-com-books-unix-book-bundle&#34;&gt;&lt;a href=&#34;https://www.humblebundle.com/books/unix-book-bundle&#34;&gt; Humble Book Bundle: O&amp;rsquo;Reilly Unix books &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;We called up our friends at O&amp;rsquo;Reilly to put together this bundle of Unix resources for all! Find your nutshell reference, your pocket guide, and your power tools here. O&amp;rsquo;Reilly has a bonus for us, too: Enter your email address to immediately receive an excerpt from &amp;ldquo;Ten Steps to Linux Survival&amp;rdquo; by Jim Lehmer. Learn Linux diagnostic and recovery tasks so you can jump in and fix a system problem when your site goes down! Together, these books would cost over $500. Here at Humble Bundle you name your price of $1 or more! These books are available in PDF, ePUB, and MOBI formats, meaning you can read them anywhere at any time. Instructions and a list of recommended reading programs can be found here. If you like what we do, you can leave us a Humble Tip too!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;rust-s-standard-hash-table-types-could-go-quadratic-x-post-r-rust-http-accidentallyquadratic-tumblr-com-post-153545455987-rust-hash-iteration-reinsertion&#34;&gt;&lt;a href=&#34;http://accidentallyquadratic.tumblr.com/post/153545455987/rust-hash-iteration-reinsertion&#34;&gt; “Rust’s standard hash table types could go quadratic.” [x-post /r/rust] &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;To understand the bug, we&amp;rsquo;re going to need to understand the hash table strategy used by Rust&amp;rsquo;s standard hash tables. A major challenge in any general-purpose hash table implementation is how to handle hash collisions; If you have a table with N buckets, eventually you&amp;rsquo;ll get two elements with the same value of hashcode%N, and what do you do? In hash tables, &amp;ldquo;Open addressing&amp;rdquo; refers to the technique of, upon encountering a collision, somehow selecting an alternate location in the hash table. The problem occurs because iteration over a hash table procedes by walking the backing array of the hash table directly. They&amp;rsquo;re also speculating about a more fundamental fix to the hash table implementation, so that users who drop in a different hash algorithm are not again vulnerable. One proposal is that hash tables ought to retain their insertion order, since this bug is much less likely to happen if tables do not leak their hash order. Rust&amp;rsquo;s hash tables were very carefully thought by experienced developers well-versed in the literature and practice of deliberate quadratic attacks on hash tables.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-balanced-ternary-machines-of-soviet-russia-https-dev-to-buntine-the-balanced-ternary-machines-of-soviet-russia&#34;&gt;&lt;a href=&#34;https://dev.to/buntine/the-balanced-ternary-machines-of-soviet-russia&#34;&gt; The Balanced Ternary Machines of Soviet Russia &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Perhaps the prettiest number system of all is the balanced ternary notation&amp;rdquo; - Donald E. Knuth, The Art of Computer Programming, Vol. Enter Setun, a balanced ternary computer developed in 1958 by a small team led by Nikolay Brusentsov at the Moscow State University. In its balanced form, we can think of the ternary values as being &amp;ldquo;Balanced&amp;rdquo; around the mid-point of 0. In balanced ternary, as we&amp;rsquo;re about to discover, to represent the inverse of a number we simply have to swap all +&amp;rsquo;s with -&amp;rsquo;s and vice versa. The development of balanced ternary machines has all but faded into a small footnote in the annals of computer history. For the moment at least, I don&amp;rsquo;t think that you&amp;rsquo;ll be hearing much more about balanced ternary computers in the near future. Although Setun was the first electronic device to operate on balanced ternary, it&amp;rsquo;s worth mentioning that the idea of using balanced ternary in computing devices was first popularized over 100 years before.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-rebuttal-for-python-3-https-eev-ee-blog-2016-11-23-a-rebuttal-for-python-3&#34;&gt;&lt;a href=&#34;https://eev.ee/blog/2016/11/23/a-rebuttal-for-python-3/&#34;&gt; A Rebuttal For Python 3 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;You only &amp;ldquo;Cannot&amp;rdquo; run Python 2 inside the Python 3 VM because no one has written a Python 2 interpreter in Python 3. Python 3 comes with a tool called 2to3 which is supposed to take Python 2 code and translate it to Python 3 code. So my Python 3 code, written and intended purely for Python 3, now has to deal with Python 2 integers as well. What about the standard library, which has had a number of improvements in Python 3 that don&amp;rsquo;t or can&amp;rsquo;t exist in Python 2? Should Python ship two entire separate copies of its standard library? What about modules like logging, which rely on global state? Does Python 2 and Python 3 code need to set up logging separately within the same process? Python 3 has been purposefully crippled to prevent Python 2&amp;rsquo;s execution alongside Python 3 for someone&amp;rsquo;s professional or ideological gain. By the way, did you know that several error messages are much improved in Python 3? Python 2 is somewhat notorious for the confusing errors it produces when an argument is missing from a method call, but Python 3 is specific about the problem, which is much friendlier to beginners. Now we&amp;rsquo;re finally, finally at the point where virtually all libraries support Python 3, a few new ones only support Python 3, and Python 3 adoption is starting to take hold among application developers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;what-is-in-c-code-http-stackoverflow-com-questions-9229601-what-is-in-c-code&#34;&gt;&lt;a href=&#34;http://stackoverflow.com/questions/9229601/what-is-in-c-code&#34;&gt; What is &amp;ldquo;:-!!&amp;rdquo; in C code? &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Another common mechanism is to call a function that isn&amp;rsquo;t defined and rely on the optimizer to compile-out the function call if your assertion is correct. In sympathy for the need for compile-time assertions, GCC 4.3 introduced the the error function attribute that allows you to extend upon this older concept, but generate a compile-time error with a message of your choosing - no more cryptic &amp;ldquo;Negative sized array&amp;rdquo; error messages! This macro will evaluate its parameter exactly once and create a compile-time error that says &amp;ldquo;I told you not to give me a five!&amp;rdquo; if the expression evaluates to five or is not a compile-time constant. So why aren&amp;rsquo;t we using this instead of negative-sized bit-fields? Alas, there are currently many restrictions of the use of statement expressions, including their use as constant initializers even if the statement expression is completely constant its self test). Hopefully, GCC will amend these shortcomings soon and allow constant statement expressions to be used as constant initializers. The challenge here is the language specification defining what is a legal constant expression. So I hope that gcc can make a constexpr functionality available as an extension via -std=gnuc99 &amp;amp; -std=gnuc11 or some such and allow its use on statement expressions et.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;rider-a-crossplatform-c-ide-by-jetbrains-now-in-public-eap-https-blog-jetbrains-com-dotnet-2016-11-21-jetbrains-rider-public-preview&#34;&gt;&lt;a href=&#34;https://blog.jetbrains.com/dotnet/2016/11/21/jetbrains-rider-public-preview/&#34;&gt; Rider, a crossplatform C# IDE by Jetbrains now in public EAP &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;While we&amp;rsquo;re not quite feature complete, and there are still a couple of rough edges, we know of many people, inside and outside of JetBrains, who are already using Rider for day-to-day development. TL;DR:. Download the first public Rider EAP build. While the plugin SDK is still under development, Rider already supports both IntelliJ and ReSharper plugins, so Rider can take advantage of existing IntelliJ plugins such as VIM editing mode. Check out Hadi&amp;rsquo;s Rider Tips and Tricks video from NDC Sydney for more examples of how the IntelliJ platform will help you using Rider. Remember, Rider is built from the ReSharper codebase - Rider IS ReSharper. So that&amp;rsquo;s what it&amp;rsquo;s going to be - welcome to JetBrains Rider. Download the first public Rider EAP build from the web site, or fire up Toolbox: Rider&amp;rsquo;s going to be there as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;do-not-change-linux-files-using-windows-apps-and-tools-https-blogs-msdn-microsoft-com-commandline-2016-11-17-do-not-change-linux-files-using-windows-apps-and-tools&#34;&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/commandline/2016/11/17/do-not-change-linux-files-using-windows-apps-and-tools/&#34;&gt; Do not change Linux files using Windows apps and tools &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;DO NOT, under ANY circumstances, create and/or modify Linux files using Windows apps, tools, scripts, consoles, etc. Creating/changing Linux files from Windows will likely result in data corruption and/or damage your Linux environment requiring you to uninstall &amp;amp; reinstall your distro! If WSL can&amp;rsquo;t find Linux file metadata for a given file, it assumes the file is corrupted/damaged, and will likely fail to open/read the file correctly, causing apps, tools, etc. Several Windows tools implement different strategies to handle file updating and don&amp;rsquo;t actually edit files in-place. To work on files using both Windows and Linux tools, store &amp;amp; work on those files in your Windows filesystem, and access them from both Windows and from Bash via /mnt/&lt;drive&gt;/path. So you can easily access the same files using both Windows tools and Bash tools without having to copy files back and forth between filesystems. DO store files in your Windows filesystem that you want to create/modify using Windows tools AND Linux tools DO NOT create / modify Linux files from Windows apps, tools, scripts or consoles.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;steven-skiena-s-lectures-on-algorithms-and-data-structures-last-updated-2012-http-www3-cs-stonybrook-edu-algorith-video-lectures&#34;&gt;&lt;a href=&#34;http://www3.cs.stonybrook.edu/~algorith/video-lectures/&#34;&gt; Steven Skiena&amp;rsquo;s lectures on Algorithms and Data Structures (last updated 2012) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Below are audio, video and lecture sides for 1997 and 2007. Since the lectures are 10 years apart some of the topics covered by the course have changed. The 1997 lectures have a better quality video and audio than the 2007, although the 2007 covers the newer material and has better lecture notes. If you found this useful also check out the video lectures of my Discrete Mathematics, Computational Biology, and Computational Finance courses. To download audio, right click and choose `Save Page As&amp;rsquo;. Topic.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;opengl-renderer-design-how-i-write-opengl-these-days-https-nlguillemot-wordpress-com-2016-11-18-opengl-renderer-design&#34;&gt;&lt;a href=&#34;https://nlguillemot.wordpress.com/2016/11/18/opengl-renderer-design/&#34;&gt; OpenGL Renderer Design (how I write OpenGL these days) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In a typical renderer, you might have a table of all the materials, a table of all the meshes, a table of all the instances of meshes, a table of all the cameras, and etc. The specifics of these tables depends on your project, so if you&amp;rsquo;re doing a skeletal animation project you would also have a table of the skeletons, instances of skeletons, and so on. Table usually have a &amp;ldquo;Primary key&amp;rdquo;, which can be used to identify each object in the table uniquely, and can also be used to efficiently lookup the object. Each mesh instance would then have a foreign key to the mesh table, and a foreign key to the transform table. I should point out that since my Scene class is implemented only in terms of plain OpenGL objects, that makes it easy for anybody to write an OpenGL renderer that reads the contents of the tables and renders them in whatever way they see fit. You might have a table for all the transforms, a table for mesh instances, and a table for meshes. To support relative transformations, I suggest creating a new table that stores the edges of the transformation tree, meaning each object in the table stores the foreign keys of two transforms: The parent and the child.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;git-also-for-a-file-in-your-git-repository-prints-other-files-that-are-most-often-committed-together-https-github-com-anvaka-git-also-git-also&#34;&gt;&lt;a href=&#34;https://github.com/anvaka/git-also#git-also&#34;&gt; &lt;code&gt;git also&lt;/code&gt; - for a file in your git repository prints other files that are most often committed together &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;For a file in your git repository, prints other files that are most often committed together. &amp;gt; src/core/Object3D.js most often committed with: # together Similarity Name 51 0.22 src/core/Geometry. This means that file Object3D.js is most often committed with Geometry. The Similarity column shows Jaccard index of two files. Usage: git-also [options] &lt;file&gt; For a &lt;file&gt; in your git repository prints other files that are most often committed together Options: -h, -help output usage information -V, -version output the version number -c, -count &lt;n&gt; Print top N other files. Files are often committed together when developers improve code or add new features. What are related file to this file? Where else should I look when I fix bugs in this file?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;composition-over-inheritance-https-www-youtube-com-watch-v-wfmtdgfhwpa-t-2s&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wfMtDGfHWpA&amp;amp;t=2s&#34;&gt; Composition over Inheritance &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a weekly show where we try to become more confident and excited about programming by learning intriguing things that we didn&amp;rsquo;t know before. Today, we are are going to talk about composition over inheritance. Inheritance is when you design your types after what they are, while composition is when you design your types after what they cando. We are going to learn about the limitations of inheritance, and how to solve them using composition.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;open-source-net-2-years-later-http-www-mattwarren-org-2016-11-23-open-source-net-2-years-later&#34;&gt;&lt;a href=&#34;http://www.mattwarren.org/2016/11/23/open-source-net-2-years-later/&#34;&gt; Open Source .NET – 2 years later &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A little over 2 years ago Microsoft announced that they were open sourcing large parts of the. First we are going to see an overview of the level of activity in each repo, by looking at the total number of &amp;lsquo;Issues&amp;rsquo; or &amp;lsquo;Pull Requests&amp;rsquo; per month. The main trend I see across all repos is there&amp;rsquo;s a sustained level of activity for the entire 2 years, things didn&amp;rsquo;t start with a bang and then tailed off. This data represents the total participation from the last 2 years, i.e. November 2014 to October 2016. Finally we can see the &amp;lsquo;per-month&amp;rsquo; data from the last 2 years, i.e. November 2014 to October 2016. Whilst not every repo is growing month-by-month, the majority are and those that aren&amp;rsquo;t at least show sustained contributions across 2 years. I think that it&amp;rsquo;s clear to see that the Community has got on-board with the new Open-Source Microsoft, producing a sustained level of contributions over the last 2 years, lets hope it continues!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;great-tutorial-on-learning-to-think-abstractly-and-analyze-algorithms-old-article-one-of-the-best-http-worrydream-com-ladderofabstraction&#34;&gt;&lt;a href=&#34;http://worrydream.com/LadderOfAbstraction/&#34;&gt; Great tutorial on learning to think abstractly and analyze algorithms (old article, one of the best) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;When creating abstractions, stepping down is as important as stepping up. Here, we take the abstraction from the previous section, and overlay a concrete representation on top of it. Every point on a visual abstraction typically corresponds to a particular concrete state. Pointing at the abstraction to step down to a concrete representation lets us quickly explore regions of interest. In the concrete representation it jumps out at us, because it violates our common sense. That is, it&amp;rsquo;s possible to step down from the abstraction just in our heads. We&amp;rsquo;re not far off the ground yet! As we climb higher on the ladder of abstraction, it will become harder to imagine the concrete steps beneath, and more critical that our abstractions provide a way to interactively step down to a more concrete representation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;sophie-wilson-the-future-of-microprocessors-https-www-youtube-com-watch-v-9mzmvhwmqw&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_9mzmvhwMqw&#34;&gt; Sophie Wilson - The Future of Microprocessors &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;her-code-got-humans-on-the-moon-and-invented-software-itself-https-www-wired-com-2015-10-margaret-hamilton-nasa-apollo&#34;&gt;&lt;a href=&#34;https://www.wired.com/2015/10/margaret-hamilton-nasa-apollo/&#34;&gt; Her Code Got Humans on the Moon—And Invented Software Itself &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Margaret Hamilton wasn&amp;rsquo;t supposed to invent the modern concept of software and land men on the moon. Hamilton, a 24-year-old with an undergrad degree in mathematics, had gotten a job as a programmer at MIT, and the plan was for her to support her husband through his three-year stint at Harvard Law. As a working mother in the 1960s, Hamilton was unusual; but as a spaceship programmer, Hamilton was positively radical. Hamilton would bring her daughter Lauren by the lab on weekends and evenings. Like female coders in today&amp;rsquo;s diversity-challenged tech industry, Hamilton was an outlier. As Hamilton&amp;rsquo;s career got under way, the software world was on the verge of a giant leap, thanks to the Apollo program launched by John F. Kennedy in 1961. At the MIT Instrumentation Lab where Hamilton worked, she and her colleagues were inventing core ideas in computer programming as they wrote the code for the world&amp;rsquo;s first portable computer.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2016 week 46 in programming</title>
      <link>http://iszlai.github.io/post/2016_week_46_in_programming/</link>
      <pubDate>Sat, 19 Nov 2016 14:21:53 +0100</pubDate>
      
      <guid>http://iszlai.github.io/post/2016_week_46_in_programming/</guid>
      <description>

&lt;h2 id=&#34;programmers-are-having-a-huge-discussion-about-the-unethical-and-illegal-things-they-ve-been-asked-to-do-http-www-businessinsider-com-programmers-confess-unethical-illegal-tasks-asked-of-them-2016-11&#34;&gt;&lt;a href=&#34;http://www.businessinsider.com/programmers-confess-unethical-illegal-tasks-asked-of-them-2016-11&#34;&gt; Programmers are having a huge discussion about the unethical and illegal things they’ve been asked to do &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Dozens of people have already been killed by faulty software in cars, while hundreds of people have been killed from faulty software during air travel. Martin pointed out, &amp;ldquo;The weird thing is, it was software developers who wrote that code. It was us. Some programmers wrote cheating code. Do you think they knew? I think they probably knew.&amp;rdquo; Sourour&amp;rsquo;s &amp;ldquo;Ashamed&amp;rdquo; post went viral on Hacker News and Reddit and it unleashed a long list of confessions from programmers about the unethical and, sometimes, illegal things they&amp;rsquo;ve been asked to do. Programmers then wrote scripts to help the company&amp;rsquo;s salespeople target these people. Now, he says, these same programmers are &amp;ldquo;Working on startups that scoop up massive amounts of people&amp;rsquo;s location data.&amp;rdquo; Another programmer was hired to write software for a radio device and was asked to make it use channels reserved for emergency services because this would make the device operate faster. He warned, if programmers don&amp;rsquo;t start to govern themselves, after that apocalypse event that kills thousands of people occurs, legislators will do it for them, dictating everything about their jobs, down to the languages they are allowed to use.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-code-i-m-still-ashamed-of-https-medium-freecodecamp-com-the-code-im-still-ashamed-of-e4c021dff55e-vmbgbtgin&#34;&gt;&lt;a href=&#34;https://medium.freecodecamp.com/the-code-im-still-ashamed-of-e4c021dff55e#.vmbgbtgin&#34;&gt; The code I’m still ashamed of &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;If you write code for a living, there&amp;rsquo;s a chance that at some point in your career, someone will ask you to code something a little deceitful - if not outright unethical. In Canada, there are strict limits on how pharmaceutical companies can advertise prescription drugs directly to consumers. As a result, these companies would create websites that present general information about whatever symptoms their drugs were meant to address. In the end, I understood that the real purpose of the site was to push a particular drug. We had discovered while working on the project that she had actually been prescribed the very drug I was building a site for. Still, I&amp;rsquo;ve never felt okay about writing that code. It&amp;rsquo;s not hard to imagine them recommending prescription drugs soon, too.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;microsoft-joins-the-linux-foundation-as-a-platinum-member-http-venturebeat-com-2016-11-16-microsoft-joins-the-linux-foundation-as-a-platinum-member&#34;&gt;&lt;a href=&#34;http://venturebeat.com/2016/11/16/microsoft-joins-the-linux-foundation-as-a-platinum-member/&#34;&gt; Microsoft joins The Linux Foundation as a Platinum member &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;At its Connect(); 2016 developer event in New York City today, Microsoft announced it is joining The Linux Foundation. Microsoft already contributes to several of its projects, including Node.js Foundation, OpenDaylight, Open Container Initiative, R Consortium, and Open API Initiative. &amp;ldquo;Microsoft has grown and matured in its use of and contributions to open-source technology,&amp;rdquo; The Linux Foundation executive director Jim Zemlin said in a statement. &amp;ldquo;The company has become an enthusiastic supporter of Linux and of open-source and a very active member of many important projects. Membership is an important step for Microsoft, but also for the open-source community at large, which stands to benefit from the company&amp;rsquo;s expanding range of contributions.&amp;rdquo; We interviewed Zemlin, who was excited to elaborate on the news, noting that The Linux Foundation and Microsoft started conversations about membership earlier this year. Microsoft naturally stands to benefit as well, and not just in terms of PR. In addition to Microsoft taking an active role in making the organization better, membership means the company can better collaborate with the open-source community to improve mobile and cloud technology that millions rely on. &amp;ldquo;The Linux Foundation is home not only to Linux, but many of the community&amp;rsquo;s most innovative open-source projects. We are excited to join The Linux Foundation and partner with the community to help developers capitalize on the shift to intelligent cloud and mobile experiences.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;to-learn-programming-do-projects-you-actually-care-about-https-datarebellion-com-blog-to-learn-programming-do-projects-you-actually-care-about&#34;&gt;&lt;a href=&#34;https://datarebellion.com/blog/to-learn-programming-do-projects-you-actually-care-about/&#34;&gt; To Learn Programming, Do Projects You Actually Care About &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Data Rebellion is all about getting your programming abilities to the point of usefulness as quickly as possible. Now, a majority of the time the fate of the planet won&amp;rsquo;t depend on your latest Python project. Have you ever had the experience where you start a course and get through the first few lectures, only to forget about it the next week? Or download an ebook and never get around to opening it? Or get bored of artificial exercises? Or lose interest in a project you know isn&amp;rsquo;t really useful to you or that you don&amp;rsquo;t truly care about? Personally, I&amp;rsquo;ve lost count of all the things I&amp;rsquo;ve started and never finished. Sounds kind of pathetic, doesn&amp;rsquo;t it? But at that point I was starting to get a feel for the language, and I came up with a personal project I was genuinely interested in: writing a program that composed music. It didn&amp;rsquo;t win any Grammy&amp;rsquo;s, but going through the entire process of envisioning an ambitious project, methodically working through it, and ending with an actual working product brought me to a whole new level in programming, more so than any course or ebook ever did. So if you&amp;rsquo;re in the beginning-to-intermediate stages of your programming journey, here&amp;rsquo;s my suggestion to you: find a need or passion of yours that you think might just be possible to address with code and start working on it ASAP. Here&amp;rsquo;s a list of projects to jump-start your thinking. If you can&amp;rsquo;t see exactly how to get from point A to point B, good! That means you&amp;rsquo;re going to learn something along the way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;8-million-github-profiles-were-leaked-from-geekedin-s-mongodb-https-www-troyhunt-com-8-million-github-profiles-were-leaked-from-geekedins-mongodb-heres-how-to-see-yours&#34;&gt;&lt;a href=&#34;https://www.troyhunt.com/8-million-github-profiles-were-leaked-from-geekedins-mongodb-heres-how-to-see-yours/&#34;&gt; 8 million GitHub profiles were leaked from GeekedIn&amp;rsquo;s MongoDB &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I wasn&amp;rsquo;t aware of any implementation within GitHub that publicly exposed this information for the purpose of mass consumption, and frankly, by now it was starting to smell a bit bad&amp;hellip;. Last thing before I start talking about disclosure: when I analysed the data set I found almost 8.2 million unique email addresses. Moving on, given what I&amp;rsquo;d seen thus far I decided to reach out to GitHub directly as it was their data that was involved here, even if it was leaked from another service. Particularly if data was circulating among traders, there was every chance people would start popping up and saying &amp;ldquo;Hey, I&amp;rsquo;ve got the GitHub data breach&amp;rdquo;. Third parties frequently scrape public GitHub data for various reasons, such as research or archival purposes. It is wrong, not just the scraping of GitHub in the first place in order to commercialise our information, but then subsequently losing it via a MongoDB with no password and now having it float around the web in data breach trading circles. No, it shouldn&amp;rsquo;t have been aggregated en masse and no, it definitely shouldn&amp;rsquo;t have been leaked, but it is data that on a per-individual basis you can go and retrieve from anyone&amp;rsquo;s GitHub profile. That&amp;rsquo;s it! Once again, you&amp;rsquo;re only going to show up here if your email address was successfully pulled from GitHub, but I hope it&amp;rsquo;s useful for the million plus people whose data was exposed somewhere they never expected it to be.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;introduction-to-machine-learning-for-developers-http-blog-algorithmia-com-introduction-machine-learning-developers&#34;&gt;&lt;a href=&#34;http://blog.algorithmia.com/introduction-machine-learning-developers/&#34;&gt; Introduction to Machine Learning for developers &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Today&amp;rsquo;s developers often hear about leveraging machine learning algorithms in order to build more intelligent applications, but many don&amp;rsquo;t know where to start. One of the most important aspects of developing smart applications is to understand the underlying machine learning models, even if you aren&amp;rsquo;t the person building them. Machine learning studies computer algorithms for learning to do stuff. Machine learning is about learning to do better in the future based on what was experienced in the past. The two main types of machine learning algorithms are supervised and unsupervised learning. Pandas is a Python library that uses data frames such as R. While it slow to use in production, Pandas is a favorite in using for data analysis and machine learning in a Python environment. Scikit-learn is another favorite Python library and is a great place to find machine learning models with tutorials and documentation that have been vetted by many Python developers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;google-joins-net-foundation-https-techcrunch-com-2016-11-16-google-signs-on-to-the-net-foundation-and-samsung-brings-net-support-to-tizen&#34;&gt;&lt;a href=&#34;https://techcrunch.com/2016/11/16/google-signs-on-to-the-net-foundation-and-samsung-brings-net-support-to-tizen/&#34;&gt; Google joins .NET Foundation &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;NET Foundation, the open-source organization Microsoft established to guide the future development of the. NET Foundation, where it joins the likes of Red Hat, Unity, Samsung JetBrains and Microsoft in the Technical Steering Group. NET applications thanks to its support for Windows Server, and offers. NET by launching support for it on its Tizen platform. As Samsung&amp;rsquo;s Hong-Seok Kim told me, Samsung was looking for a framework in addition to the web framework and C API that Tizen developers currently use to write their applications. &amp;ldquo;We looked into alternatives but.NET was superior,&amp;rdquo; he said and noted that Samsung was looking for a framework with a strong foundation in terms of language support, APIs and tooling, as well as one with a large built-in developer base and open-source community. NET&amp;rsquo;s existing ecosystem, Samsung surely hopes that this move will also broaden its own Tizen developer ecosystem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-we-make-money-at-stack-overflow-2016-edition-http-stackoverflow-blog-2016-11-how-we-make-money-at-stack-overflow-2016-edition&#34;&gt;&lt;a href=&#34;http://stackoverflow.blog/2016/11/How-We-Make-Money-at-Stack-Overflow-2016-Edition/&#34;&gt; How We Make Money at Stack Overflow: 2016 Edition &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The more companies and developers we have, the better and faster the matching we can do with developers and hopefully their dream jobs. I helped build this because I think it&amp;rsquo;s an awesome way we can improve life over resumes and CVs. It helps developers show off who they are, the things they do, and in an approachable way that&amp;rsquo;s maintainable. While we&amp;rsquo;d love to help match you to a perfect company, we built both Jobs and Developer Story to support our core mission of serving ALL developers, including those of you who just don&amp;rsquo;t care about job searching right now. We&amp;rsquo;re working to change how companies treat developers not only through the standards built into Jobs, but also through our Developer Hiring Blog, which we created for the express purpose of improving employer and recruiter practices. With Developer Story, we want to change the perception that developers are only as good as their last gig or a title. We&amp;rsquo;re going to spend more time developing Stack Overflow Enterprise. We are in the process of sending out an email now announcing Developer Story to the larger community in the hopes that we can help some percentage of developers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;glacially-slow-ip-over-qr-code-tunnel-http-seiferteric-com-p-356&#34;&gt;&lt;a href=&#34;http://seiferteric.com/?p=356&#34;&gt; Glacially Slow IP Over QR Code Tunnel! &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This time I wanted to send data using your monitor and a webcam, but how could I send data reliably without too much work? QR Code! So the idea this time is to use a tun device, read packets from it, convert to QR Code and display on screen. First, you need some way to acknowledge that the other side read my message, so I added a simple header of the form SEQ/ACK where I increment the sequence with each new qrcode and increment the acknowledge when I successfully read the other sides qr code. QR Codes support a binary mode, but this is the least efficient and decided to instead use alphanumeric and base32 encode the packet data. Base64 would not work because the QR Code in this mode only supports uppercase letters. Next was an issue were the library I used to encode the data, qrtools, would generate a qr code, but the data would not be the same when decoding! So I fixed this by detecting this, then adding some padding to the data and trying again until it works, then strip the padding off on the other side. To maintain my sanity during testing, I was able to run the code in a docker container for the remote side, and instead of using webcam, just pass the qr code image file in a volume mount. Speeeeeeed! Only rewrite qrcode when new data is available pack as much data into a qrcode as possible cleanup code, fix syn/ack to avoid packet dups better detection library? Get a better camera for the laptop? Non-vertical youtube videos 🙂. Related.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-to-calculate-a-nation-state-s-election-result-in-your-bedroom-https-medium-com-michaelsproul-how-to-calculate-a-nation-states-election-result-in-your-bedroom-30f0c5d905af&#34;&gt;&lt;a href=&#34;https://medium.com/@michaelsproul/how-to-calculate-a-nation-states-election-result-in-your-bedroom-30f0c5d905af&#34;&gt; How to calculate a nation state’s election result in your bedroom &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;With this in mind, on July 11 - a week after the election itself - I started hacking away on some code to compute the election result from the CSV files published on the AEC&amp;rsquo;s website. STV what now?The Australian senate uses a proportional representation system called single transferable vote which allows voters to specify several candidates they&amp;rsquo;d like to vote for in order of least to most evil. If your first choice doesn&amp;rsquo;t get enough votes to be elected, your vote is transferred to your second, and so on, until either you run out of people you can bring yourself to vote for, or all the available spots in the senate are filled. The ballot parsing is the most nuanced, as we have to enforce rules about the number of candidates each voter has to specify, and decide which vote to count if someone has voted both above the line and below the line. Although it&amp;rsquo;s tempting to represent these fractions as floating point numbers, this will result in an inevitable loss of accuracy, which could throw the whole election result off. Interestingly, the result of the 2016 election seems reasonably stable with respect to minor alterations of the algorithm and ballot validation rules. Are voting errors uniformly distributed across political allegiances? If not, could the AEC tweak the validation rules to alter the result? Does rounding favour small or large parties? Would we better off paying the computational price to use an exact algorithm with no rounding at all?Pretty graphs related to either of the above.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;elasticsearch-adventures-in-scaling-a-multitenant-platform-http-www-bigeng-io-elasticsearch-scaling-multitenant&#34;&gt;&lt;a href=&#34;http://www.bigeng.io/elasticsearch-scaling-multitenant/&#34;&gt; Elasticsearch: Adventures in scaling a multitenant platform &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Our previous production platform assigned each store to a single shard, in a single index. With limited information available at the time of implementation and without a reasonably defined set of product requirements, the hypothesis was that it would be faster for Elasticsearch to only have to query a single shard rather than broadcasting the query over the entire cluster of up to 60+ shards. Stores with big catalogs could create shards upto 150GB Unbalanced shards, data is not distributed evenly over all shards Massive shards take a significant amount of time to relocate when the index is re-sharded Massive shards cause heap stress resulting in heavy Garbage Collection and stop the world events Routed index causes nodes with big shards to get &amp;ldquo;Hot&amp;rdquo; Often seen during traffic bursts and site crawling Causes poor responses times for other stores on shards on those nodes Causes GC pauses on nodes. Must be scalable to allow faceted search for all stores Should limit shard sizes to &amp;lt;50GB Should limit JVM heap size to around 16GB Must be able to meet and exceed current and historical load from current platform Should stick to Elasticsearch default configurations as much as possible, the fewer tweaks the better. Using shard allocation filtering, we can create multiple indexes and assign their shards to particular nodes, essentially creating small clusters within the overall larger cluster. Having fewer shards increases the performance, seemingly regardless of the number of shards. So now to find the documents for any given store, we only need to query 8 shards so we only have to wait for those 8 shards to be searched.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;mssql-sever-for-linux-runs-on-user-mode-nt-kernel-library-http-www-theregister-co-uk-2016-11-18-microsoft-running-windows-apps-on-linux&#34;&gt;&lt;a href=&#34;http://www.theregister.co.uk/2016/11/18/microsoft_running_windows_apps_on_linux/&#34;&gt; MSSQL Sever for Linux runs on user-mode NT kernel library &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In March, when Microsoft announced plans to release SQL Server for Linux, Scott Guthrie, EVP of Microsoft&amp;rsquo;s cloud and enterprise group, said, &amp;ldquo;This will enable SQL Server to deliver a consistent data platform across Windows Server and Linux, as well as on-premises and cloud.&amp;rdquo; The release of the first public preview of SQL Server for Linux on Wednesday reveals just how consistent that platform is: It&amp;rsquo;s the Windows version of SQL Server running on the Windows NT kernel as a guest app, more or less. Microsoft could have ported SQL Server to run as a native Linux application. SQL Server for Linux runs atop a Drawbridge Windows library OS - a user-mode NT kernel - within a secure container called a picoprocess that communicates with the host Linux operating system through the Drawbridge application binary interface. In other words, Microsoft&amp;rsquo;s SQL Server for Linux is really the Windows SQL Server executable with a small Windows 8 kernel glued underneath, all running in a normal Linux process. In theory, Microsoft can use this technology to bring its other Windows server applications to Linux with minimal changes, using SQL Server as a starting point. Where once Linux was a cancer to Microsoft, now Windows is growing inside of Linux.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-to-easily-modify-regular-expressions-someone-else-wrote-https-medium-com-yumenohosi-visualizing-regular-expressions-regexper-com-dade9ae3f0ab&#34;&gt;&lt;a href=&#34;https://medium.com/@yumenohosi/visualizing-regular-expressions-regexper-com-dade9ae3f0ab&#34;&gt; How to easily modify regular expressions someone else wrote &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;When confronted with a problem, think &amp;ldquo;I know, I&amp;rsquo;ll use regular expressions.&amp;rdquo; Now they have two problems. I&amp;rsquo;m not completely sure where I stand as to the universal utility of regular expressions, but I did meet with a problem recently with the markdown parser that our team was using on a project. As I needed an immediate fix, I went to the source, soon finding myself amidst regular expressions like the following. Then I remembered having seen a service called regexper.com, a site that helps turn regular expression strings into something like this. Anyway, this was how the regular expression turned out for me. Regular expressions that were once hard to describe using only words, with the help of imaging, are now much easier to express and understand. Satisfied with the results, and since I was on the subject, I thought I&amp;rsquo;d apply &amp;ldquo;Regexper&amp;rdquo; on all the regular expressions that showed up in the &amp;ldquo;Marked&amp;rdquo; module I was working with.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-to-write-an-object-oriented-program-that-doesn-t-suck-https-dev-to-naveen-how-to-write-an-object-oriented-program-that-doesnt-suck&#34;&gt;&lt;a href=&#34;https://dev.to/naveen/how-to-write-an-object-oriented-program-that-doesnt-suck&#34;&gt; How to write an object oriented program that doesn&amp;rsquo;t suck &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I have seen many computer programmers proudly proclaim &amp;ldquo;Yup, I designed my code in an object oriented way - I have defined my data members as private, they can be only accessed through public methods - I have created base classes and sub-classes that follow a hierarchy - I have created virtual methods in the base class that shares common behavior that can be used in derived classes.&amp;rdquo; Is that what object orientation is all about? There is definitely more to it. Now the Account class has the flexibility to delegate the logging activity to the Logger class and it can focus only on Account related activities. Can we try extending the code by adding a new class whenever a new account type needs to be added and inherit it from Account class? By doing so, we are not only abstracting the Account class but also allowing it to share common behavior across it&amp;rsquo;s child classes. The OnlineAccount class will only implement IProcessInterest while the Account class will implement both IProcessInterest and IWithdrawable. Let&amp;rsquo;s go back to the first issue we resolved where we added Logger class to delegate the responsibility of logging from Account class. We are again violating the Account class by giving more responsibility to decide which instance of the Logging class to be created. It is not the job of Account class to decide on object creation for logging.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;new-google-ai-experiment-quick-draw-have-google-s-neural-network-guess-your-doodles-https-aiexperiments-withgoogle-com-quick-draw&#34;&gt;&lt;a href=&#34;https://aiexperiments.withgoogle.com/quick-draw&#34;&gt; New Google AI Experiment - Quick Draw - Have Google&amp;rsquo;s Neural Network guess your doodles &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;You draw, and a neural network tries to guess what you&amp;rsquo;re drawing. The more you play with it, the more it will learn. It&amp;rsquo;s just one example of how you can use machine learning in fun ways.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;powershell-to-replace-cmd-as-windows-default-shell-inside-14971-https-blogs-windows-com-windowsexperience-2016-11-17-announcing-windows-10-insider-preview-build-14971-for-pc-veeb5jvwfl7qy4x4-97&#34;&gt;&lt;a href=&#34;https://blogs.windows.com/windowsexperience/2016/11/17/announcing-windows-10-insider-preview-build-14971-for-pc/#VeEB5jvwFL7Qy4x4.97&#34;&gt; Powershell to replace CMD as windows default shell (Inside 14971) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Today we are excited to be releasing Windows 10 Insider Preview Build 14971 for PC to Windows Insiders in the Fast ring. Read EPUB books in Microsoft Edge: The reading experience will get even better with the Windows 10 Creators Update! In addition to providing a great reading experience for PDF files - you can now read any unprotected e-book in the EPUB file format with Microsoft Edge. Bringing 3D to Everyone via the Paint 3D Preview app: Starting with this build and going forward, the Paint 3D Preview app is now included as part of Windows 10. Remix 3D Preview, the community counterpart to Paint 3D Preview, is expanding to Austria, Belgium, Denmark, Germany, Ireland, Netherlands, Norway, Sweden, and Switzerland for Windows Insiders today! Remix 3D Preview is currently only available in English but we will continue to expand our region and language support. For those who prefer to use Command Prompt, you can opt out of the WIN + X change by opening Settings &amp;gt; Personalization &amp;gt; Taskbar, and turning &amp;ldquo;Replace Command Prompt with Windows PowerShell in the menu when I right-click the Start button or press Windows key+X&amp;rdquo; to &amp;ldquo;Off&amp;rdquo;. As we have previously announced we are working on the Windows Holographic Shell that is going to be included in the upcoming Windows 10 Creators Update. We love seeing our Windows Insiders organize #WINsiders4Good events on their own! This is exactly why we created the DIY kit and we love seeing you all use it to build relationships and solve problems in your communities.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;grace-hopper-posthumously-awarded-presidential-medal-of-freedom-https-www-whitehouse-gov-the-press-office-2016-11-16-president-obama-names-recipients-presidential-medal-freedom&#34;&gt;&lt;a href=&#34;https://www.whitehouse.gov/the-press-office/2016/11/16/president-obama-names-recipients-presidential-medal-freedom&#34;&gt; Grace Hopper posthumously awarded Presidential Medal of Freedom &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The Presidential Medal of Freedom is the Nation&amp;rsquo;s highest civilian honor, presented to individuals who have made especially meritorious contributions to the security or national interests of the United States, to world peace, or to cultural or other significant public or private endeavors. The awards will be presented at the White House on November 22nd. President Obama said, &amp;ldquo;The Presidential Medal of Freedom is not just our nation&amp;rsquo;s highest civilian honor - it&amp;rsquo;s a tribute to the idea that all of us, no matter where we come from, have the opportunity to change this country for the better. From scientists, philanthropists, and public servants to activists, athletes, and artists, these 21 individuals have helped push America forward, inspiring millions of people around the world along the way.&amp;rdquo; He has been nominated for the Academy Award for Best Actor in a Leading Role five times, and received the award for his work in Philadelphia and Forrest Gump. During his career, he won six championships, five Most Valuable Player awards, and appeared in 14 All-Star games. Diana Ross is an Academy Award nominee, inductee into the Rock &amp;amp; Roll Hall of Fame, and recipient of the Grammy Awards highest honor, the Lifetime Achievement Award. She has won two Emmy Awards and a Tony Award, and is known for her performances in Sounder, The Autobiography of Miss Jane Pittman, and The Help. In 2013, she returned to the stage with The Trip to the Bountiful, and was awarded the Tony Award for best leading actress.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;amazon-to-drop-dreaded-stack-ranking-performance-reviews-http-www-seattletimes-com-business-amazon-amazon-says-it-will-change-performance-reviews-focus-on-staffers-strengths&#34;&gt;&lt;a href=&#34;http://www.seattletimes.com/business/amazon/amazon-says-it-will-change-performance-reviews-focus-on-staffers-strengths/&#34;&gt; Amazon to drop dreaded stack-ranking performance reviews &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;We&amp;rsquo;re launching a new annual review process next year that is radically simplified and focuses on our employees&amp;rsquo; strengths, not the absence of weaknesses,&amp;rdquo; Amazon spokeswoman Teal Pennebaker said. The changes, first reported by tech news site GeekWire and set to become effective in 2017, make Amazon the latest tech firm to abandon the dreaded stack-ranking system. On Friday, several &amp;ldquo;Affinity groups&amp;rdquo; within Amazon wrote to Bezos expressing concern about members feeling &amp;ldquo;Undeservingly pulled into the spotlight&amp;rdquo; of racial and gender controversy during the heated campaign. Bezos replied on Sunday saying that diversity is a core Amazon principle. In the case of Amazon, the regime has generated some unrest. At a website dubbed &amp;ldquo;The Former And Current Employees of Amazon,&amp;rdquo; where Amazonians can post anonymous accounts of their complaints with the company, &amp;ldquo;Performance Reviews&amp;rdquo; is one of the most popular categories. Bloomquist, the recruiter, said that phasing out stack ranking could boost Amazon&amp;rsquo;s competitiveness as an employer as others try to encroach on its talent.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;so-finally-new-features-in-c-7-0-https-channel9-msdn-com-events-connect-2016-105&#34;&gt;&lt;a href=&#34;https://channel9.msdn.com/Events/Connect/2016/105&#34;&gt; So Finally, New Features in C# 7.0 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Unless this has changed in the release version than it seems there is a mistake within pattern matching example where the variable &amp;lsquo;i&amp;rsquo; is used outside its if level scope. If the pattern appears in the condition of an if statement, its scope is the condition and controlled statement of the if statement, but not its else clause. If this is correct than the i variable should not be in scope after the if.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-balanced-ternary-machines-of-soviet-russia-https-dev-to-buntine-the-balanced-ternary-machines-of-soviet-russia&#34;&gt;&lt;a href=&#34;https://dev.to/buntine/the-balanced-ternary-machines-of-soviet-russia&#34;&gt; The Balanced Ternary Machines of Soviet Russia &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Perhaps the prettiest number system of all is the balanced ternary notation&amp;rdquo; - Donald E. Knuth, The Art of Computer Programming, Vol. Enter Setun, a balanced ternary computer developed in 1958 by a small team led by Nikolay Brusentsov at the Moscow State University. In its balanced form, we can think of the ternary values as being &amp;ldquo;Balanced&amp;rdquo; around the mid-point of 0. In balanced ternary, as we&amp;rsquo;re about to discover, to represent the inverse of a number we simply have to swap all +&amp;rsquo;s with -&amp;rsquo;s and vice versa. The development of balanced ternary machines has all but faded into a small footnote in the annals of computer history. For the moment at least, I don&amp;rsquo;t think that you&amp;rsquo;ll be hearing much more about balanced ternary computers in the near future. Although Setun was the first electronic device to operate on balanced ternary, it&amp;rsquo;s worth mentioning that the idea of using balanced ternary in computing devices was first popularized over 100 years before.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;jāas-javascript-as-a-service-http-jaasjs-com&#34;&gt;&lt;a href=&#34;http://jaasjs.com&#34;&gt; Jāas: JavaScript as a Service &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Jāas abstracts away the abstractions created by JavaScript libraries, frameworks, toolchains, compilers, and linters so you can enjoy the benefits of being on the bleeding edge without having to learn about them. You can write JavaScript like it&amp;rsquo;s 1998, and Jāas will turn it into modern type-safe, modular, and maintainable JavaScript that uses the hottest new libraries to accomplish the same thing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;what-is-in-c-code-http-stackoverflow-com-questions-9229601-what-is-in-c-code&#34;&gt;&lt;a href=&#34;http://stackoverflow.com/questions/9229601/what-is-in-c-code&#34;&gt; What is &amp;ldquo;:-!!&amp;rdquo; in C code? &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Another common mechanism is to call a function that isn&amp;rsquo;t defined and rely on the optimizer to compile-out the function call if your assertion is correct. In sympathy for the need for compile-time assertions, GCC 4.3 introduced the the error function attribute that allows you to extend upon this older concept, but generate a compile-time error with a message of your choosing - no more cryptic &amp;ldquo;Negative sized array&amp;rdquo; error messages! This macro will evaluate its parameter exactly once and create a compile-time error that says &amp;ldquo;I told you not to give me a five!&amp;rdquo; if the expression evaluates to five or is not a compile-time constant. So why aren&amp;rsquo;t we using this instead of negative-sized bit-fields? Alas, there are currently many restrictions of the use of statement expressions, including their use as constant initializers even if the statement expression is completely constant its self test). Hopefully, GCC will amend these shortcomings soon and allow constant statement expressions to be used as constant initializers. The challenge here is the language specification defining what is a legal constant expression. So I hope that gcc can make a constexpr functionality available as an extension via -std=gnuc99 &amp;amp; -std=gnuc11 or some such and allow its use on statement expressions et.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;google-cloud-is-50-cheaper-than-aws-https-thehftguy-wordpress-com-2016-11-18-google-cloud-is-50-cheaper-than-aws&#34;&gt;&lt;a href=&#34;https://thehftguy.wordpress.com/2016/11/18/google-cloud-is-50-cheaper-than-aws/&#34;&gt; Google Cloud is 50% cheaper than AWS &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Either way, the Google entry-level instance is significantly cheaper than both AWS entry-level instances. All Google instances have significantly faster network than the equivalent AWS instances, to the point where they&amp;rsquo;re not even playing in the same league. Google is cheaper per CPU. Google CPU instances have half the memory of AWS CPU instances. Google memory instances have 15% less memory than AWS CPU instances. AWS forces you to buy a big instance to get enough SSD space whereas Google allows you to attach a SSD to a small instance. Only a very particular instance can fulfil the requirements, it comes with many cores and 4800 GB of unnecessary local SSD. The AWS bill is $4k higher than the equivalent setup on Google Cloud. We could recreate any instance from AWS on Google Cloud.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;do-not-change-linux-files-using-windows-apps-and-tools-https-blogs-msdn-microsoft-com-commandline-2016-11-17-do-not-change-linux-files-using-windows-apps-and-tools&#34;&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/commandline/2016/11/17/do-not-change-linux-files-using-windows-apps-and-tools/&#34;&gt; Do not change Linux files using Windows apps and tools &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;DO NOT, under ANY circumstances, create and/or modify Linux files using Windows apps, tools, scripts, consoles, etc. Creating/changing Linux files from Windows will likely result in data corruption and/or damage your Linux environment requiring you to uninstall &amp;amp; reinstall your distro! If WSL can&amp;rsquo;t find Linux file metadata for a given file, it assumes the file is corrupted/damaged, and will likely fail to open/read the file correctly, causing apps, tools, etc. Several Windows tools implement different strategies to handle file updating and don&amp;rsquo;t actually edit files in-place. To work on files using both Windows and Linux tools, store &amp;amp; work on those files in your Windows filesystem, and access them from both Windows and from Bash via /mnt/&lt;drive&gt;/path. So you can easily access the same files using both Windows tools and Bash tools without having to copy files back and forth between filesystems. DO store files in your Windows filesystem that you want to create/modify using Windows tools AND Linux tools DO NOT create / modify Linux files from Windows apps, tools, scripts or consoles.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;opengl-renderer-design-how-i-write-opengl-these-days-https-nlguillemot-wordpress-com-2016-11-18-opengl-renderer-design&#34;&gt;&lt;a href=&#34;https://nlguillemot.wordpress.com/2016/11/18/opengl-renderer-design/&#34;&gt; OpenGL Renderer Design (how I write OpenGL these days) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In a typical renderer, you might have a table of all the materials, a table of all the meshes, a table of all the instances of meshes, a table of all the cameras, and etc. The specifics of these tables depends on your project, so if you&amp;rsquo;re doing a skeletal animation project you would also have a table of the skeletons, instances of skeletons, and so on. Table usually have a &amp;ldquo;Primary key&amp;rdquo;, which can be used to identify each object in the table uniquely, and can also be used to efficiently lookup the object. Each mesh instance would then have a foreign key to the mesh table, and a foreign key to the transform table. I should point out that since my Scene class is implemented only in terms of plain OpenGL objects, that makes it easy for anybody to write an OpenGL renderer that reads the contents of the tables and renders them in whatever way they see fit. You might have a table for all the transforms, a table for mesh instances, and a table for meshes. To support relative transformations, I suggest creating a new table that stores the edges of the transformation tree, meaning each object in the table stores the foreign keys of two transforms: The parent and the child.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2016 week 45 in programming</title>
      <link>http://iszlai.github.io/post/2016_week_45_in_programming/</link>
      <pubDate>Sat, 12 Nov 2016 14:21:48 +0100</pubDate>
      
      <guid>http://iszlai.github.io/post/2016_week_45_in_programming/</guid>
      <description>

&lt;h2 id=&#34;some-guy-named-marc-andreessen-was-convinced-that-netscape-should-embed-a-programming-language-in-html-javascript-gets-written-in-10-days-flat-https-brendaneich-com-2008-04-popularity&#34;&gt;&lt;a href=&#34;https://brendaneich.com/2008/04/popularity/&#34;&gt; Some guy named Marc Andreessen was convinced that Netscape should embed a programming language in HTML =&amp;gt; Javascript gets written in 10 days flat. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Brendan Eich convinced his pointy-haired boss at Netscape that the Navigator browser should have its own scripting language, and that only a new language would do, a new language designed and implemented in big hurry, and that no existing language should be considered for that role. As I&amp;rsquo;ve often said, and as others at Netscape can confirm, I was recruited to Netscape with the promise of &amp;ldquo;Doing Scheme&amp;rdquo; in the browser. At least client engineering management including Tom Paquin, Michael Toy, and Rick Schell, along with some guy named Marc Andreessen, were convinced that Netscape should embed a programming language, in source form, in HTML. So it was hardly a case of me selling a &amp;ldquo;Pointy-haired boss&amp;rdquo; - more the reverse. Of course, by the time I joined Netscape, and then transferred out of the server group where I had been hired based on short-term requisition scarcity games, the Oak language had been renamed Java, and Netscape was negotiating with Sun to include it in Navigator. The big debate inside Netscape therefore became &amp;ldquo;Why two languages? why not just Java?&amp;rdquo; The answer was that two languages were required to serve the two mostly-disjoint audiences in the programming ziggurat who most deserved dedicated programming languages: the component authors, who wrote in C++ or Java; and the &amp;ldquo;Scripters&amp;rdquo;, amateur or pro, who would write code directly embedded in HTML. Whether any existing language could be used, instead of inventing a new one, was also not something I decided. The diktat from upper engineering management was that the language must &amp;ldquo;Look like Java&amp;rdquo;. From the beginning, Bill grokked the idea of an easy-to-use &amp;ldquo;Scripting language&amp;rdquo; as a companion to Java, analogous to VB&amp;rsquo;s relationship to C++ in Microsoft&amp;rsquo;s platform of the mid-nineties.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;so-you-think-you-know-c-https-medium-com-okaleniuk-so-you-think-you-know-c-8d4e2cd6f6a6-mc04v71nr&#34;&gt;&lt;a href=&#34;https://medium.com/@okaleniuk/so-you-think-you-know-c-8d4e2cd6f6a6#.mc04v71nr&#34;&gt; So you think you know C? &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A lot of programmers claim they know C. Well, it has the most famous syntax, it has been there for 44 years, and it&amp;rsquo;s not cluttered with obscure features. I mean, it&amp;rsquo;s easy to claim that you know C. You probably learned it in college or on the go, you probably had some experience with it, you probably think that you know it through and through, because there&amp;rsquo;s not much to know. A B C D1 v2 v3 v4 v5 vYes, the right answer for every question in &amp;ldquo;I don&amp;rsquo;t know&amp;rdquo;. C itself does not define padding attributes, so the right answer is: &amp;ldquo;I don&amp;rsquo;t know&amp;rdquo;. So the right answer is: &amp;ldquo;I don&amp;rsquo;t know&amp;rdquo;. The fourth looks tricky, but it&amp;rsquo;s not that hard in retrospective, since you already know that int size is not directly specified in the standard. So once again &amp;ldquo;I don&amp;rsquo;t know&amp;rdquo; is the right answer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;i-ve-written-a-survival-guide-for-fellow-junior-developers-check-it-out-https-medium-com-learning-new-stuff-survival-guide-for-junior-developers-d35371dd0818&#34;&gt;&lt;a href=&#34;https://medium.com/learning-new-stuff/survival-guide-for-junior-developers-d35371dd0818&#34;&gt; I&amp;rsquo;ve written a survival guide for fellow junior developers, check it out &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The switch from doing coding bootcamp projects to working on Xeneta&amp;rsquo;s full blown SaaS app with 7 other developers forced me up a pretty steep leaning curve, which I feared I wouldn&amp;rsquo;t manage to ascend, as reading source code of similar projects scared the shit out of me. If not, you&amp;rsquo;ll waste too much time banging you head against the wall. Take notesPeople are usually perfectly fine with helping others out, but you should avoid asking the same question multiple times. So whenever you get help, remember to write down the solution to next time you&amp;rsquo;re in the same situation. There are no stupid questions, but if you&amp;rsquo;ve asked the same question before, it&amp;rsquo;s a stupid one the second time you ask. Often times it&amp;rsquo;s just the terminology that&amp;rsquo;s foreign to you. Then use open time slots to learn more about the concepts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;wind-waker-graphics-analysis-https-medium-com-gordonnl-wind-waker-graphics-analysis-a0b575a31127-p2qh15z87&#34;&gt;&lt;a href=&#34;https://medium.com/@gordonnl/wind-waker-graphics-analysis-a0b575a31127#.p2qh15z87&#34;&gt; Wind Waker Graphics Analysis &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Although there are two variations of oceans in Wind Waker, I find this version to be the most memorable. So to recreate this, I&amp;rsquo;ve use some compound sine curves to displace the texture lookup, as seen above on the right. An added benefit of using sine curves for displacement, is that they animate so beautifully by simply throwing time into the equation. Now, simply combine several sine curves to compound them. 6x+8.94 / 4 Here, four sine curves have been used, each with a different scale and offset. To get started, I again used the compound sine curves technique to create the rising and falling of the waves, displacing the y value of the plane&amp;rsquo;s geometry. To replicate movement around the ocean without actually moving the plane, the texture lookup can be offset by a movement vector, making the texture slide across the surface.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;visual-studio-for-mac-introducing-visual-studio-for-mac-https-msdn-microsoft-com-en-us-magazine-mt790182-aspx&#34;&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/magazine/mt790182.aspx&#34;&gt; Visual Studio for Mac - Introducing Visual Studio for Mac &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;an-interesting-story-about-self-taught-software-engineers-self-taught-software-engineers-why-open-source-is-important-to-us-https-medium-com-rocknnull-self-taught-software-engineers-why-open-source-is-important-to-us-fe2a3473a576-jm7kbh33q&#34;&gt;&lt;a href=&#34;https://medium.com/rocknnull/self-taught-software-engineers-why-open-source-is-important-to-us-fe2a3473a576#.jm7kbh33q&#34;&gt; An interesting story about self-taught Software Engineers: &amp;ldquo;Self-taught Software Engineers: Why Open Source is important to us&amp;rdquo; &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Introduction to Open SourceAbout 13 years ago a friend introduced me to Open Source community. Why share for free the source code of my program, which I spend months developing? What if someone stole it? What if my &amp;ldquo;Competitors&amp;rdquo; use my source code to improve their products? I contributed and I improved an open source library and the open source community helped me to understand and correctly use collaborative tools like &amp;ldquo;Pull Request&amp;rdquo;. So for every open source project I am using, I am observing the source code. Thanks to open source we have access to some big projects like Mozilla Firefox for iOS or Wordpress for iOS. Being curious and observing projects like these will help you to evolve as Software Developer. Creating open source librariesAt some point I created a custom UIAlertView that I was using to my projects and I decided to make it open source. If you are active at Open Source community then you will be able to keep up with the best Software Developers or even better, to collaborate with them on a project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-riot-games-manages-docker-containers-in-production-http-engineering-riotgames-com-news-running-online-services-riot-part-ii&#34;&gt;&lt;a href=&#34;http://engineering.riotgames.com/news/running-online-services-riot-part-ii&#34;&gt; How Riot Games manages docker containers in production &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The answer to these three questions is that we need a scheduler - a service that operates at the cluster layer and executes our container strategy. The scheduler is a key component in maintaining the cluster, ensuring that containers are running in the right places, and restarting them when they die. We might want to launch a service such as Hextech Crafting, that needs six container instances to handle its load. The scheduler is responsible for finding hosts with enough memory and CPU resources to support these containers and doing whatever operations are needed to get those containers running. If one of those servers ever goes down, the scheduler is also responsible for finding a replacement host for the affected containers. They didn&amp;rsquo;t support container groups which we felt we&amp;rsquo;d need for bundling sidecar containers with many of our services. Admiral is written in Go and is compiled and packaged into a Docker container when run in a production datacenter. Moving forward, we&amp;rsquo;ll be transitioning work off Admiral and focusing on deploying DC/OS - which has become one of the leading open-source applications for scheduling container workloads.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;someone-said-learning-angular-was-excruciating-so-i-put-out-a-free-course-to-make-it-less-so-https-coursetro-com-courses-8-learn-angular-2-development-with-our-free-course&#34;&gt;&lt;a href=&#34;https://coursetro.com/courses/8/Learn-Angular-2-Development-with-our-Free-Course&#34;&gt; Someone said learning Angular was &amp;ldquo;Excruciating&amp;rdquo;, so I put out a free course to make it less so. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In the world of frontend development, Angular 2 is perhaps one of the hottest topics. We&amp;rsquo;re proud to announce this 100% free course, containing both video and written content, on getting started with Angular 2. This course is perfect for those who have never touched AngularJS or Angular 2. The Angular-CLI method where you run a simply command to get your Angular 2 app up and running. We start dissecting how Angular 2 apps function at their most fundamental level. These are all of the core fundamentals that one must understand before beginning full Angular 2 apps. So if you&amp;rsquo;re ready to learn Angular 2 development today, let&amp;rsquo;s get started!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;call-for-volunteers-to-port-to-modern-opengl-in-blender-who-can-help-out-anyone-well-anyone-that-can-program-in-c-if-you-re-familiar-with-traditional-opengl-glbegin-glvertex-glend-you-ve-got-a-head-start-even-if-opengl-is-new-to-you-the-api-is-small-and-easy-to-learn-https-wiki-blender-org-index-php-dev-2-8-source-opengl-immediatemodereplacement&#34;&gt;&lt;a href=&#34;https://wiki.blender.org/index.php/Dev:2.8/Source/OpenGL/ImmediateModeReplacement&#34;&gt; call for volunteers to port to modern openGL in Blender. &amp;ldquo;Who can help out? Anyone! Well anyone that can program in C. If you’re familiar with traditional OpenGL (glBegin, glVertex, glEnd) you’ve got a head start. Even if OpenGL is new to you the API is small and easy to learn.&amp;rdquo; &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;All Blender code that calls legacy OpenGL functions must transition to the new API before we can throw the big switch to enable core profile. Even if OpenGL is new to you the API is small and easy to learn. Here&amp;rsquo;s a small example of legacy OpenGL followed by the new API. We&amp;rsquo;ll be drawing a triangle that has one corner with color A and the other two corners color B, the colors blending smoothly across the triangle. The old API might or might not use shaders but the new API always does. In the new API, vertex attribute values can only be set between Begin and End, and affect the current vertex. The new API has no concept of &amp;ldquo;Current color&amp;rdquo;. 8 branch has the new drawing API; all work should happen there.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;is-intuition-in-programming-important-to-you-https-vermillionazure-com-2016-11-09-is-intuition-in-programming-important-to-you&#34;&gt;&lt;a href=&#34;https://vermillionazure.com/2016/11/09/is-intuition-in-programming-important-to-you/&#34;&gt; Is intuition in programming important to you? &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I don&amp;rsquo;t realize it myself a lot of times, but I&amp;rsquo;ve come a long way in changing my mindset to handle the terminology of programming ideas and make them seem natural. Do you remember the day when you didn&amp;rsquo;t understand anything of programming terminology? Today, many people do not know what a &amp;ldquo;Segmentation fault&amp;rdquo; is or why their program is crashing. Do you remember how you first grasped these basic ideas of programming? Of course, Stack Overflow has a strict policy on repeating questions that have already been answered, and an unwritten, unspoken policy on downvoting really basic questions - which I quickly learned after the fact. Who is aiming to precisely teach &amp;ldquo;How to compress methods and ideas intuitively so that they can be reconstructed and utilized at will&amp;rdquo; for basic programming concepts? For searching and understanding basic programming terminology? If you remember the time that you searched &amp;ldquo;What is the best programming language?&amp;rdquo; on the Internet, you may remember that the best answer that was given was no answer at all.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-list-of-almost-all-headless-web-browsers-in-existence-https-github-com-dhamaniasad-headlessbrowsers&#34;&gt;&lt;a href=&#34;https://github.com/dhamaniasad/HeadlessBrowsers&#34;&gt; A list of (almost) all headless web browsers in existence &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Rb Headless Ruby browser on top of Nokogiri and TheRubyRacer Ruby Not specified Browserjet Headless webkit browser with node. Js, with all of the pain taken out! That means you get a real browser, with a real DOM, and can do real testing! JavaScript Not specified grope A non-GUI library to represent browser environment using WebKit Framework + RubyCocoa Ruby MIT Headless Headless browser support for fast web acceptance testing in. Net.NET MIT headless browser Headless browser based on WebKit written in C++. C++ Not Specified Headless Chromium Headless Chromium is a library for running Chromium in a headless/server environment. JavaScript, Java, Ruby, PHP Apache / Commercial Selenium Selenium is a suite of tools to automate web browsers across many platforms. JavaScript Mozilla 2.0 SpecterJS A scriptable headless Internet Explorer port of PhantomJS. JavaScript MIT Splash Splash is a javascript rendering service with an HTTP API. It&amp;rsquo;s a lightweight browser with an HTTP API, implemented in Python using Twisted and QT. Any BSD-3 Clause Splinter Splinter is an open source tool for testing web applications using Python. Python - stanislaw Python headless browser testing Python Not specified trifleJS A headless Internet Explorer browser using the. Ruby MIT Webloop Scriptable, headless WebKit with a Go API. Go BSD-3 Clause WKZombie Functional headless browser for iOS using WebKit and hpple/libxml2.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;cracking-videogame-passwords-mike-tyson-s-punch-out-https-www-youtube-com-watch-v-ap1yl-kgglg&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ap1YL_kGGlg&#34;&gt; Cracking Videogame Passwords: Mike Tyson&amp;rsquo;s Punch-Out‼ &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;oauth-2-0-hack-exposes-1-billion-mobile-apps-to-account-hijacking-https-threatpost-com-oauth-2-0-hack-exposes-1-billion-mobile-apps-to-account-hijacking-121889&#34;&gt;&lt;a href=&#34;https://threatpost.com/oauth-2-0-hack-exposes-1-billion-mobile-apps-to-account-hijacking/121889/&#34;&gt; OAuth 2.0 Hack Exposes 1 Billion Mobile Apps to Account Hijacking &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Three Chinese University of Hong Kong researchers presented at Black Hat EU last week a paper called &amp;ldquo;Signing into One Billion Mobile LApp Accounts Effortlessly with OAuth 2.0.&amp;rdquo; The paper describes an attack that takes advantage of poor OAuth 2.0 implementations and puts more than one billion apps in jeopardy. The researchers examined 600 top U.S. and Chinese Android mobile apps that use OAuth 2.0 APIs from Facebook, Google and Sina-which operates Weibo in China-and support SSO for third-party apps. The researchers found that 41.2 percent of the apps they tested were vulnerable to their attack, including popular dating, travel, shopping, hotel booking, finance, chat, music and news apps. The researchers said the apps they tested had been downloaded more than 2.4 billion times in aggregate, meaning that more than one billion are vulnerable. &amp;ldquo;After signing into the victim&amp;rsquo;s vulnerable mobile app account using our exploit, the attacker will have, in many cases, full access to the victim&amp;rsquo;s sensitive and private information which is hosted by the backend server(s) of the vulnerable mobile app,&amp;rdquo; wrote researchers Ronghai Yang, Wing Cheong Lau, and Tianyu Liu. There&amp;rsquo;s a hitch there; the researchers learned that for backwards compatibility, Facebook identifies early adopters of a mobile app using the public user ID if a user has signed into the app via OAuth before May, 2014, they&amp;rsquo;re still exposed to the attack. Further, the researchers recommend identity providers issue private identifiers rather than relying on global identifiers, and identity providers should also ramp up security testing of apps to include SSO via protocols such as OAuth 2.0 and OpenID Connect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-regex-that-only-matches-itself-http-codegolf-stackexchange-com-questions-28821-regex-that-only-matches-itself-31863-31863&#34;&gt;&lt;a href=&#34;http://codegolf.stackexchange.com/questions/28821/regex-that-only-matches-itself/31863#31863&#34;&gt; A Regex that only matches itself. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In the first time 2 should match the empty string, and the second time 2. Q2. $E/z matches 15 characters from the end. So the pattern just before the second pattern must match the first 4 or 3 characters in the first pattern, so 2.2|2)2) must match &amp;hellip;2) or &amp;hellip;2. There cannot be a trailing newline because the last character should be ). And the matched text doesn&amp;rsquo;t contain another ) before the rightmost one, so all other characters must be in the 2. The first line makes the whole expression matches exactly 188 characters since everything has a fixed length. The two times of group 1 matches 45*2 characters plus 29 times 2. If quantifier is not allowed, it is impossible because nothing which can only match one string, can match a string longer than itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;why-is-machine-learning-hard-http-ai-stanford-edu-zayd-why-is-machine-learning-hard-html&#34;&gt;&lt;a href=&#34;http://ai.stanford.edu/~zayd/why-is-machine-learning-hard.html&#34;&gt; Why is machine learning &amp;lsquo;hard&amp;rsquo;? &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;There is no doubt the science of advancing machine learning algorithms through research is difficult. Machine learning remains a hard problem when implementing existing algorithms and models to work well for your new application. The difficulty is that machine learning is a fundamentally hard debugging problem. Debugging for machine learning happens in two cases: 1) your algorithm doesn&amp;rsquo;t work or 2) your algorithm doesn&amp;rsquo;t work well enough. Luckily for machine learning algorithms you also have more signals to figure out where things went wrong. The second compounding factor that complicates machine learning debugging is long debugging cycles. Machine learning developers will run multiple experiments because the bottleneck is often the training of the algorithm.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;help-rust-make-the-most-informed-decisions-on-hkt-by-getting-involved-with-the-discussion-as-it-happens-use-cases-for-hkt-requested-https-internals-rust-lang-org-t-blog-post-series-alternative-type-constructors-and-hkt-4300&#34;&gt;&lt;a href=&#34;https://internals.rust-lang.org/t/blog-post-series-alternative-type-constructors-and-hkt/4300&#34;&gt; Help Rust make the most informed decisions on HKT by getting involved with the discussion as it happens. Use cases for HKT requested! &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Somewhat recently I wanted to have an Iterator impl which forced the returned Item type to be dropped before the next one could be obtained. Yes, this is usually so that the iterator can &amp;ldquo;Generate&amp;rdquo; data as it goes, using some internal storage. I don&amp;rsquo;t think you could do it with the current Iterator trait even if we had ATC. And certainly not backward compatibly. It has some kind of subtle effects on people who want to write generic code over iterators. In particular, they can no longer assume that the data they produce will outlive the iterator. Now, one of the key things that the current iterator design supports is the ability to have one iterator trait supplying &amp;amp;T, &amp;amp;mut T, or T, as you need it, iter mut(), and into iter(. In that case, the above iterator could work, so in a sense this iterator trait is strictly more expressive.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-we-knew-it-was-time-to-leave-the-cloud-https-about-gitlab-com-2016-11-10-why-choose-bare-metal&#34;&gt;&lt;a href=&#34;https://about.gitlab.com/2016/11/10/why-choose-bare-metal/?&#34;&gt; How We Knew It Was Time to Leave the Cloud &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;What we found is that the cloud was not meant to provide the level of IOPS performance we needed to run an agressive system like CephFS. At a small scale, the cloud is cheaper and sufficient for many projects. It&amp;rsquo;s often sold as, &amp;ldquo;If you need to scale and add more machines, you can spawn them because the cloud is &amp;lsquo;infinite&amp;rsquo;&amp;rdquo;. The nature of the cloud is time sharing so you still will not get the best performance. From a cost perspective, it is more economical and reliable because of how the culture of the cloud works and the level of performance we need. How we used our dashboard to understand CephFS in the cloud. Recap: What We Learned CephFS gives us more scalability and ostensibly performance but did not work well in the cloud on shared resources, despite tweaking and tuning it to try to make it work. There is a threshold of performance on the cloud and if you need more, you will have to pay a lot more, be punished with latencies, or leave the cloud.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;devfreebooks-https-devfreebooks-github-io&#34;&gt;&lt;a href=&#34;https://devfreebooks.github.io/&#34;&gt; DevFreeBooks &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;announcing-rust-1-13-https-blog-rust-lang-org-2016-11-10-rust-1-13-html&#34;&gt;&lt;a href=&#34;https://blog.rust-lang.org/2016/11/10/Rust-1.13.html&#34;&gt; Announcing Rust 1.13 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The Rust team is happy to announce the latest version of Rust, 1.13.0. Rust is a systems programming language focused on safety, speed, and concurrency. As always, you can install Rust 1.13.0 from the appropriate page on our website, and check out the detailed release notes for 1.13.0 on GitHub. We enjoyed three Rust conferences, RustConf, RustFest, and Rust Belt Rust, in short succession. Rust has gained a new operator, ?, that makes error handling more pleasant by reducing the visual noise involved. This sort of evolution is one of the great advantages of a powerful macro system: speculative extensions to the language syntax can be prototyped and iterated on without modifying the language itself, and in return, macros that turn out to be especially useful can indicate missing language features. This is a good example of the kinds of incremental, quality-of-life improvements Rust will continue to receive, polishing off the rough corners of our already-powerful base language.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;i-ve-had-a-lot-of-problems-with-imposter-syndrome-throughout-my-career-i-finally-wrote-about-http-www-corporateprogrammer-com-blog-the-imposter-within&#34;&gt;&lt;a href=&#34;http://www.corporateprogrammer.com/blog/the-imposter-within/&#34;&gt; I&amp;rsquo;ve had a lot of problems with imposter syndrome throughout my career. I finally wrote about. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;There is still so much I don&amp;rsquo;t know, so much that I am uncertain of. Remember past successes and know that you had a role contributing to it. The beauty of our industry is that there is still so much we don&amp;rsquo;t really know. No one knows everything no matter how fanatic people can be in certain areas. We don&amp;rsquo;t know the troubles they face, what makes them really tick, what fears and weaknesses they battle out each day and what circumstantial history they have. Let&amp;rsquo;s give them a shout out based on my question &amp;ldquo;Anyone suffering from imposter syndrome lately? I&amp;rsquo;m writing a post. If you have any advice you wish to share let me know.&amp;rdquo; 75: 255-271.DOI: 10.5860/crl12-423.Techniques to deal with self-doubtTechniques to deal with uncertaintyCoping with Unknown Outcomes Corporate Programmer, Clarice Bouwer5 Ways to Let Go and Embrace an Uncertain Future Tiny Buddah, Lori Deschene7 Ways to Deal with Uncertainty So You Can Be Happier and Less Anxious Tiny Buddah, Lori DescheneComment on 5 Ways to Let Go and Embrace an Uncertain Future Disqus user drb74Cited &amp;ldquo;We are water. We evaporate, we freeze, we fall, we cool, we crash in waves, we ebb and flow, we soothe, swim and foam. A part of us looks the same to a mind that wants to condense and categorize, but in the end, we are constantly recreated anew.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;atom-1-12-released-http-blog-atom-io-2016-11-09-atom-1-12-html&#34;&gt;&lt;a href=&#34;http://blog.atom.io/2016/11/09/atom-1-12.html&#34;&gt; Atom 1.12 released &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Atom 1.12 has shipped today with another helping of fixes and improvements. The new APIs turned out to be less important than we originally thought but we&amp;rsquo;re nonetheless happy to report Atom users in all locales now get typical keyboard behavior in Atom&amp;rsquo;s default installation. The scope specificity rules for keybindings were understandably confusing lots of Atom users. A new version of the Octicons is now bundled in Atom with improvements to line-weight and sizing normalization. Keystroke Resolver API. To help address the long tail of unusual international keyboard behaviors as interpreted by Chrome, particularly on Linux, Atom 1.13 includes a custom keystroke resolver API allowing users to assign Chrome keyboard events to Atom-style keystrokes. Get all these improvements today by joining the Atom Beta Channel! Join Us! Don&amp;rsquo;t see what you were hoping for here? Join the Atom team at GitHub.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;python-for-javascript-developers-http-blog-underdog-io-post-152949056092-python-for-javascript-developers&#34;&gt;&lt;a href=&#34;http://blog.underdog.io/post/152949056092/python-for-javascript-developers&#34;&gt; Python for JavaScript Developers &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;To serve as a quick guide for JavaScript developers who want to get up to speed quickly with Python, but without having to learn what declaring a variable means or what a function is. Unlike JavaScript, variables in Python are always block scoped. Python is a bit more strict than JavaScript when it comes to syntax. Lists in Python are similar to arrays in JavaScript. Strings in Python are a lot like strings in JavaScript. A module in Python is simply a file that contains some Python code. Python has support for object oriented programming with classes and classical inheritance, unlike JavaScript which has prototypes with prototypal inheritance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-xy-problem-is-asking-about-your-attempted-solution-rather-than-your-actual-problem-http-xyproblem-info&#34;&gt;&lt;a href=&#34;http://xyproblem.info/&#34;&gt; The XY problem is asking about your attempted solution rather than your actual problem. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The XY problem is asking about your attempted solution rather than your actual problem. User wants to do X. User doesn&amp;rsquo;t know how to do X, but thinks they can fumble their way to a solution if they can just manage to do Y. User doesn&amp;rsquo;t know how to do Y either. User asks for help with Y. Others try to help user with Y, but are confused because Y seems like a strange problem to want to solve. After much interaction and wasted time, it finally becomes clear that the user really wants help with X, and that Y wasn&amp;rsquo;t even a suitable solution for X. The problem occurs when people get stuck on what they believe is the solution and are unable step back and explain the issue in full. N00b doesn&amp;rsquo;t actually want the last 3 chracters in a filename, he wants the file extensions, so why ask for the last 3 characters? &lt;n00b&gt; How can I echo the last three characters in a filename?&lt;feline&gt; If they&amp;rsquo;re in a variable: echo $ &lt;feline&gt; Why 3 characters? What do you REALLY want?&lt;feline&gt; Do you want the extension?&lt;n00b&gt; Yes.&lt;feline&gt; Then ASK FOR WHAT YOU WANT!&lt;feline&gt; There&amp;rsquo;s no guarantee that every filename will have a three-letter extension,&lt;feline&gt; so blindly grabbing three characters does not solve the problem. Can iptables do this work?Obama: Well, don&amp;rsquo;t use OS detection or version scanningAngela: I want to prevent others from knowing the type of my OS..&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;zeroing-out-my-memory-does-cause-them-to-page-in-faster-after-all-https-blogs-msdn-microsoft-com-oldnewthing-20161109-00-p-94675&#34;&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/oldnewthing/20161109-00/?p=94675&#34;&gt; Zeroing out my memory does cause them to page in faster after all &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Not too long ago, I answered the question &amp;ldquo;If I zero out my memory pages, does that make them page in faster?&amp;rdquo; with &amp;ldquo;No.&amp;rdquo;. Turns out that I was working from outdated information. My former colleague Adrian Oney confirms the information in the white paper shared by commenter John Doe, namely that starting in Windows Vista, the memory manager does check whether a page that is about to paged out consists entirely of zeroes. Then the memory manager turns the page into a demand-zero page rather than a page stored in the pagefile. Adrian said that he wrote the original prototype which confirmed that the extra check was worth it. &amp;ldquo;Some of this was due to apps dirtying their zero-init pages with inits to zero. Some of it was due to user mode zeroing pages for security reasons. But it was common enough to make it worthwhile.&amp;rdquo; I suspect that the increasing use of virtualization may contribute to this virtuous cycle as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;fixing-cpu-frequency-scaling-issues-in-android-for-dropout-free-audio-once-and-for-all-http-superpowered-com-cpu-frequency-scaling-android&#34;&gt;&lt;a href=&#34;http://superpowered.com/cpu-frequency-scaling-android&#34;&gt; Fixing CPU Frequency Scaling Issues in Android for Dropout-free Audio - Once and for All &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This feature is directly proportional to the CPU load. If computing demand is high, the CPU runs at maximum frequency. If the CPU runs at a low frequency, the user application may not be able to produce the new buffer within time and then users experience &amp;ldquo;Audio dropouts&amp;rdquo;. This is a excruciating problem for developers of Android apps with pro audio requirements, where CPU scaling is quite aggressive. It&amp;rsquo;s highly audible when the audio application goes into the background and Android throttles the CPU back even more, thinking that the application doesn&amp;rsquo;t need the same amount of CPU for audio, when it was in the foreground. In case you were wondering, iOS also faces this problem too, but thanks to it&amp;rsquo;s better scheduling than Android, audio dropouts are only audible when the audio app computes the next audio chunk in more than 50% of the time represented by the buffer. This class implements a &amp;ldquo;True&amp;rdquo; sustained performance mode, where the CPU runs near the maximum frequency on all CPU cores. Every example project has been updated to use SuperpoweredCPU&amp;rsquo;s sustained performance mode, which provides a for CPU frequency scalcing for every Android device on every Android version.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2016 week 44 in programming</title>
      <link>http://iszlai.github.io/post/2016_week_44_in_programming/</link>
      <pubDate>Sat, 05 Nov 2016 14:21:37 +0100</pubDate>
      
      <guid>http://iszlai.github.io/post/2016_week_44_in_programming/</guid>
      <description>

&lt;h2 id=&#34;h-264-is-magic-https-sidbala-com-h-264-is-magic&#34;&gt;&lt;a href=&#34;https://sidbala.com/h-264-is-magic/&#34;&gt; H.264 is Magic &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Now we&amp;rsquo;re getting to the juicy bits! Ha puns! If you took an information theory class, you might remember information entropy. Information entropy is the number of bits required to represent some information. The fine grill on that MacBook pro has a high information content in the higher frequency components of that image. Because now, you can take that frequency domain image and then mask out the edges - discard information which will contain the information with high frequency components. The numbers represent the information entropy of that image as a fraction of the original. So there must be some way to discard color information to shed even more weight. Our frames now tiny - since we discarded most of the detail information and half of the color information.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;pornhub-bypasses-ad-blockers-with-websockets-http-blog-bugreplay-com-post-152579164219-pornhubdodgesadblockersusingwebsockets-utm-source-reddit-programming-utm-medium-post&#34;&gt;&lt;a href=&#34;http://blog.bugreplay.com/post/152579164219/pornhubdodgesadblockersusingwebsockets?utm_source=reddit-programming&amp;amp;utm_medium=post&#34;&gt; Pornhub Bypasses Ad Blockers With WebSockets &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;If WebSocket data was not visible to Chrome extensions via the webRequest API, they could not be blocked without some heavy duty hacks. Then in August 2016, an employee of the company that owns Pornhub.com started arguing against adding the WebSocket blocking capabilities to the Chrome API. Pornhub is the 63rd most visited site on the Internet according to Alexa. Watching the BugReplay browser recording, you can see a number of network requests triggered that are blocked by AdBlock: They are marked Failed in the network traffic, and if you click one to inspect the detail pane you can see the failed reason is net::ERR BLOCKED BY CLIENT. That is the error reported by Chrome when an asset is blocked from loading. The name of the domain where the WebSocket connects is &amp;ldquo;Ws://ws.adspayformy.site.&amp;rdquo; A decent joke aimed at ad blockers :). When the WebSocket loads, the browser sends a frame with a JSON encoded payload for each of the spots it has available for ads. Ad Blockers primarily work using the webRequest API, so constructing the ad by transmitting the data over the WebSocket as base64 is a pretty clever way of dodging the blocker. A contributor wrote a patch adding the ability to block WebSockets using the webRequest api. For AdBlock Plus, &amp;ldquo;The wrapper performs a dummy web request before WebSocket messages are sent/received. The extension recognizes these dummy web requests as representing a WebSocket message. It intercepts and blocks them if the corresponding WebSocket message should be blocked. The WebSocket wrapper then allows / blocks the WebSocket message based on whether the dummy web request was blocked or not.&amp;rdquo; via.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;why-i-became-a-software-engineer-https-dev-to-edemkumodzi-why-i-became-a-software-engineer&#34;&gt;&lt;a href=&#34;https://dev.to/edemkumodzi/why-i-became-a-software-engineer&#34;&gt; Why I became a software engineer &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I hear of stories of many software engineers who always knew they were going to work with computers because they started tinkering with them when they were kids. All these are very common for software engineers in the US &amp;amp; Europe but for many of us in Africa? We didn&amp;rsquo;t see a computer until we were halfway through high school. That&amp;rsquo;s how I started learning how to code seriously. Now how do I make students register online for their courses? I can&amp;rsquo;t build another windows application and expect them to download it. That&amp;rsquo;s what led to learning about web development using ASP.net. I didn&amp;rsquo;t become a software engineer because I enjoyed coding or grew up around computers or any of that. I became a software engineer because the problems I cared about solving required me to learn how to code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;utf8-everywhere-now-please-http-utf8everywhere-org&#34;&gt;&lt;a href=&#34;http://utf8everywhere.org/&#34;&gt; UTF8. Everywhere. Now, please. &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The above code point will be encoded as four code units &amp;lsquo;f0 b2 90 bf&amp;rsquo; in UTF-8, two code units &amp;lsquo;d889 dc3f&amp;rsquo; in UTF-16 and as a single code unit &amp;lsquo;0003243f&amp;rsquo; in UTF-32. For some abstract characters, there exist representations using multiple code points, in addition to the single coded character form. The abstract character  can be coded by the single code point U+01F5 latin small letter g with acute, or by the sequence &lt;U+0067 latin small letter g, U+0301 combining acute accent&gt;. A programmer might count characters as code units, code points, or grapheme clusters, according to the level of the programmer&amp;rsquo;s Unicode expertise. Working with a variable length encoding, where ASCII-inherited code points are shorter than other code points may seem like a difficult task, because encoded character boundaries within the string are not immediately known. Even in the Unicode formalism some code points correspond to coded character and some to non-characters. Counting coded characters or code points is important.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;touch-id-support-for-sudo-in-macos-terminal-https-github-com-mattrajca-sudo-touchid&#34;&gt;&lt;a href=&#34;https://github.com/mattrajca/sudo-touchid&#34;&gt; Touch ID support for &lt;code&gt;sudo&lt;/code&gt; in MacOS Terminal &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Sudo-touchid is a fork of sudo with Touch ID support on macOS. Once compiled, it will allow you to authenticate sudo commands with Touch ID in the Terminal on supported Macs. Sudo must be owned by uid 0 and have the setuid bit set. Sudo chown root:wheel sudo &amp;amp;&amp;amp; sudo chmod 4755 sudo. Sudo -s. If you don&amp;rsquo;t have a Mac with a biometric sensor, sudo-touchid will fall back to the regular password prompt. Replacing the system&amp;rsquo;s sudo program is quite risky and requires disabling System Integrity Protection. Sudo chown root:wheel /usr/local/bin/sudo &amp;amp;&amp;amp; sudo chmod 4755 /usr/local/bin/sudo. Now you should be able to enter sudo in any Terminal window and authenticate with Touch ID!.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;async-await-support-landed-in-firefox-nightly-https-blog-nightly-mozilla-org-2016-11-01-async-await-support-in-firefox&#34;&gt;&lt;a href=&#34;https://blog.nightly.mozilla.org/2016/11/01/async-await-support-in-firefox/&#34;&gt; async/await support landed in Firefox Nightly &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Support for async/await has been added in the Nightly build from the 31st of October. Time to start removing those JavaScript transpilers from your experimental projects, and testing native browser support 😉. Here&amp;rsquo;s a demo. If your browser supports async/await natively, you will see &amp;ldquo;YES&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;visual-sudio-code-1-7-rolled-back-to-1-6-https-code-visualstudio-com-updates-v1-6-17-rollback&#34;&gt;&lt;a href=&#34;https://code.visualstudio.com/updates/v1_6#_17-rollback&#34;&gt; Visual Sudio Code 1.7 rolled back to 1.6 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Would you like your source code formatted each time you save? VS Code now supports &amp;ldquo;Format On Save&amp;rdquo; which will automatically pick up relevant installed formatter extensions and format the whole document on each save. Since we made VS Code available, we&amp;rsquo;ve had the debt item that some languages were implemented inside VS Code directly and they were not implemented as an extension. As you can see from the recommendations setting above, we recommend that anybody working on the VS Code codebase use the TSLint and ESLint extensions. VS Code prompts a user to install the recommended extensions when a workspace is opened for the first time. Another use case is to create a set of extensions for a particular scenario like PHP development to help a PHP developer get started with VS Code quickly. The Yeoman generator for VS Code extensions has been updated to use TypeScript version 2.0.x. If you start a new VS Code extension, simply install yeoman and the extension generator using npm install -g yo generator-code and run it using yo code. An extension would be able to configure a linter from a warning via a code action.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-random-walk-through-ada-2014-i-find-myself-wondering-why-i-should-write-in-c-any-more-http-cowlark-com-2014-04-27-ada-index-html&#34;&gt;&lt;a href=&#34;http://cowlark.com/2014-04-27-ada/index.html&#34;&gt; A Random Walk Through Ada (2014) – &amp;ldquo;I find myself wondering why I should write in C++ any more&amp;rdquo; &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Package AnimalsPkg is type Animal is tagged null record; procedure Vocalise(creature: Animal); type Dog is new Animal with null record; procedure Vocalise(creature: Dog); end; package body AnimalsPkg is procedure Vocalise(creature: Animal) is begin Put Line(&amp;rdquo; &amp;ldquo;); end; procedure Vocalise(creature: Dog) is begin Put Line(&amp;ldquo;Woof&amp;rdquo;); end; end;. Declare package AnimalsPkg is type Animal is abstract tagged null record; procedure Vocalise(creature: Animal) is abstract; type Dog is new Animal with null record; procedure Vocalise(creature: Dog); type Cat is new Animal with null record; procedure Vocalise(creature: Cat); end; package body AnimalsPkg is procedure Vocalise(creature: Dog) is begin Put Line(&amp;ldquo;Woof&amp;rdquo;); end; procedure Vocalise(creature: Cat) is begin Put Line(&amp;ldquo;Meow&amp;rdquo;); end; end; use AnimalsPkg; procedure Kick(creature: Animal&amp;rsquo;Class) is begin creature. Package DeadlySeriousBusinessPackage is type Object is tagged private; type ObjectRef is access Object&amp;rsquo;class; function Create return ObjectRef; private type Object is tagged null record; end; package body DeadlySeriousBusinessPackage is function Create return ObjectRef is this: ObjectRef := new Object; begin return this; end; end;. Declare task Fifo is entry Push(value: in integer); entry Pop(value: out integer); end; task body Fifo is i: integer; begin loop accept Push(value: in integer) do i := value; end; accept Pop(value: out integer) do value := i; end; end loop; end; i: integer; begin Fifo.Push(7); Fifo.Pop(i); end;. Declare task Fifo is entry Push(value: in integer); entry Pop(value: out integer); end; task body Fifo is i: integer; begin loop select accept Push(value: in integer) do i := value; end; or accept Pop(value: out integer) do value := i; end; or terminate; end select; end loop; end; i: integer; begin Fifo.Push(7); Fifo.Pop(i); end;. Declare protected Fifo is procedure Push(value: in integer); procedure Pop(value: out integer); private i: integer; end; protected body Fifo is procedure Push(value: in integer) is begin i := value; end; procedure Pop(value: out integer) is begin value := i; end; end; i: integer; begin Fifo.Push(7); Fifo.Pop(i); end;. Declare type Thing is record value: integer; end record; type ThingRef is access Thing; function NewThing return ThingRef is begin return new Thing; end; procedure FreeThing is new Ada.Unchecked Deallocation( Thing, ThingRef); p: ThingRef; begin p := NewThing; FreeThing(p); end;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;webassembly-browser-preview-http-v8project-blogspot-com-2016-10-webassembly-browser-preview-html&#34;&gt;&lt;a href=&#34;http://v8project.blogspot.com/2016/10/webassembly-browser-preview.html&#34;&gt; WebAssembly Browser Preview &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Today we&amp;rsquo;re happy to announce, in tandem with Firefox and Edge, a WebAssembly Browser Preview. WebAssembly or wasm is a new runtime and compilation target for the web, designed by collaborators from Google, Mozilla, Microsoft, Apple, and the W3C WebAssembly Community Group. The binary format and JS API documents outline the binary encoding of WebAssembly and the mechanism to instantiate WebAssembly modules in the browser, respectively. V8 continues to optimize the implementation of WebAssembly in the TurboFan compiler. Js to WebAssembly under the hood so that existing asm. Js sites can reap some of the benefits of WebAssembly ahead-of-time compilation. Barring major design changes arising from community feedback, the WebAssembly Community Group plans to produce an official specification in Q1 2017, at which point browsers will be encouraged to ship WebAssembly on-by-default.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-to-contribute-to-an-open-source-project-on-github-a-step-by-step-guide-http-blog-davidecoppola-com-2016-11-howto-contribute-to-open-source-project-on-github&#34;&gt;&lt;a href=&#34;http://blog.davidecoppola.com/2016/11/howto-contribute-to-open-source-project-on-github/&#34;&gt; How to contribute to an open source project on GitHub - a step-by-step guide &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A step by step guide that will show you how to contribute to an open source project on GitHub, one of the most popular and used git repository hosting services. The way people contribute to an open source project on GitHub is using pull requests. If you decided to contribute to an open source project on GitHub it&amp;rsquo;s probably because you&amp;rsquo;ve been using that project and you found a bug or had an idea for a new feature. When deciding to contribute to an open source project make sure to check it&amp;rsquo;s still active otherwise your work might remain a pull request forever. Once you are on the main page of the project you want to contribute to look for notes and files that explain how the mantainers expect you contribute to the project. To fork a project on GitHub simply click the Fork button on the top-right corner of a project page. I hope you enjoyed this tutorial explaining how to contribute to an open source project on GitHub.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;deepmind-and-blizzard-to-release-starcraft-ii-as-an-ai-research-environment-deepmind-https-deepmind-com-blog-deepmind-and-blizzard-release-starcraft-ii-ai-research-environment&#34;&gt;&lt;a href=&#34;https://deepmind.com/blog/deepmind-and-blizzard-release-starcraft-ii-ai-research-environment/&#34;&gt; DeepMind and Blizzard to release StarCraft II as an AI research environment | DeepMind &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;minoca-os-a-new-open-source-operating-system-https-blog-minocacorp-com-minoca-os-a-new-open-source-operating-system-4bb7998df3a7&#34;&gt;&lt;a href=&#34;https://blog.minocacorp.com/minoca-os-a-new-open-source-operating-system-4bb7998df3a7&#34;&gt; Minoca OS: A new open source operating system &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Today we&amp;rsquo;re thrilled to announce that Minoca OS has gone open source. We are releasing the entirety of the Minoca OS source code under the GNU GPLv3. We&amp;rsquo;re excited to build a community of users and developers around this new operating system, and we need help. What is Minoca OS?Minoca OS is a general purpose operating system written completely from the ground up. Under the hood, Minoca contains a powerful driver model between device drivers and the kernel. We took a look at the operating systems out there, and realized it had been over 25 years since the major operating systems had been written. We wanted to see if with 25 years of hindsight and a clean slate we could create something interesting and unique in the operating systems space.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;vigil-the-eternal-morally-vigilant-programming-language-https-github-com-munificent-vigil&#34;&gt;&lt;a href=&#34;https://github.com/munificent/vigil&#34;&gt; Vigil, the eternal morally vigilant programming language &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Vigil is a very safe programming language, and an entry in the January 2013 PLT Games competition. Many programming languages claim to take testing, contracts and safety seriously, but only Vigil is truly vigilant about not allowing code that fails to pass programmatic specifications. Vigil is very similar to Python with the minor proviso that you must provide a main() function which will be automatically called for you. If a function fails to uphold what it has sworn to do, it is wrong and must be punished. When a Vigil program is executed, Vigil itself will monitor all oaths that have been made. If an oath is broken, the offending function will be duly punished. Run Vigil again and it will take care of that for you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;learn-latex-in-minutes-https-github-com-voluong-master-latex-in-minutes&#34;&gt;&lt;a href=&#34;https://github.com/VoLuong/Master-Latex-in-minutes&#34;&gt; Learn LATEX in Minutes &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;LaTeX, which is pronounced «Lah-tech» or «Lay-tech», is a document preparation system for high-quality typesetting. LaTeX is just a text document, readily converted to PDF. LaTeX separates content and style. LaTeX offers a lot of functions by default, but in some situations it can come in handy to use so called packages. To add an image to the LaTeX file , you need to use figure environment and the graphicx package. Insert code into LaTeX  First method ✅. One aspect of text compiling that is of the utmost importance to programmers and developers is how to professionally insert codes into the document. LaTeX supports syntax for these languages 💬. As you can see, with the wrapper you can easily insert code without worrying about how the syntax is formatted. Multiple files in LaTeX. When we use LaTeX, we may face a problem that a document is too long to be handle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;distrusting-wosign-and-startcom-certificates-https-security-googleblog-com-2016-10-distrusting-wosign-and-startcom-html&#34;&gt;&lt;a href=&#34;https://security.googleblog.com/2016/10/distrusting-wosign-and-startcom.html&#34;&gt; Distrusting WoSign and StartCom Certificates &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;opa-a-live-memory-debugger-for-c-programs-https-www-youtube-com-watch-v-pvkn9xz-xks&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=pvkn9Xz-xks&#34;&gt; OPA, A live memory debugger for C programs &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-vs-code-1-7-overloaded-npmjs-org-https-news-ycombinator-com-item-id-12861180&#34;&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=12861180&#34;&gt; How VS Code 1.7 overloaded npmjs.org &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;We didn&amp;rsquo;t start caching 404s for every package, and don&amp;rsquo;t plan to, because that creates annoying race conditions for fresh publishes, which is why most CDNs don&amp;rsquo;t cache 404s in the first place. There are any number of ways to fix this, and we&amp;rsquo;ll work with Microsoft to find the best one, but fundamentally you just need a more network-efficient way of finding out which type declarations exist. Might I suggest having a bloom filter containing all the existing type declaration and only querying the registry if the bloom filter reports the type declaration as a positive. Since the filter can be really small it will probably scale a lot better than a complete list of all type-declarations, and a new filter could be downloaded by the clients every now and then. Depends on the bloom filter, but for the fixed size, fixed hash functions, and other implementations in the same general vein, it would just be XOR of both of the bloom filters. Slightly different for counting filters, where something along the lines of subtraction would get you what you need. Can you speak to why it is so expensive on the NPM side to serve a 404? Would a bloom filter like another commenter mentioned be helpful?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-price-of-gpl-http-bitsplitting-org-2016-10-30-the-price-of-gpl&#34;&gt;&lt;a href=&#34;http://bitsplitting.org/2016/10/30/the-price-of-gpl/&#34;&gt; The Price Of GPL &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Some will take issue with the use of strong words like &amp;ldquo;Stolen code,&amp;rdquo; and &amp;ldquo;Theft,&amp;rdquo; with respect to a GPL violation. Many developers seem to prefer remaining willfully oblivious to the consequences of using GPL code. &amp;ldquo;It&amp;rsquo;s OK for us to use GPL code anywhere, as long as we contribute back changes.&amp;ldquo;It&amp;rsquo;s only a small amount of GPL code, so the license doesn&amp;rsquo;t apply. The price of GPL is fairly obvious and easy to understand, even if there is some bickering about what constitutes &amp;ldquo;linked code. &amp;rdquo; You don&amp;rsquo;t have to be a legal expert to get the gist of it: if you want to link your software with GPL code, you must also make your software&amp;rsquo;s source code available. So what am I supposed to do? Not use any GPL source code at all in any of my proprietary products? Exactly. Because the price of GPL is too much for me, and I don&amp;rsquo;t steal source code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;happy-dennis-ritchie-day-https-www-oreilly-com-ideas-dennis-ritchie-day&#34;&gt;&lt;a href=&#34;https://www.oreilly.com/ideas/dennis-ritchie-day&#34;&gt; Happy Dennis Ritchie Day! &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;That&amp;rsquo;s just C. Dennis was also half of the team that created Unix, which in some form or other runs all the machines at Google&amp;rsquo;s data centers and probably at most other server farms. Most web servers run above Unix kernels; most non-Microsoft web browsers run above Unix kernels in some form, even in many phones. In the late 1970s, Dennis joined with Steve Johnson to port Unix to the Interdata. Unix, in the unusual position of being written in a &amp;ldquo;High-level language,&amp;rdquo; could be made to run on a machine other than the PDP-11. The hardware didn&amp;rsquo;t matter any more, since it all ran Unix. Cheap hardware meant cheap Unix installations; we all won. If Unix hadn&amp;rsquo;t been ported to the Interdata, the Internet, if it even existed, would be a very different place today.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;from-stackoverflow-import-quick-sort-https-github-com-drathier-stack-overflow-import&#34;&gt;&lt;a href=&#34;https://github.com/drathier/stack-overflow-import&#34;&gt; from stackoverflow import quick_sort &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Do you ever feel like all you&amp;rsquo;re doing is copy/pasting from Stack Overflow? From stackoverflow import quick sort will go through the search results of [python] quick sort looking for the largest code block that doesn&amp;rsquo;t. Syntax error in the highest voted answer from the highest voted question. Code, it checks the next highest voted answer for code blocks. &amp;gt;&amp;gt;&amp;gt; from stackoverflow import quick sort, split into chunks &amp;gt;&amp;gt;&amp;gt; print(quick sort. Chunk(&amp;ldquo;Very good chunk func&amp;rdquo; ) &amp;gt;&amp;gt;&amp;gt; print(&amp;ldquo;Gotta take a break&amp;rdquo;) gotta take a break &amp;gt;&amp;gt;&amp;gt; from time import time &amp;gt;&amp;gt;&amp;gt; t1 = time() &amp;gt;&amp;gt;&amp;gt; from stackoverflow import time delay &amp;gt;&amp;gt;&amp;gt; print(&amp;ldquo;That&amp;rsquo;s enough, let&amp;rsquo;s continue coding&amp;rdquo;, time() - t1) that&amp;rsquo;s enough, let&amp;rsquo;s continue coding 5.7283220291137695 &amp;gt;&amp;gt;&amp;gt; print(&amp;ldquo;I wonder who made split into chunks&amp;rdquo;, split into chunks. This module is PSF-licensed as I blatantly copied multiple lines of code from the Python standard library.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;h-265-is-weaponized-science-https-sonnati-wordpress-com-2014-06-20-h265-part-i-technical-overview&#34;&gt;&lt;a href=&#34;https://sonnati.wordpress.com/2014/06/20/h265-part-i-technical-overview/&#34;&gt; H.265 is Weaponized Science &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Each CU can be recursively splitted in Transform Units with the same quad-tree approach used in CTBs. Differently from AVC that used mainly a 4×4 transform and occasionally an 8×8 transform, HEVC has several transform sizes: 32×32, 16×16, 8×8 and 4×4. The adaptive nature of CBT, CU and TU partitions plus the higher accuracy plus the larger transform size are among the most important features of HEVC and the reason of the performance improvement compared to AVC. HEVC implements a sofisticated scan order and coefficient signaling scheme that improves signaling efficiency. HEVC drops also the support for MBAFF or similar techniques to code interlaced video. The merge mode is similar, the main difference is that the candidates list is calculated from neighboring MV and is not added to a delta MV. It is the equivalent of &amp;ldquo;Skip&amp;rdquo; mode in AVC. Similarly to AVC, HEVC specifies motion vectors in &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt;-pel, but uses an 8-tap filter for luma and a 4-tap &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;8&lt;/sub&gt;-pel filter for chroma. CABAC in HEVC is almost identical to CABAC in AVC with minor changes and simplifications to allow a parallel decoding. Since HEVC decoding is much more complex than AVC, several technique to allow a parallal decoding have been implemented. The adaptive subdivision of picture in prediction areas, the use of advanced intra-prediction, inter-prediction and bigger transform sizes can absolutely guarantee, in the long term, a considerably higher efficiency of HEVC compared to AVC. But the complexity of the encoding is really much higher.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-silent-majority-of-experts-http-prog21-dadgum-com-143-html-0&#34;&gt;&lt;a href=&#34;http://prog21.dadgum.com/143.html?0&#34;&gt; The Silent Majority of Experts &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Forth, I wasn&amp;rsquo;t the only person frustrated by the lack of people doing interesting things with the language. Elizabeth Rather, co-founder of Forth, Inc., offered the following explanation: there are people solving real problems with Forth, but they don&amp;rsquo;t hang-out in the newsgroup. There were a number of game developers with public faces in the 1990s, but the key people responsible for the original version of The Need for Speed, released in 1994, remained unknown and behind the scenes. Yes, there are many people who blog and otherwise publicly discuss development methodologies and what they&amp;rsquo;re working on, but there are even more people who don&amp;rsquo;t. Other people are working on commercial products and can&amp;rsquo;t divulge the inner workings of their code. All we&amp;rsquo;re seeing is an intersection of the people working on interesting things and who like to write about it-and that&amp;rsquo;s not the whole story. Your time may better spent getting in there and trying things rather than reading about what other people think.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;scala-2-12-0-is-now-available-http-www-scala-lang-org-news-2-12-0&#34;&gt;&lt;a href=&#34;http://www.scala-lang.org/news/2.12.0&#34;&gt; Scala 2.12.0 is now available &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Scala 2.12.0 is the result of merging over 500 pull requests out of about 600 received PRs. The contributions to 2.12.x over the last 2 years were split as 64/32/4 between the Scala team at Lightbend, the community and EPFL. The new encodings of traits, lambdas and lazy vals were developed in fruitful collaboration with the Dotty team at EPFL. Binary compatibility. Since Scala 2.10, minor releases of Scala are binary compatible with each other. Scala 2.12 standardizes on the &amp;ldquo;GenBCode&amp;rdquo; back end, which emits code more quickly because it directly generates bytecode from Scala compiler trees, while the previous back end used an intermediate representation called &amp;ldquo;ICode&amp;rdquo;. The Scala distribution is built using -opt:l:classpath, which improves the performance of the Scala compiler by roughly 5% compared to a non-optimized build. The Java 8 compatibility module for Scala has received an overhaul for Scala 2.12. Even though interoperability of Java 8 SAMs and Scala functions is now baked into the language, this module provides additional convenience for working with Java 8 SAMs. Java 8 streams support was also added during the development cycle of Scala 2.12. Releases are available for both Scala 2.11 and Scala 2.12.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;why-hardware-development-is-hard-part-1-verilog-is-terrible-https-danluu-com-why-hardware-development-is-hard&#34;&gt;&lt;a href=&#34;https://danluu.com/why-hardware-development-is-hard/&#34;&gt; Why hardware development is hard, part 1: Verilog is terrible &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Why hardware development is hard, part 1: Verilog is weird Why hardware development is hard, part 1: Verilog is weird. How is it possible that a reasonable description of something in Verilog turns into something completely wrong in hardware? You can think of hardware as some state, with pure functions connecting the state elements. To write Verilog that will produce correct hardware, you have to first picture the hardware you want to produce. We hardware folks are so used to the vast majority of legal Verilog constructs producing unsynthesizable garbage that we don&amp;rsquo;t find it the least bit surprising that you not only do you not get compile-time errors, you don&amp;rsquo;t even get run-time errors, from writing naive Verilog code. With hardware, we train up a new generation of people who think that Verilog is as productive as any language could be every few years! I won&amp;rsquo;t even get into how Verilog is so inexpressive that many companies use an ad hoc tool to embed a scripting language in Verilog or generate Verilog from a scripting language. It&amp;rsquo;s not as high level, but it&amp;rsquo;s the only hardware description language with a modern type system that I&amp;rsquo;ve been able to discuss with hardware folks without people objecting that Haskell is a bad idea.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;mercurial-4-0-has-been-released-https-www-mercurial-scm-org-wiki-whatsnew-mercurial-4-0-282016-11-1-29&#34;&gt;&lt;a href=&#34;https://www.mercurial-scm.org/wiki/WhatsNew#Mercurial_4.0_.282016-11-1.29&#34;&gt; Mercurial 4.0 has been released &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Rollback: add a config knob for entirely disabling the command subrepo: use unset instead of env -u to fix test on BSDs.templates: add support for filelog webcommand in json style templates: add support for filerevision webcommand in json style templates: add support for search webcommand in json style templates: add support for summary webcommand in json style update: fix bare -clean to work on new branch. Notify: do not load style file if template is specified record: deprecate the extension registrar: add templatefilter to mark a function as template filter registrar: add templatefunc to mark a function as template function registrar: add templatekeyword to mark a function as template keyword registrar: remove useless base classes remove: add progress support remove: fix -force option help description. Batchget: add support for backing up files builddeb: add -distid option to specify Distributor ID changegroup: introduce cg3, which has support for exchanging treemanifests changelog: add a new method to get files modified by a changeset checkunknownfiles: make control flow clearer crecord: edit during hg crecord should preserve cursor position. Match: add option to return line and lineno from readpattern mercurial: pass ui to extensions. Files() in conditions commit: improve -close-branch documentation commit: mark internal-only option commit: no longer allow empty commit with the &amp;lsquo;force&amp;rsquo; argument config: give it an includepaths option for looking for config files files: recurse into subrepos automatically with an explicit path import-checker: add xargs like mode import-checker: don&amp;rsquo;t treat modules as relative one if not found import-checker: exclude mercurial packages installed into the system path import-checker: loop to get list of locally defined modules at first import: cross-reference patch. Allowemptycommit to allow empty commits log: add a status template patch: add &amp;lsquo;extra&amp;rsquo; argument to makememctx patch: add fuzz config flag. Subrepo: add &amp;lsquo;cat&amp;rsquo; support for git subrepos subrepo: add basic support to hgsubrepo for the files command subrepo: add include/exclude support for diffing git subrepos subrepo: add status support for ignored and clean files in git subrepos subrepo: change arguments of abstractsubrepo.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2016 week 43 in programming</title>
      <link>http://iszlai.github.io/post/2016_week_43_in_programming/</link>
      <pubDate>Sun, 30 Oct 2016 22:08:17 +0100</pubDate>
      
      <guid>http://iszlai.github.io/post/2016_week_43_in_programming/</guid>
      <description>

&lt;h2 id=&#34;applying-the-linus-tarvolds-good-taste-coding-requirement-https-medium-com-bartobri-applying-the-linus-tarvolds-good-taste-coding-requirement-99749f37684a-h5uuz43ge&#34;&gt;&lt;a href=&#34;https://medium.com/@bartobri/applying-the-linus-tarvolds-good-taste-coding-requirement-99749f37684a#.h5uuz43ge&#34;&gt; Applying the Linus Tarvolds &amp;ldquo;Good Taste&amp;rdquo; Coding Requirement &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;To the best of my ability to discern, the crux of the &amp;ldquo;Good taste&amp;rdquo; requirement is the elimination of edge cases, which tend to reveal themselves as conditional statements. Below is an algorithm I wrote to initialize the points along the edge of a grid, which is represented as a multidimensional array: grid[rows][cols]. Again, the purpose of this code was to only initialize the values of the points that reside on the edge of the grid - so only the top row, bottom row, left column, and right column. To accomplish this I initially looped over every point in the grid and used conditionals to test for the edges. Complexity - The use 4 conditional statements inside 2 embedded loops seems overly complex. It was only a slight improvement in complexity, but a large improvement in performance, because it only performed 256 loop iterations, one for each point along the edge. For This code initializes four different edge points for each loop iteration.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;it-s-official-java-9-will-support-ahead-of-time-compilation-but-only-64-bit-linux-initially-http-openjdk-java-net-jeps-295&#34;&gt;&lt;a href=&#34;http://openjdk.java.net/jeps/295&#34;&gt; It&amp;rsquo;s official: Java 9 will support ahead-of-time compilation (but only 64-bit Linux initially) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;AOT compilation of any other JDK module, or of user code, is experimental. During AOT compilation a fingerprint for each class is generated and stored in the data section of the shared library. In these cases, AOT compilation needs be done on the entire application and is thus experimental in JDK 9. The system should have installed libelf to allow generation of AOT shared libraries as result of AOT compilation. AOT compilation should be executed on the same system or a system with the same configuration on which AOT code will be used by Java application. For the initial release in JDK 9 the only supported module for AOT compilation will be java. The same Java run-time configuration should be used during AOT compilation and execution.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;android-can-be-rooted-using-recently-discovered-linux-vulnerability-http-arstechnica-com-security-2016-10-android-phones-rooted-by-most-serious-linux-escalation-bug-ever&#34;&gt;&lt;a href=&#34;http://arstechnica.com/security/2016/10/android-phones-rooted-by-most-serious-linux-escalation-bug-ever/&#34;&gt; Android can be rooted using recently discovered Linux vulnerability &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s extremely easy to exploit, making it one of the worst privilege-elevation flaws ever to hit the open-source OS. Independent security researcher David Manouchehri told Ars that this proof-of-concept code that exploits Dirty Cow on Android gets devices close to root. With a few additional lines, Manouchehri&amp;rsquo;s code provides persistent root access on all five of the Android devices he has tested. &amp;ldquo;From what I can tell, in theory it should be able to root every device since Android 1.0. Android 1.0 started on [Linux] kernel [version] 2.6.25, and this exploit has been around since 2.6.22.&amp;ldquo;. Both of the exploits allow end users to root Android phones so they have capabilities such as tethering that are often restricted by individual manufacturers or carriers. Just as Dirty Cow has allowed untrusted users or attackers with only limited access to a Linux server to dramatically elevate their control, the flaw can allow shady app developers to evade Android defenses that cordon off apps from other apps and from core OS functions. The reliability of Dirty Cow exploits and the ubiquity of the underlying flaw makes it an ideal malicious root trigger, especially against newer devices running the most recent versions of Android. Dirty Cow came to light a few days before the release of a separate rooting method for Android devices.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;happiness-is-a-boring-stack-http-www-expatsoftware-com-articles-happiness-is-a-boring-stack-html&#34;&gt;&lt;a href=&#34;http://www.expatsoftware.com/Articles/happiness-is-a-boring-stack.html&#34;&gt; Happiness is a Boring Stack &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s a fun place, and a good way to keep up to date on all the new tech that us developer folk seem to need to know about. Yeah, sure, Node.js with tons of functional stuff mixed in pulling from a NoSQL store and React on the front end. For my own stuff, there&amp;rsquo;s no way I&amp;rsquo;d use any of that crap. This stuff is my proper income stream, and the most important thing is that it works. It means I can, among other things, pick up a full-time development gig to sock away some extra runway, take off and go backpacking around the world, or better still, build yet another rent-paying product without having to spend a significant amount of time keeping the old stuff alive. It seems like on a lot of stacks, keeping the server alive, patched and serving webpages is a part-time job in itself. The less effort you need to spend on maintenance, the more pace you can keep going forward.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;parsing-json-is-a-minefield-http-seriot-ch-parsing-json-php&#34;&gt;&lt;a href=&#34;http://seriot.ch/parsing_json.php&#34;&gt; Parsing JSON is a Minefield 💣 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Range and Precision - What about numbers with a huge amount of digits? According to RFC 7159, &amp;ldquo;A JSON parser MUST accept all texts that conform to the JSON grammar&amp;rdquo;. A JSON parser MUST accept all texts that conform to the JSON grammar. Independently from how parsers should behave, I wanted to observe how they actually behave, so I picked several JSON parsers and set up things so that I could feed them with my test files. The parsers are generally wrapped so that the process returns 0 in case of success, 1 in case of parsing error, yet another status in case of crash, a 5-second delay being considered as a timeout. Parsing should have succeeded but failedparsing should have failed but succeededresult undefined, parsing succeededresult undefined, parsing failedCrashTimeout. A JSON parser transforms a JSON text into another representation. I wrote yet another JSON parser which will parse or reject JSON document according to my understanding of RFC 7159.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-to-get-fired-using-switch-statements-statement-expressions-http-blog-robertelder-org-switch-statements-statement-expressions&#34;&gt;&lt;a href=&#34;http://blog.robertelder.org/switch-statements-statement-expressions/&#34;&gt; How to Get Fired Using Switch Statements &amp;amp; Statement Expressions &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;One extremely unmaintainable and bug-ridden technique for C programming involves using both switch statements and statement expressions together. In this article, we will discuss how you can leverage switch statements and statement expressions to produce C code that is so difficult to understand, you&amp;rsquo;ll need to look at the assembly to figure out what it does. After branching to that label nothing special happens related to the fact that you&amp;rsquo;re inside a switch statement and the code will just keep executing whatever machine instructions come next. The one exception is, of course, the break statement which will jump to the point after the switch statement body. Here is an equivalent version of the switch statement written above using only ifs and gotos. The switch statement effectively just gives us a convenient way to implement the goto statements that would be necessary to either jump to the start of the coroutine, or the point just after the coroutine returns. Regular ole expression &lt;em&gt;/ int i = 0; /&lt;/em&gt; Fancy new statement expression */ int j =;. You might ask &amp;ldquo;Why would you ever want to do such a thing?&amp;rdquo; There are a number of different answers and many of them are related to convenience: One use case is concerned with ensuring that expression statement side-effects are only evaluated once in the case of a function macro that may cause the expression to appear multiple times in the function macro body.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;patent-judge-issues-opinion-declaring-all-software-patents-bad-https-www-techdirt-com-articles-20161005-15280135720-prominent-pro-patent-judge-issues-opinion-declaring-all-software-patents-bad-shtml&#34;&gt;&lt;a href=&#34;https://www.techdirt.com/articles/20161005/15280135720/prominent-pro-patent-judge-issues-opinion-declaring-all-software-patents-bad.shtml&#34;&gt; Patent Judge Issues Opinion Declaring All Software Patents Bad &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This latest ruling, from the very court that upended things nearly two decades ago in declaring software much more broadly patentable than anyone believed, may now be the nail in the coffin on software patents in the US. The headline, of course, is that the patents that Intellectual Ventures used against anti-virus firms Symantec and Trend Micro, were bunk, because they did not cover patent eligible subject matter. The part that has everyone chattering is the concurring opinion by Judge Haldane Mayer, that says it&amp;rsquo;s time to face facts: Alice killed software patents. In Support of Respondents, Alice, 134 S. Ct. 2347, 2014 WL 828047, at *6-7; Mark A. Lemley, Software Patents and the Return of Functional Claiming, 2013 Wis. L. Rev. 905, 935 (&amp;ldquo;Software patents &amp;hellip; have created a large number of problems for the industry, particularly for the most innovative and productive companies&amp;hellip;. [T]he existence of a vibrant open source community suggests that innovation can flourish in software absent patent protection.&amp;rdquo; (footnote omitted ; Wendy Seltzer, Software Patents and/or Software Development, 78 Brook. Mayer goes even further in this discussing four separate problems with the whole concept of software patents, including the fact that the scope of the patents greatly exceeds the importance of what they disclose. The third problem he discusses is the fact that the system is overwhelmed with software patents, &amp;ldquo;Most of which are replete with broad, functional claims&amp;rdquo; which makes it &amp;ldquo;Virtually impossible to innovate in any technological field without being ensnared by the patent thicket.&amp;rdquo; Nicely put. From there, he suggests that the courts should just stop punting on the issue and declare software patents dead: Declaring that software implemented on a generic computer falls outside of section 101 would provide muchneeded clarity and consistency in our approach to patent eligibility. It would end the semantic gymnastics of trying to bootstrap software into the patent system by alleging it offers a &amp;ldquo;Specific method of filtering Internet content,&amp;rdquo;&amp;hellip;. The opinion is a great read overall - and it&amp;rsquo;s the kind of arguments that plenty of folks in and around tech and software patents have been making for years.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-taste-of-haskell-https-hookrace-net-blog-a-taste-of-haskell&#34;&gt;&lt;a href=&#34;https://hookrace.net/blog/a-taste-of-haskell/&#34;&gt; A Taste of Haskell &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The error message tells us that the list is assumed to be a list of booleans because of the final value. If the list has more than one element, we remove the first element of the list and recursively call last&amp;rsquo; on the rest of the list. The length of a list with more than 0 elements is 1 plus the length of the rest of the list. Map&amp;rsquo; f [] = []. The base case is easy: When we get an empty list passed, the result is also an empty list. Finally we recurse with the rest of the list, until we reach the base case for the empty list. While working with lists in Haskell you might wonder what happens if we never reach the base case? We have lazy evaluation in Haskell, which tells us that a data structure is only evaluated when it&amp;rsquo;s actually needed. The second parameter is a list of values of type a, the third parameter is a list of values of type b and finally a list of type c is returned.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-i-became-hackerrank-1-in-two-hours-http-williampross-com-became-hackerrank-1-two-hours&#34;&gt;&lt;a href=&#34;http://williampross.com/became-hackerrank-1-two-hours/&#34;&gt; How I Became HackerRank #1 In Two Hours &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;My ranking on Hacker Rank is #1 for Java programming and it only took me two hours. After earning a top ranking for Java developers globally, Furlong was hired by JPMorgan Chase &amp;amp; Co. in December for its two-year technology training program. Much of the time I spent trying to solve problems on Hacker Rank was battling with standard in, rather than solving problems. Due to these limitations, the programmer is often spending half the time fighting with the Hacker Rank website, rather than learning. First of all, Hacker Rank only &amp;ldquo;Teaches&amp;rdquo; the basic Java language features. A programmer&amp;rsquo;s merit has never relied on rankings, and there is no reason to start now. If a person is claiming to be a top ranked programmer from Hacker Rank you should know this person is likely a fraud.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;freeing-my-tablet-android-hacking-sw-and-hw-https-www-thanassis-space-android-html&#34;&gt;&lt;a href=&#34;https://www.thanassis.space/android.html&#34;&gt; Freeing my tablet (Android hacking, SW and HW) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;1 ttsiod ttsiod 21 Oct 8 23:11 userdata -&amp;gt; /dev/block/mmcblk0p32 Golly gee, Mr Google, that&amp;rsquo;s a lot of partitions. I do believe though that when you do this, the tablet is supposed to be wiped automatically&amp;hellip; since by allowing booting of a custom image, an external entity can pretty much gather every data residing inside the tablet - and completely violate your privacy. Rc drwxr-xr-x 2 ttsiod ttsiod 4096 Oct 23 08:30 proc -rw-r-r- 1 ttsiod ttsiod 3138 Oct 23 08:30 property contexts drwxr-xr-x 3 ttsiod ttsiod 4096 Oct 23 08:30 res drwxr-x&amp;ndash; 2 ttsiod ttsiod 4096 Oct 23 08:30 sbin -rw-r-r- 1 ttsiod ttsiod 746 Oct 23 08:30 seapp contexts -rw-r-r- 1 ttsiod ttsiod 76 Oct 23 08:30 selinux version -rw-r-r- 1 ttsiod ttsiod 177701 Oct 23 08:30 sepolicy -rw-r-r- 1 ttsiod ttsiod 10468 Oct 23 08:30 service contexts drwxr-xr-x 2 ttsiod ttsiod 4096 Oct 23 08:30 sys drwxr-xr-x 2 ttsiod ttsiod 4096 Oct 23 08:30 system -rw-r-r- 1 ttsiod ttsiod 8349 Oct 23 08:30 ueventd. So I went back to that Over-The-Air update&amp;hellip;. host$ ls -l total 803592 drwxr-xr-x 2 ttsiod ttsiod 4096 Oct 21 01:22./ drwxr-xr-x 6 ttsiod ttsiod 4096 Sep 25 23:34./ -rw-rw-r- 1 ttsiod ttsiod 822861864 Aug 7 2015 UL-K01E-WW-12.16.1.12-user. We CAN boot our own boot images on the tablet, but ASUS keeps a note somewhere: &amp;ldquo;This is a bad person, booting his own boot image. We will no longer boot for him normally.&amp;rdquo; We CAN clear our record afterwards and make the tablet &amp;ldquo;Normal&amp;rdquo; again. this took me ages to find and to manage to compile properly - Joshua Brindle provides the source code of sepolicy-inject; a tool that allowed me to tell Android that the SELinux policy I want&amp;hellip;. host$ ls -l drwxr-xr-x 2 ttsiod ttsiod 4096 Oct 22 16:05./ drwxr-xr-x 4 ttsiod ttsiod 4096 Oct 4 2015./ -rw-r-r- 1 ttsiod ttsiod 349 Oct 22 15:42 Makefile -rw-r-r- 1 ttsiod ttsiod 1088 Jul 17 2013 README.txt -rw-r-r- 1 ttsiod ttsiod 5851 Jul 17 2013 sepolicy-inject. God knows what else - the GPS, etc :-(. I have to go back to my original plan - boot from the pristine boot image burned in the tablet, and become root ONLY through modifications to my /system partition.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;what-was-it-like-programming-skyrim-stream-with-former-bethesda-lead-programmer-brett-douville-http-www-gamasutra-com-view-news-284447-what-was-it-like-programming-skyrim&#34;&gt;&lt;a href=&#34;http://www.gamasutra.com/view/news/284447/What_was_it_like_programming_Skyrim&#34;&gt; &amp;ldquo;What was it like programming Skyrim?&amp;rdquo; - Stream with former Bethesda Lead programmer Brett Douville &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s been five years since The Elder Scrolls: Skyrim launched, and since then the way open-world games are made has changed so much. Bethesda Softworks has gone on to release Fallout 4, and companies like Ubisoft and CD Projekt Red have built their own templates for creating vast, open game spaces that rival the size of Bethesda&amp;rsquo;s fifth Elder Scrolls RPG. But despite how far open-world games have come, we at Gamasutra were curious, what was it like working on Skyrim? With the release of Skyrim&amp;rsquo;s special edition that brings the game to PS4 and Xbox One, we decided to invite former Bethesda Softworks lead programmer Brett Douville in for a conversation about programming the game. As seen above, the chat was particularly illuminating, since as Douville explained, the best language a programmer can know isn&amp;rsquo;t any coding language, but as he puts it &amp;ldquo;English&amp;rdquo;-meaning just having the ability to communicate with other team members and translate game design concepts into code and back. It turns out that even while Skyrim proved to be a huge programming challenge, it was also a lesson for Douville and his colleagues to just figure out how to take care of themselves and work together as a team.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;picat-the-programming-language-you-ve-never-heard-about-wins-10k-prize-at-media-lab-summit-http-bcexcelsior-com-computer-programming-language-wins-grand-prize-at-media-lab-summit&#34;&gt;&lt;a href=&#34;http://bcexcelsior.com/computer-programming-language-wins-grand-prize-at-media-lab-summit/&#34;&gt; Picat, the programming language you&amp;rsquo;ve never heard about, wins 10K prize at Media Lab Summit &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A team of two students and one professor from Brooklyn College won the grand prize of $10,000 at the NYC Media Lab Summit at Columbia University on Sept. 22. Computer Science Professor Neng-Fa Zhou, first-year graduate student Jie Mei, and programmer Jonathan Fruhman brought home the prize for their demo of a programming language called Picat. &amp;ldquo;Picat is a multi-paradigm programming language aimed for general-purpose applications, which means theoretically it can be used for everything in life,&amp;rdquo; said Mei. Mei, on the other hand, worked on programming during his years in college. Mei, along with his teammates at the University of Michigan, finished a project called Creative AI. They applied a neuro-linguistic programming concept &amp;ldquo;To develop models of a music artist&amp;rsquo;s lyrics so that the model would receive lyric data as input and ultimately generates new random lyrics in the style of that artist,&amp;rdquo; said Mei. Even though both Mei and Zhou have completed and worked on many successful projects, they were surprised to learn they won the grand prize. According to Picat&amp;rsquo;s website, the language incorporates the features of many other computer languages so users can solve problems more easily.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;nim-0-15-2-released-http-nim-lang-org-news-e028-version-0-15-2-html&#34;&gt;&lt;a href=&#34;http://nim-lang.org/news/e028_version_0_15_2.html&#34;&gt; Nim 0.15.2 released &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;We&amp;rsquo;re happy to announce that the latest release of Nim, version 0.15.2, is now available! As always, you can grab the latest version from the downloads page. This release is a pure bugfix release fixing the most pressing issues and regressions of 0.15.0. The list below has been generated based on the commits in Nim&amp;rsquo;s git repository. As such it lists only the issues which have been closed via a commit, for a full list see this link on Github. &amp;ldquo; Fixed &amp;ldquo;Internal error when passing parameter proc inside. Gcsafe closure&amp;rdquo; Fixed &amp;ldquo;Upcoming asyncdispatch doesn&amp;rsquo;t compile with C++ backend on OS X&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;trick-or-treat-programs-runnable-in-two-different-languages-and-that-print-trick-in-one-language-and-treat-in-the-other-http-codegolf-stackexchange-com-questions-97472-trick-or-treat-polyglot&#34;&gt;&lt;a href=&#34;http://codegolf.stackexchange.com/questions/97472/trick-or-treat-polyglot&#34;&gt; Trick OR Treat: programs runnable in two different languages and that print &amp;ldquo;Trick&amp;rdquo; in one language and &amp;ldquo;Treat&amp;rdquo; in the other &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The types t and t1 don&amp;rsquo;t matter as the arguments aren&amp;rsquo;t used in the function body. The IO-action type results from print&amp;rdquo;Treat&amp;rdquo;, which prints &amp;ldquo;Treat&amp;rdquo; to StdOut. It&amp;rsquo;s type is val :: t -&amp;gt; which is executed when the program is run. To determine whether main equals putStr&amp;rdquo;Trick&amp;rdquo;, both sides have to be evaluated and both must have the same type, as SML is statically typed. Print has the type string -&amp;gt; unit, so putStr has the type a -&amp;gt; unit and therefore putStr&amp;rdquo;Trick&amp;rdquo; has just type unit. In order to be well-typed, main must have type unit too. So first the types of putStr and main are shown, then the expressions gets evaluated causing treat to be printed, then the value of the expression (true as both sides of = are ( is bound to the implicit result variable it which is then also displayed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;main-printf-unix-021-six-012-0-unix-have-fun-0x60-http-faehnri-ch-have-fun&#34;&gt;&lt;a href=&#34;http://faehnri.ch/have-fun/&#34;&gt; main(){printf(&amp;amp;unix[&amp;rdquo;\021%six\012\0&amp;rdquo;], (unix)[&amp;ldquo;have&amp;rdquo;]+&amp;ldquo;fun&amp;rdquo;-0x60);} &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The IOCCC was inspired by Steve Bourne when he decided touse the C preprocessor to write his Unix shell in a syntax of C more like Algol-68 with explicit end statement cues where you have code like. IF *s2++ == 0 THEN return(0); FI. As Expert C says about this kind of code;. Is unix a keyword? Is it somehow printing the variable name? Searching the gcc source code, I find that it&amp;rsquo;s a run-time target specification. So unix wasn&amp;rsquo;t the name of an array variable, but how does 1[] work? I&amp;rsquo;ve seen this before and it&amp;rsquo;s one of my favorite facts about C. C has origins in the langauge BCPL. From Dr. Martin Richards, creator BCPL;. The monodic indirection operator ! takes a pointer as it&amp;rsquo;s argument and returns the contents of the word pointed to. If v is a pointer !(v+I) will access the word pointed to by v+I. The dyadic version of ! is defined so that v!i = !(v+I). V!i behaves like a subscripted expression with v being a one dimensional array and I being an integer subscript.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;what-happens-when-your-laptop-screen-breaks-at-the-himalayas-http-tombh-co-uk-when-your-screen-breaks-in-the-himalayas&#34;&gt;&lt;a href=&#34;http://tombh.co.uk/when-your-screen-breaks-in-the-himalayas&#34;&gt; What happens when your laptop screen breaks at the Himalayas &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;deep-learning-papers-reading-roadmap-https-github-com-songrotek-deep-learning-papers-reading-roadmap&#34;&gt;&lt;a href=&#34;https://github.com/songrotek/Deep-Learning-Papers-Reading-Roadmap&#34;&gt; Deep Learning papers reading roadmap &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;After reading above papers, you will have a basic understanding of the Deep Learning history, the basic architectures of Deep Learning model(including CNN, RNN, LSTM) and how deep learning can be applied to image and speech recognition issues. &amp;ldquo;Learning to learn by gradient descent by gradient descent.&amp;rdquo; arXiv preprint arXiv:1606. &amp;ldquo;Unsupervised representation learning with deep convolutional generative adversarial networks.&amp;rdquo; arXiv preprint arXiv:1511. &amp;ldquo;Neural Machine Translation by Jointly Learning to Align and Translate.&amp;rdquo; arXiv preprint arXiv:1409. &amp;ldquo;Reinforcement learning neural Turing machines.&amp;rdquo; arXiv preprint arXiv:1505. &amp;ldquo;Dueling network architectures for deep reinforcement learning.&amp;rdquo; arXiv preprint arXiv:1511. &amp;ldquo;One-shot Learning with Memory-Augmented Neural Networks.&amp;rdquo; arXiv preprint arXiv:1605.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-fast-cloc-replacement-written-in-rust-https-github-com-cgag-loc&#34;&gt;&lt;a href=&#34;https://github.com/cgag/loc&#34;&gt; A fast cloc replacement written in rust &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;There&amp;rsquo;s another rust code counting tool called tokei, loc is ~2-10x faster than tokei, depending on how many files are being counted. I can count my 400k file src directory in just under 7 seconds with loc, in a 1m14s with tokei, and I&amp;rsquo;m not even willing to try with cloc. Loc: 1.09 seconds tokei: 5.3 seconds cloc: 1 minute, 50 seconds Installation. For anyone familiar with Rust there&amp;rsquo;s cargo install loc. Fortran has a rule that comments must start with the first character of a line. X = &amp;ldquo;/* I haven&amp;rsquo;t slept for 10 days because that would be too long */&amp;ldquo;;. loc counts the first line and last lines correctly as code, but the middle lines will be incorrectly counted as comments. This project contains code from Tokei by Aaronepower and ripgrep by BurntSushi.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;why-tdd-ing-your-frontend-feels-pointless-https-engineering-haus-com-why-tdding-your-frontend-feels-pointless-5f710fea7325-nvs9bxmb5&#34;&gt;&lt;a href=&#34;https://engineering.haus.com/why-tdding-your-frontend-feels-pointless-5f710fea7325#.nvs9bxmb5&#34;&gt; Why TDD’ing your frontend feels pointless &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Working on the frontend of our application however, I found TDD difficult to do and less satisfying than with backend code. The first two points above I will very much take blame for and not fault TDD, especially given my comparative inexperience with frontend coding at the beginning of our project. Humans are hard to predict So this brings us to the biggest problem with TDD and frontend code. As an aside, folks who are just getting started in coding and/or not used to TDD who don&amp;rsquo;t understand where it shines often don&amp;rsquo;t see the point of using it. What is the frontend and how do we test it then?So up to this point, I&amp;rsquo;ve used the word frontend to describe a thing that&amp;rsquo;s hard to TDD. If you&amp;rsquo;re a web developer though, do not think that everything you have running in your user&amp;rsquo;s browser is hard to test or is even frontend code. Not everything running in the browser is hard to test or even frontend codeBecause a lot of business logic running in a browser or other client is so close to the UI, you may get the impression that it&amp;rsquo;s all hard to use TDD with. Tell me I&amp;rsquo;m wrong and show me the wayI love practicing TDD. I would love to be wrong about this, so please share your experiences below about how you have figured out how to do TDD with user interfaces that doesn&amp;rsquo;t end up with throwing away most code immediately.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;twenty-years-later-i-wrote-a-tetris-again-https-blog-levit-be-twenty-years-later-i-wrote-a-tetris-again&#34;&gt;&lt;a href=&#34;https://blog.levit.be/twenty-years-later-i-wrote-a-tetris-again/&#34;&gt; Twenty years later I wrote a Tetris&amp;hellip; again! &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Somewhere around 4am that night, after several hundred lines of Basic code, I had myself a fully working Tetris-like. It&amp;rsquo;s only a few days later that I realized I had written the same kind of program, twice, twenty years apart and in two different but somewhat similar languages. About the time it took: Surprisingly with improved tools and an extra 20 years experience, it took me about the same time this time around as it did 20 years ago. Have they been lying to us all these years telling us that with improved tools we are able to write code faster? From this experience I would say &amp;ldquo;Yes&amp;rdquo;. About the size of the code: the code I wrote this time is roughly one third of the size of my original code which probably means it has less bugs and is more maintainable. In shorter terms, the code I ended-up with in 2016 is way more re-usable than the one from 1996. Now that I&amp;rsquo;ve been rambling on and on about 2 different Tetris games coded 20 years apart, you probably want to see the code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;all-in-one-api-documentation-browser-with-offline-mode-and-instant-search-http-devdocs-io&#34;&gt;&lt;a href=&#34;http://devdocs.io&#34;&gt; All-in-one API documentation browser with offline mode and instant search &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;it-s-official-oracle-will-appeal-its-fair-use-loss-against-google-http-arstechnica-com-tech-policy-2016-10-its-official-oracle-will-appeal-its-fair-use-loss-against-google&#34;&gt;&lt;a href=&#34;http://arstechnica.com/tech-policy/2016/10/its-official-oracle-will-appeal-its-fair-use-loss-against-google/&#34;&gt; It’s official: Oracle will appeal its “fair use” loss against Google &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The massive Oracle v. Google litigation has entered a new phase, as Oracle filed papers yesterday saying it will appeal its loss on &amp;ldquo;Fair use&amp;rdquo; grounds to the US Court of Appeals for the Federal Circuit. For a brief recap of the case: after Oracle purchased Sun Microsystems and acquired the rights to Java, it sued Google in 2010, saying that Google infringed copyrights and patents related to Java. Oracle initially lost but had part of its case revived on appeal. The sole issue in the second trial was whether Google infringed the APIs in Java, which the appeals court held are copyrighted. Oracle&amp;rsquo;s appeal is no surprise, but it will be a long shot. Oracle&amp;rsquo;s post-trial motions, which the district court judge rejected, indicate the tack it might try to take on appeal. Unless Oracle pulls off a stunning move on appeal, its massive legal expenditures in this case will be for naught.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;go-now-has-sub-millisecond-gc-pause-times-https-groups-google-com-forum-m-topic-golang-dev-ab1sfeozg-8&#34;&gt;&lt;a href=&#34;https://groups.google.com/forum/m/#!topic/golang-dev/Ab1sFeoZg_8&#34;&gt; Go now has sub-millisecond GC pause times &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;what-s-more-distracting-than-a-noisy-co-worker-turns-out-not-much-http-www-npr-org-2016-10-26-498850659-what-s-more-distracting-than-a-noisy-coworker-not-much&#34;&gt;&lt;a href=&#34;http://www.npr.org/2016/10/26/498850659/what-s-more-distracting-than-a-noisy-coworker-not-much&#34;&gt; What&amp;rsquo;s More Distracting Than A Noisy Co-Worker? Turns Out, Not Much &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;According to workplace design expert Alan Hedge at Cornell, 74 percent of workers say they face &amp;ldquo;Many&amp;rdquo; instances of disturbances and distractions from noise. The University of California&amp;rsquo;s Center for the Built Environment has a study showing workers are happier when they are in enclosed offices and less likely to take sick days. It&amp;rsquo;s only months later, when he was moved to a new desk in an office reshuffling, that he realized just how much more work he accomplished without constant interruption. In a previous job, Dooley shared an office with a man who liked to eat frozen carrots and had the hacking cough of someone with chronic bronchitis. While employers worry about contagion and lost productivity of someone bringing an illness to work, they also have a legal obligation to accommodate employees who have an illness or a disability. Four years ago, the Social Security Administration reprimanded a worker for his &amp;ldquo;Excessive flatulence.&amp;rdquo; After numerous complaints and warnings, the agency charged him with &amp;ldquo;Conduct unbecoming a federal employee.&amp;rdquo; The employee claimed he had lactose intolerance, and after his union intervened, the reprimand was rescinded. The trend toward open offices and hard office furniture makes noise distraction worse, so adding carpet, drapes and upholstery can help.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;lesson-learned-from-running-a-local-meetup-http-andygrunwald-com-blog-lesson-learned-from-running-a-local-meetup&#34;&gt;&lt;a href=&#34;http://andygrunwald.com/blog/lesson-learned-from-running-a-local-meetup/&#34;&gt; Lesson learned from running a local meetup &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A good / usable location is important for the meetup and the location depends on the meetup content. If you a running your meetup in a small conference room with ~15 people you often don&amp;rsquo;t need this. Try to motivate people from your community and local meetup to get on stage for the first time. If your meetup is well known, sometimes speaker will contact you, because they knew that it is possible to test bigger conference talks at local usergroups and improve them later. Name of the meetup WiFi access Office / location rules Where are the toilets Announcements of other appointments like other meetups in the area conferences / hackathons near by your next meetup Speaker and topic of today If you offer a socialising after the talk or if the meetup ends directly. If you run a meetup or visit meetups on a regular basis, feel free to share your lessons learned in the comments. Found a bug in this article? Feel free to create a pull request at Lessons learned from running a local meetup at github.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>How to become an enterprise developer and other personal rants ?</title>
      <link>http://iszlai.github.io/post/how-to-become-an-enterprise-developer/</link>
      <pubDate>Wed, 05 Nov 2014 13:27:23 +0200</pubDate>
      
      <guid>http://iszlai.github.io/post/how-to-become-an-enterprise-developer/</guid>
      <description>&lt;p&gt;First of all this is a personal post with lot of questions, insecurities and rants. Really any answer reply&amp;rsquo;s, tweet, PM, email anything would be useful and help me at this point. But first let me give a bit of a background of how I got to this stage in the first place.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve studied programming since highscool all throughout University I had a CS major so I have/had the basics covered. While in Uni they hired me as a &amp;ldquo;Test automation engineer&amp;rdquo; but what I ended up doing was mostly manual testing with very little coding (or thinking by the way) &lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/qa.gif&#34; alt=&#34;alt text&#34; title=&#34;QA&#34; /&gt;
&lt;br/&gt;
with continuous promises of getting in the development side. Which never came, so one day almost after a year of getting fed up I decided I would move on.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;I moved to another city get a job at a respected international financial firm and went trough their graduate program. It was wonderful they really tried their best to teach us about all the low level intricate details of *nix systems and C/C++ differences and idioms and a short introductory to function side with a bit of Scala.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;After the program we where pre-placed in teams ,and although I always had more affinity for backend related task and technology someone decided I will do Flash/Flex development on a huge system but with the promise I&amp;rsquo;ll get to work the backend as well.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s been a year since and almost all I did was UI development and it really doesn&amp;rsquo;t suit me, while I rarely had the chance but everytime I could do any minor change on the Java backend I was really happy. Don&amp;rsquo;t get me wrong it was hard with virtually any experience with a 500k lines of code base.
&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/feel.gif&#34; alt=&#34;alt text&#34; title=&#34;Feel&#34; /&gt;
&lt;br/&gt;
 It was/is really hard to find way trough it. Since it is a 6 years+ old project most of the original team has moved on and any bit of documentation outdated.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;I did my best to learn the theory and I can say fairly confident that I know how dependency injection works, I can use Spring and can modify the components based on the code that&amp;rsquo;s already present. I know how ORMs work and even wrote a toy one for myself at home just to get a deeper understanding. I read a lot about and in theory know and understand design patterns.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;But my problem is that certain thing just don&amp;rsquo;t click in my mind. It&amp;rsquo;s mostly the why&amp;rsquo;s. Why are there factories everywhere, why are there builders upon builder, things like AbstractProxyBeanFactory and the like make me hold my head and scream. Why are things like VisitorAdapter (just like this ) defined. Why and who thought SOAP was a good a idea to communicate with integration partners.
&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/legacy.gif&#34; alt=&#34;alt text&#34; title=&#34;Knowledge&#34; /&gt;
&lt;br/&gt;
 I find my self lost with no guidance at all, I rarely get to write code in the backend and feel that my home pet projects are not enough to learn certain things like this.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;So my questions are as follows:
How to learn ,to understand and to get better at this type of code? I thought about open source but find it really heard to contribute to anything meaningfull. It&amp;rsquo;s either also huge without anybody to ask, or I&amp;rsquo;ve read here or there that they are impatient with new people, or all they have time for is a readily made pull request.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;My final question is on a related ,topic is should a try to master Java more or focus on more new and trendy stuff ?Thing is I really feel like this &lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/aprox.gif&#34; alt=&#34;alt text&#34; title=&#34;Knowledge&#34; /&gt;
&lt;br/&gt;
,and feel like I really should try to focus on one thing just don&amp;rsquo;t really know on what.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Eclipse Survival Guide</title>
      <link>http://iszlai.github.io/post/eclipse-survival-guide/</link>
      <pubDate>Sat, 27 Sep 2014 13:27:23 +0200</pubDate>
      
      <guid>http://iszlai.github.io/post/eclipse-survival-guide/</guid>
      <description>

&lt;p&gt;After starting with Java, Scala, C++ or any other language you probably start using an ide, well there are many out there for everyones personal preferences I&amp;rsquo;ll mainly focus on Eclipse.It&amp;rsquo;s an Open Source IDE, mostly provided in Java, but it supports other the development languages by being extended with plug-ins.&lt;/p&gt;

&lt;h2 id=&#34;turn-on-line-numbers&#34;&gt;Turn on line numbers&lt;/h2&gt;

&lt;p&gt;Seems trivial but it&amp;rsquo;s really useful when you work on a team or want to find something at a specific line. All you have to do is right click the gutter and choose &lt;strong&gt;Show line numbers&lt;/strong&gt;. It&amp;rsquo;s a simple tip but often useful and you only have to do it once.
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/lineNum.gif&#34; alt=&#34;alt text&#34; title=&#34;Show line numbers&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;go-to-line&#34;&gt;Go to line&lt;/h2&gt;

&lt;p&gt;Similarly you see a line number inside a log regarding an Exception all you do is fire up go to line using &lt;strong&gt;Ctrl+L&lt;/strong&gt; type the line number and hit enter.
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/gotoLine.gif&#34; alt=&#34;alt text&#34; title=&#34;Go to line&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;settings-search&#34;&gt;Settings search&lt;/h2&gt;

&lt;p&gt;Eclipse is a huge platform and is continually growing it&amp;rsquo;s really hard to find keep in mind where you can find the appropriate settings. Luckily theres a search for the settings.
Let&amp;rsquo;s try to find the JRE settings as it&amp;rsquo;s commonly needed. So all you do is go to settings which can be found at &lt;strong&gt;Window&lt;/strong&gt; &amp;gt;&amp;gt; &lt;strong&gt;Preferences&lt;/strong&gt; and type what you are searching for like &lt;strong&gt;JRE&lt;/strong&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/settingsSearch.gif&#34; alt=&#34;alt text&#34; title=&#34;Settings&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;type-hierarchy&#34;&gt;Type hierarchy&lt;/h2&gt;

&lt;p&gt;Ever wanted to know the whole supertype tree of a class of a class or to find the abstract type ? Using supertype hierarchy with &lt;strong&gt;Ctrl&lt;/strong&gt;+&lt;strong&gt;T&lt;/strong&gt; .
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/supertype.gif&#34; alt=&#34;alt text&#34; title=&#34;Supertype&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;comment-out-a-block&#34;&gt;Comment out a block&lt;/h2&gt;

&lt;p&gt;When in a hurry you want to check something out, and don&amp;rsquo;t want the change to last, you could just easily comment out a block using &lt;strong&gt;Ctrl&lt;/strong&gt;+&lt;strong&gt;Shift&lt;/strong&gt;+&lt;strong&gt;C&lt;/strong&gt;.
After you&amp;rsquo;re done repeat the same to undo it. This is also available for majority of languages so don&amp;rsquo;t have to type &lt;code&gt;&amp;lt;!-- --&amp;gt;&lt;/code&gt; in xml ever again.Side note never leave commented out code blocks in code, it&amp;rsquo;s messy and it makes the code harder to read, and there really is no reason to keep it anyway thats what the source control is for.
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/comment.gif&#34; alt=&#34;alt text&#34; title=&#34;Comment&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;extract-method&#34;&gt;Extract method&lt;/h2&gt;

&lt;p&gt;While refactoring you find a huge chunk of code that really should be a a method. So you could just create a method copy the chunk out, figure out the parameters and make it work. Or you could the IDE do most the work and just check the result. All you do is &lt;strong&gt;Alt&lt;/strong&gt;+&lt;strong&gt;Shift&lt;/strong&gt;+&lt;strong&gt;M&lt;/strong&gt; and give a method name.As you can see eclipse really does a pretty fine job on it&amp;rsquo;s own and saves you a lot of time.
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/extract.gif&#34; alt=&#34;alt text&#34; title=&#34;Extract method&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;delete-a-line&#34;&gt;Delete a line&lt;/h2&gt;

&lt;p&gt;Don&amp;rsquo;t you just have it when there are empty lines in the wrong place ? Using &lt;strong&gt;Ctrl&lt;/strong&gt;+&lt;strong&gt;D&lt;/strong&gt; you delete the current line, it&amp;rsquo;s really like Vim&amp;rsquo;s DD command if that ain&amp;rsquo;t a reason to love it, i don&amp;rsquo;t know what is.
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/delete.gif&#34; alt=&#34;alt text&#34; title=&#34;Delete a line&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;find-references&#34;&gt;Find references&lt;/h2&gt;

&lt;p&gt;You want to change something but you aren&amp;rsquo;t sure if it&amp;rsquo;s used by anything else or what else might be affected. In this case all you do is &lt;strong&gt;Right-click&lt;/strong&gt;+&lt;strong&gt;References&lt;/strong&gt;+&lt;strong&gt;scope&lt;/strong&gt; (like workspace, project, etc)
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/refferences.gif&#34; alt=&#34;alt text&#34; title=&#34;References&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;generate-code&#34;&gt;Generate code&lt;/h2&gt;

&lt;p&gt;Often you find yourself writing a bit boiler plate code like getters/setters, toString, simple constructors.All this can be done by eclipse for you in a pretty find grained matter. All you do is &lt;strong&gt;Right-click&lt;/strong&gt;+&lt;strong&gt;Source&lt;/strong&gt;+what code you want to generate.
You can choose things like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Getters and Setters&lt;/li&gt;
&lt;li&gt;Delegate methods&lt;/li&gt;
&lt;li&gt;hashCode() and equals()&lt;/li&gt;
&lt;li&gt;toString()&lt;/li&gt;
&lt;li&gt;Constructors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This bit can make you really productive but also please be careful don&amp;rsquo;t let the IDE make design decisions for you if you don&amp;rsquo;t need it don&amp;rsquo;t add it it will be just a cluttered code.
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/generate.gif&#34; alt=&#34;alt text&#34; title=&#34;Generate&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;open-resource&#34;&gt;Open resource&lt;/h2&gt;

&lt;p&gt;You are working on a project with hundreds of files packages and a complex structure if you have sort of memory about what a file is called you can try opening it with open resources .To use it all you need is &lt;strong&gt;Ctrl&lt;/strong&gt;+&lt;strong&gt;Shift&lt;/strong&gt;+&lt;strong&gt;R&lt;/strong&gt; ,and name in which you can also use &lt;code&gt;?&lt;/code&gt; for any character match and &lt;code&gt;*&lt;/code&gt; any string match
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/openRes.gif&#34; alt=&#34;alt text&#34; title=&#34;Open resources&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;open-declaration-implementation&#34;&gt;Open declaration/implementation&lt;/h2&gt;

&lt;p&gt;When you see a method or an object and you would like to know where it&amp;rsquo;s declared or where it&amp;rsquo;s implemented you just hold down &lt;strong&gt;Ctrl&lt;/strong&gt; + &lt;strong&gt;click&lt;/strong&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/openDec.gif&#34; alt=&#34;alt text&#34; title=&#34;Open declaration/implementation&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;search&#34;&gt;Search&lt;/h2&gt;

&lt;p&gt;The search in eclipse is really powerful and has many functionalities to cover all of them it would take quite a lot.The two main things I would like to point out are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Search and replace in file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The typical file search and replace theres not a lot to talk about it. All you do is &lt;strong&gt;Ctrl&lt;/strong&gt;+&lt;strong&gt;F&lt;/strong&gt; and then the usual functionality you would expect is there.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Search workspace&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A more powerful search with filtering capabilities on file type and search scope.I couldn&amp;rsquo;t live without it on a windows box it&amp;rsquo;s almost as good as &lt;code&gt;grep&lt;/code&gt; .To use it all you need is &lt;strong&gt;Ctrl&lt;/strong&gt; + &lt;strong&gt;H&lt;/strong&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/searchH.gif&#34; alt=&#34;alt text&#34; title=&#34;Search&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>