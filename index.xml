<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iszlai - data,coffee and code</title>
    <link>http://iszlai.github.io/</link>
    <description>Recent content on iszlai - data,coffee and code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Oct 2016 22:08:17 +0100</lastBuildDate>
    <atom:link href="http://iszlai.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>2016 week 43 in programming</title>
      <link>http://iszlai.github.io/post/2016_week_43_in_programming/</link>
      <pubDate>Sun, 30 Oct 2016 22:08:17 +0100</pubDate>
      
      <guid>http://iszlai.github.io/post/2016_week_43_in_programming/</guid>
      <description>

&lt;h1 id=&#34;2016-week-43-in-programming&#34;&gt;2016 week 43 in programming&lt;/h1&gt;

&lt;h2 id=&#34;applying-the-linus-tarvolds-good-taste-coding-requirement-https-medium-com-bartobri-applying-the-linus-tarvolds-good-taste-coding-requirement-99749f37684a-h5uuz43ge&#34;&gt;&lt;a href=&#34;https://medium.com/@bartobri/applying-the-linus-tarvolds-good-taste-coding-requirement-99749f37684a#.h5uuz43ge&#34;&gt; Applying the Linus Tarvolds &amp;ldquo;Good Taste&amp;rdquo; Coding Requirement &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;To the best of my ability to discern, the crux of the &amp;ldquo;Good taste&amp;rdquo; requirement is the elimination of edge cases, which tend to reveal themselves as conditional statements. Below is an algorithm I wrote to initialize the points along the edge of a grid, which is represented as a multidimensional array: grid[rows][cols]. Again, the purpose of this code was to only initialize the values of the points that reside on the edge of the grid - so only the top row, bottom row, left column, and right column. To accomplish this I initially looped over every point in the grid and used conditionals to test for the edges. Complexity - The use 4 conditional statements inside 2 embedded loops seems overly complex. It was only a slight improvement in complexity, but a large improvement in performance, because it only performed 256 loop iterations, one for each point along the edge. For This code initializes four different edge points for each loop iteration.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;it-s-official-java-9-will-support-ahead-of-time-compilation-but-only-64-bit-linux-initially-http-openjdk-java-net-jeps-295&#34;&gt;&lt;a href=&#34;http://openjdk.java.net/jeps/295&#34;&gt; It&amp;rsquo;s official: Java 9 will support ahead-of-time compilation (but only 64-bit Linux initially) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;AOT compilation of any other JDK module, or of user code, is experimental. During AOT compilation a fingerprint for each class is generated and stored in the data section of the shared library. In these cases, AOT compilation needs be done on the entire application and is thus experimental in JDK 9. The system should have installed libelf to allow generation of AOT shared libraries as result of AOT compilation. AOT compilation should be executed on the same system or a system with the same configuration on which AOT code will be used by Java application. For the initial release in JDK 9 the only supported module for AOT compilation will be java. The same Java run-time configuration should be used during AOT compilation and execution.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;android-can-be-rooted-using-recently-discovered-linux-vulnerability-http-arstechnica-com-security-2016-10-android-phones-rooted-by-most-serious-linux-escalation-bug-ever&#34;&gt;&lt;a href=&#34;http://arstechnica.com/security/2016/10/android-phones-rooted-by-most-serious-linux-escalation-bug-ever/&#34;&gt; Android can be rooted using recently discovered Linux vulnerability &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s extremely easy to exploit, making it one of the worst privilege-elevation flaws ever to hit the open-source OS. Independent security researcher David Manouchehri told Ars that this proof-of-concept code that exploits Dirty Cow on Android gets devices close to root. With a few additional lines, Manouchehri&amp;rsquo;s code provides persistent root access on all five of the Android devices he has tested. &amp;ldquo;From what I can tell, in theory it should be able to root every device since Android 1.0. Android 1.0 started on [Linux] kernel [version] 2.6.25, and this exploit has been around since 2.6.22.&amp;ldquo;. Both of the exploits allow end users to root Android phones so they have capabilities such as tethering that are often restricted by individual manufacturers or carriers. Just as Dirty Cow has allowed untrusted users or attackers with only limited access to a Linux server to dramatically elevate their control, the flaw can allow shady app developers to evade Android defenses that cordon off apps from other apps and from core OS functions. The reliability of Dirty Cow exploits and the ubiquity of the underlying flaw makes it an ideal malicious root trigger, especially against newer devices running the most recent versions of Android. Dirty Cow came to light a few days before the release of a separate rooting method for Android devices.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;happiness-is-a-boring-stack-http-www-expatsoftware-com-articles-happiness-is-a-boring-stack-html&#34;&gt;&lt;a href=&#34;http://www.expatsoftware.com/Articles/happiness-is-a-boring-stack.html&#34;&gt; Happiness is a Boring Stack &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s a fun place, and a good way to keep up to date on all the new tech that us developer folk seem to need to know about. Yeah, sure, Node.js with tons of functional stuff mixed in pulling from a NoSQL store and React on the front end. For my own stuff, there&amp;rsquo;s no way I&amp;rsquo;d use any of that crap. This stuff is my proper income stream, and the most important thing is that it works. It means I can, among other things, pick up a full-time development gig to sock away some extra runway, take off and go backpacking around the world, or better still, build yet another rent-paying product without having to spend a significant amount of time keeping the old stuff alive. It seems like on a lot of stacks, keeping the server alive, patched and serving webpages is a part-time job in itself. The less effort you need to spend on maintenance, the more pace you can keep going forward.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;parsing-json-is-a-minefield-http-seriot-ch-parsing-json-php&#34;&gt;&lt;a href=&#34;http://seriot.ch/parsing_json.php&#34;&gt; Parsing JSON is a Minefield 💣 &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Range and Precision - What about numbers with a huge amount of digits? According to RFC 7159, &amp;ldquo;A JSON parser MUST accept all texts that conform to the JSON grammar&amp;rdquo;. A JSON parser MUST accept all texts that conform to the JSON grammar. Independently from how parsers should behave, I wanted to observe how they actually behave, so I picked several JSON parsers and set up things so that I could feed them with my test files. The parsers are generally wrapped so that the process returns 0 in case of success, 1 in case of parsing error, yet another status in case of crash, a 5-second delay being considered as a timeout. Parsing should have succeeded but failedparsing should have failed but succeededresult undefined, parsing succeededresult undefined, parsing failedCrashTimeout. A JSON parser transforms a JSON text into another representation. I wrote yet another JSON parser which will parse or reject JSON document according to my understanding of RFC 7159.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-to-get-fired-using-switch-statements-statement-expressions-http-blog-robertelder-org-switch-statements-statement-expressions&#34;&gt;&lt;a href=&#34;http://blog.robertelder.org/switch-statements-statement-expressions/&#34;&gt; How to Get Fired Using Switch Statements &amp;amp; Statement Expressions &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;One extremely unmaintainable and bug-ridden technique for C programming involves using both switch statements and statement expressions together. In this article, we will discuss how you can leverage switch statements and statement expressions to produce C code that is so difficult to understand, you&amp;rsquo;ll need to look at the assembly to figure out what it does. After branching to that label nothing special happens related to the fact that you&amp;rsquo;re inside a switch statement and the code will just keep executing whatever machine instructions come next. The one exception is, of course, the break statement which will jump to the point after the switch statement body. Here is an equivalent version of the switch statement written above using only ifs and gotos. The switch statement effectively just gives us a convenient way to implement the goto statements that would be necessary to either jump to the start of the coroutine, or the point just after the coroutine returns. Regular ole expression &lt;em&gt;/ int i = 0; /&lt;/em&gt; Fancy new statement expression */ int j =;. You might ask &amp;ldquo;Why would you ever want to do such a thing?&amp;rdquo; There are a number of different answers and many of them are related to convenience: One use case is concerned with ensuring that expression statement side-effects are only evaluated once in the case of a function macro that may cause the expression to appear multiple times in the function macro body.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;patent-judge-issues-opinion-declaring-all-software-patents-bad-https-www-techdirt-com-articles-20161005-15280135720-prominent-pro-patent-judge-issues-opinion-declaring-all-software-patents-bad-shtml&#34;&gt;&lt;a href=&#34;https://www.techdirt.com/articles/20161005/15280135720/prominent-pro-patent-judge-issues-opinion-declaring-all-software-patents-bad.shtml&#34;&gt; Patent Judge Issues Opinion Declaring All Software Patents Bad &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This latest ruling, from the very court that upended things nearly two decades ago in declaring software much more broadly patentable than anyone believed, may now be the nail in the coffin on software patents in the US. The headline, of course, is that the patents that Intellectual Ventures used against anti-virus firms Symantec and Trend Micro, were bunk, because they did not cover patent eligible subject matter. The part that has everyone chattering is the concurring opinion by Judge Haldane Mayer, that says it&amp;rsquo;s time to face facts: Alice killed software patents. In Support of Respondents, Alice, 134 S. Ct. 2347, 2014 WL 828047, at *6-7; Mark A. Lemley, Software Patents and the Return of Functional Claiming, 2013 Wis. L. Rev. 905, 935 (&amp;ldquo;Software patents &amp;hellip; have created a large number of problems for the industry, particularly for the most innovative and productive companies&amp;hellip;. [T]he existence of a vibrant open source community suggests that innovation can flourish in software absent patent protection.&amp;rdquo; (footnote omitted ; Wendy Seltzer, Software Patents and/or Software Development, 78 Brook. Mayer goes even further in this discussing four separate problems with the whole concept of software patents, including the fact that the scope of the patents greatly exceeds the importance of what they disclose. The third problem he discusses is the fact that the system is overwhelmed with software patents, &amp;ldquo;Most of which are replete with broad, functional claims&amp;rdquo; which makes it &amp;ldquo;Virtually impossible to innovate in any technological field without being ensnared by the patent thicket.&amp;rdquo; Nicely put. From there, he suggests that the courts should just stop punting on the issue and declare software patents dead: Declaring that software implemented on a generic computer falls outside of section 101 would provide muchneeded clarity and consistency in our approach to patent eligibility. It would end the semantic gymnastics of trying to bootstrap software into the patent system by alleging it offers a &amp;ldquo;Specific method of filtering Internet content,&amp;rdquo;&amp;hellip;. The opinion is a great read overall - and it&amp;rsquo;s the kind of arguments that plenty of folks in and around tech and software patents have been making for years.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-taste-of-haskell-https-hookrace-net-blog-a-taste-of-haskell&#34;&gt;&lt;a href=&#34;https://hookrace.net/blog/a-taste-of-haskell/&#34;&gt; A Taste of Haskell &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The error message tells us that the list is assumed to be a list of booleans because of the final value. If the list has more than one element, we remove the first element of the list and recursively call last&amp;rsquo; on the rest of the list. The length of a list with more than 0 elements is 1 plus the length of the rest of the list. Map&amp;rsquo; f [] = []. The base case is easy: When we get an empty list passed, the result is also an empty list. Finally we recurse with the rest of the list, until we reach the base case for the empty list. While working with lists in Haskell you might wonder what happens if we never reach the base case? We have lazy evaluation in Haskell, which tells us that a data structure is only evaluated when it&amp;rsquo;s actually needed. The second parameter is a list of values of type a, the third parameter is a list of values of type b and finally a list of type c is returned.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-i-became-hackerrank-1-in-two-hours-http-williampross-com-became-hackerrank-1-two-hours&#34;&gt;&lt;a href=&#34;http://williampross.com/became-hackerrank-1-two-hours/&#34;&gt; How I Became HackerRank #1 In Two Hours &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;My ranking on Hacker Rank is #1 for Java programming and it only took me two hours. After earning a top ranking for Java developers globally, Furlong was hired by JPMorgan Chase &amp;amp; Co. in December for its two-year technology training program. Much of the time I spent trying to solve problems on Hacker Rank was battling with standard in, rather than solving problems. Due to these limitations, the programmer is often spending half the time fighting with the Hacker Rank website, rather than learning. First of all, Hacker Rank only &amp;ldquo;Teaches&amp;rdquo; the basic Java language features. A programmer&amp;rsquo;s merit has never relied on rankings, and there is no reason to start now. If a person is claiming to be a top ranked programmer from Hacker Rank you should know this person is likely a fraud.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;freeing-my-tablet-android-hacking-sw-and-hw-https-www-thanassis-space-android-html&#34;&gt;&lt;a href=&#34;https://www.thanassis.space/android.html&#34;&gt; Freeing my tablet (Android hacking, SW and HW) &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;1 ttsiod ttsiod 21 Oct 8 23:11 userdata -&amp;gt; /dev/block/mmcblk0p32 Golly gee, Mr Google, that&amp;rsquo;s a lot of partitions. I do believe though that when you do this, the tablet is supposed to be wiped automatically&amp;hellip; since by allowing booting of a custom image, an external entity can pretty much gather every data residing inside the tablet - and completely violate your privacy. Rc drwxr-xr-x 2 ttsiod ttsiod 4096 Oct 23 08:30 proc -rw-r-r- 1 ttsiod ttsiod 3138 Oct 23 08:30 property contexts drwxr-xr-x 3 ttsiod ttsiod 4096 Oct 23 08:30 res drwxr-x&amp;ndash; 2 ttsiod ttsiod 4096 Oct 23 08:30 sbin -rw-r-r- 1 ttsiod ttsiod 746 Oct 23 08:30 seapp contexts -rw-r-r- 1 ttsiod ttsiod 76 Oct 23 08:30 selinux version -rw-r-r- 1 ttsiod ttsiod 177701 Oct 23 08:30 sepolicy -rw-r-r- 1 ttsiod ttsiod 10468 Oct 23 08:30 service contexts drwxr-xr-x 2 ttsiod ttsiod 4096 Oct 23 08:30 sys drwxr-xr-x 2 ttsiod ttsiod 4096 Oct 23 08:30 system -rw-r-r- 1 ttsiod ttsiod 8349 Oct 23 08:30 ueventd. So I went back to that Over-The-Air update&amp;hellip;. host$ ls -l total 803592 drwxr-xr-x 2 ttsiod ttsiod 4096 Oct 21 01:22./ drwxr-xr-x 6 ttsiod ttsiod 4096 Sep 25 23:34./ -rw-rw-r- 1 ttsiod ttsiod 822861864 Aug 7 2015 UL-K01E-WW-12.16.1.12-user. We CAN boot our own boot images on the tablet, but ASUS keeps a note somewhere: &amp;ldquo;This is a bad person, booting his own boot image. We will no longer boot for him normally.&amp;rdquo; We CAN clear our record afterwards and make the tablet &amp;ldquo;Normal&amp;rdquo; again. this took me ages to find and to manage to compile properly - Joshua Brindle provides the source code of sepolicy-inject; a tool that allowed me to tell Android that the SELinux policy I want&amp;hellip;. host$ ls -l drwxr-xr-x 2 ttsiod ttsiod 4096 Oct 22 16:05./ drwxr-xr-x 4 ttsiod ttsiod 4096 Oct 4 2015./ -rw-r-r- 1 ttsiod ttsiod 349 Oct 22 15:42 Makefile -rw-r-r- 1 ttsiod ttsiod 1088 Jul 17 2013 README.txt -rw-r-r- 1 ttsiod ttsiod 5851 Jul 17 2013 sepolicy-inject. God knows what else - the GPS, etc :-(. I have to go back to my original plan - boot from the pristine boot image burned in the tablet, and become root ONLY through modifications to my /system partition.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;what-was-it-like-programming-skyrim-stream-with-former-bethesda-lead-programmer-brett-douville-http-www-gamasutra-com-view-news-284447-what-was-it-like-programming-skyrim&#34;&gt;&lt;a href=&#34;http://www.gamasutra.com/view/news/284447/What_was_it_like_programming_Skyrim&#34;&gt; &amp;ldquo;What was it like programming Skyrim?&amp;rdquo; - Stream with former Bethesda Lead programmer Brett Douville &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s been five years since The Elder Scrolls: Skyrim launched, and since then the way open-world games are made has changed so much. Bethesda Softworks has gone on to release Fallout 4, and companies like Ubisoft and CD Projekt Red have built their own templates for creating vast, open game spaces that rival the size of Bethesda&amp;rsquo;s fifth Elder Scrolls RPG. But despite how far open-world games have come, we at Gamasutra were curious, what was it like working on Skyrim? With the release of Skyrim&amp;rsquo;s special edition that brings the game to PS4 and Xbox One, we decided to invite former Bethesda Softworks lead programmer Brett Douville in for a conversation about programming the game. As seen above, the chat was particularly illuminating, since as Douville explained, the best language a programmer can know isn&amp;rsquo;t any coding language, but as he puts it &amp;ldquo;English&amp;rdquo;-meaning just having the ability to communicate with other team members and translate game design concepts into code and back. It turns out that even while Skyrim proved to be a huge programming challenge, it was also a lesson for Douville and his colleagues to just figure out how to take care of themselves and work together as a team.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;picat-the-programming-language-you-ve-never-heard-about-wins-10k-prize-at-media-lab-summit-http-bcexcelsior-com-computer-programming-language-wins-grand-prize-at-media-lab-summit&#34;&gt;&lt;a href=&#34;http://bcexcelsior.com/computer-programming-language-wins-grand-prize-at-media-lab-summit/&#34;&gt; Picat, the programming language you&amp;rsquo;ve never heard about, wins 10K prize at Media Lab Summit &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A team of two students and one professor from Brooklyn College won the grand prize of $10,000 at the NYC Media Lab Summit at Columbia University on Sept. 22. Computer Science Professor Neng-Fa Zhou, first-year graduate student Jie Mei, and programmer Jonathan Fruhman brought home the prize for their demo of a programming language called Picat. &amp;ldquo;Picat is a multi-paradigm programming language aimed for general-purpose applications, which means theoretically it can be used for everything in life,&amp;rdquo; said Mei. Mei, on the other hand, worked on programming during his years in college. Mei, along with his teammates at the University of Michigan, finished a project called Creative AI. They applied a neuro-linguistic programming concept &amp;ldquo;To develop models of a music artist&amp;rsquo;s lyrics so that the model would receive lyric data as input and ultimately generates new random lyrics in the style of that artist,&amp;rdquo; said Mei. Even though both Mei and Zhou have completed and worked on many successful projects, they were surprised to learn they won the grand prize. According to Picat&amp;rsquo;s website, the language incorporates the features of many other computer languages so users can solve problems more easily.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;nim-0-15-2-released-http-nim-lang-org-news-e028-version-0-15-2-html&#34;&gt;&lt;a href=&#34;http://nim-lang.org/news/e028_version_0_15_2.html&#34;&gt; Nim 0.15.2 released &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;We&amp;rsquo;re happy to announce that the latest release of Nim, version 0.15.2, is now available! As always, you can grab the latest version from the downloads page. This release is a pure bugfix release fixing the most pressing issues and regressions of 0.15.0. The list below has been generated based on the commits in Nim&amp;rsquo;s git repository. As such it lists only the issues which have been closed via a commit, for a full list see this link on Github. &amp;ldquo; Fixed &amp;ldquo;Internal error when passing parameter proc inside. Gcsafe closure&amp;rdquo; Fixed &amp;ldquo;Upcoming asyncdispatch doesn&amp;rsquo;t compile with C++ backend on OS X&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;trick-or-treat-programs-runnable-in-two-different-languages-and-that-print-trick-in-one-language-and-treat-in-the-other-http-codegolf-stackexchange-com-questions-97472-trick-or-treat-polyglot&#34;&gt;&lt;a href=&#34;http://codegolf.stackexchange.com/questions/97472/trick-or-treat-polyglot&#34;&gt; Trick OR Treat: programs runnable in two different languages and that print &amp;ldquo;Trick&amp;rdquo; in one language and &amp;ldquo;Treat&amp;rdquo; in the other &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The types t and t1 don&amp;rsquo;t matter as the arguments aren&amp;rsquo;t used in the function body. The IO-action type results from print&amp;rdquo;Treat&amp;rdquo;, which prints &amp;ldquo;Treat&amp;rdquo; to StdOut. It&amp;rsquo;s type is val :: t -&amp;gt; which is executed when the program is run. To determine whether main equals putStr&amp;rdquo;Trick&amp;rdquo;, both sides have to be evaluated and both must have the same type, as SML is statically typed. Print has the type string -&amp;gt; unit, so putStr has the type a -&amp;gt; unit and therefore putStr&amp;rdquo;Trick&amp;rdquo; has just type unit. In order to be well-typed, main must have type unit too. So first the types of putStr and main are shown, then the expressions gets evaluated causing treat to be printed, then the value of the expression (true as both sides of = are ( is bound to the implicit result variable it which is then also displayed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;main-printf-unix-021-six-012-0-unix-have-fun-0x60-http-faehnri-ch-have-fun&#34;&gt;&lt;a href=&#34;http://faehnri.ch/have-fun/&#34;&gt; main(){printf(&amp;amp;unix[&amp;rdquo;\021%six\012\0&amp;rdquo;], (unix)[&amp;ldquo;have&amp;rdquo;]+&amp;ldquo;fun&amp;rdquo;-0x60);} &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The IOCCC was inspired by Steve Bourne when he decided touse the C preprocessor to write his Unix shell in a syntax of C more like Algol-68 with explicit end statement cues where you have code like. IF *s2++ == 0 THEN return(0); FI. As Expert C says about this kind of code;. Is unix a keyword? Is it somehow printing the variable name? Searching the gcc source code, I find that it&amp;rsquo;s a run-time target specification. So unix wasn&amp;rsquo;t the name of an array variable, but how does 1[] work? I&amp;rsquo;ve seen this before and it&amp;rsquo;s one of my favorite facts about C. C has origins in the langauge BCPL. From Dr. Martin Richards, creator BCPL;. The monodic indirection operator ! takes a pointer as it&amp;rsquo;s argument and returns the contents of the word pointed to. If v is a pointer !(v+I) will access the word pointed to by v+I. The dyadic version of ! is defined so that v!i = !(v+I). V!i behaves like a subscripted expression with v being a one dimensional array and I being an integer subscript.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;what-happens-when-your-laptop-screen-breaks-at-the-himalayas-http-tombh-co-uk-when-your-screen-breaks-in-the-himalayas&#34;&gt;&lt;a href=&#34;http://tombh.co.uk/when-your-screen-breaks-in-the-himalayas&#34;&gt; What happens when your laptop screen breaks at the Himalayas &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;deep-learning-papers-reading-roadmap-https-github-com-songrotek-deep-learning-papers-reading-roadmap&#34;&gt;&lt;a href=&#34;https://github.com/songrotek/Deep-Learning-Papers-Reading-Roadmap&#34;&gt; Deep Learning papers reading roadmap &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;After reading above papers, you will have a basic understanding of the Deep Learning history, the basic architectures of Deep Learning model(including CNN, RNN, LSTM) and how deep learning can be applied to image and speech recognition issues. &amp;ldquo;Learning to learn by gradient descent by gradient descent.&amp;rdquo; arXiv preprint arXiv:1606. &amp;ldquo;Unsupervised representation learning with deep convolutional generative adversarial networks.&amp;rdquo; arXiv preprint arXiv:1511. &amp;ldquo;Neural Machine Translation by Jointly Learning to Align and Translate.&amp;rdquo; arXiv preprint arXiv:1409. &amp;ldquo;Reinforcement learning neural Turing machines.&amp;rdquo; arXiv preprint arXiv:1505. &amp;ldquo;Dueling network architectures for deep reinforcement learning.&amp;rdquo; arXiv preprint arXiv:1511. &amp;ldquo;One-shot Learning with Memory-Augmented Neural Networks.&amp;rdquo; arXiv preprint arXiv:1605.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-fast-cloc-replacement-written-in-rust-https-github-com-cgag-loc&#34;&gt;&lt;a href=&#34;https://github.com/cgag/loc&#34;&gt; A fast cloc replacement written in rust &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;There&amp;rsquo;s another rust code counting tool called tokei, loc is ~2-10x faster than tokei, depending on how many files are being counted. I can count my 400k file src directory in just under 7 seconds with loc, in a 1m14s with tokei, and I&amp;rsquo;m not even willing to try with cloc. Loc: 1.09 seconds tokei: 5.3 seconds cloc: 1 minute, 50 seconds Installation. For anyone familiar with Rust there&amp;rsquo;s cargo install loc. Fortran has a rule that comments must start with the first character of a line. X = &amp;ldquo;/* I haven&amp;rsquo;t slept for 10 days because that would be too long */&amp;ldquo;;. loc counts the first line and last lines correctly as code, but the middle lines will be incorrectly counted as comments. This project contains code from Tokei by Aaronepower and ripgrep by BurntSushi.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;why-tdd-ing-your-frontend-feels-pointless-https-engineering-haus-com-why-tdding-your-frontend-feels-pointless-5f710fea7325-nvs9bxmb5&#34;&gt;&lt;a href=&#34;https://engineering.haus.com/why-tdding-your-frontend-feels-pointless-5f710fea7325#.nvs9bxmb5&#34;&gt; Why TDD’ing your frontend feels pointless &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Working on the frontend of our application however, I found TDD difficult to do and less satisfying than with backend code. The first two points above I will very much take blame for and not fault TDD, especially given my comparative inexperience with frontend coding at the beginning of our project. Humans are hard to predict So this brings us to the biggest problem with TDD and frontend code. As an aside, folks who are just getting started in coding and/or not used to TDD who don&amp;rsquo;t understand where it shines often don&amp;rsquo;t see the point of using it. What is the frontend and how do we test it then?So up to this point, I&amp;rsquo;ve used the word frontend to describe a thing that&amp;rsquo;s hard to TDD. If you&amp;rsquo;re a web developer though, do not think that everything you have running in your user&amp;rsquo;s browser is hard to test or is even frontend code. Not everything running in the browser is hard to test or even frontend codeBecause a lot of business logic running in a browser or other client is so close to the UI, you may get the impression that it&amp;rsquo;s all hard to use TDD with. Tell me I&amp;rsquo;m wrong and show me the wayI love practicing TDD. I would love to be wrong about this, so please share your experiences below about how you have figured out how to do TDD with user interfaces that doesn&amp;rsquo;t end up with throwing away most code immediately.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;twenty-years-later-i-wrote-a-tetris-again-https-blog-levit-be-twenty-years-later-i-wrote-a-tetris-again&#34;&gt;&lt;a href=&#34;https://blog.levit.be/twenty-years-later-i-wrote-a-tetris-again/&#34;&gt; Twenty years later I wrote a Tetris&amp;hellip; again! &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Somewhere around 4am that night, after several hundred lines of Basic code, I had myself a fully working Tetris-like. It&amp;rsquo;s only a few days later that I realized I had written the same kind of program, twice, twenty years apart and in two different but somewhat similar languages. About the time it took: Surprisingly with improved tools and an extra 20 years experience, it took me about the same time this time around as it did 20 years ago. Have they been lying to us all these years telling us that with improved tools we are able to write code faster? From this experience I would say &amp;ldquo;Yes&amp;rdquo;. About the size of the code: the code I wrote this time is roughly one third of the size of my original code which probably means it has less bugs and is more maintainable. In shorter terms, the code I ended-up with in 2016 is way more re-usable than the one from 1996. Now that I&amp;rsquo;ve been rambling on and on about 2 different Tetris games coded 20 years apart, you probably want to see the code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;all-in-one-api-documentation-browser-with-offline-mode-and-instant-search-http-devdocs-io&#34;&gt;&lt;a href=&#34;http://devdocs.io&#34;&gt; All-in-one API documentation browser with offline mode and instant search &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;it-s-official-oracle-will-appeal-its-fair-use-loss-against-google-http-arstechnica-com-tech-policy-2016-10-its-official-oracle-will-appeal-its-fair-use-loss-against-google&#34;&gt;&lt;a href=&#34;http://arstechnica.com/tech-policy/2016/10/its-official-oracle-will-appeal-its-fair-use-loss-against-google/&#34;&gt; It’s official: Oracle will appeal its “fair use” loss against Google &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The massive Oracle v. Google litigation has entered a new phase, as Oracle filed papers yesterday saying it will appeal its loss on &amp;ldquo;Fair use&amp;rdquo; grounds to the US Court of Appeals for the Federal Circuit. For a brief recap of the case: after Oracle purchased Sun Microsystems and acquired the rights to Java, it sued Google in 2010, saying that Google infringed copyrights and patents related to Java. Oracle initially lost but had part of its case revived on appeal. The sole issue in the second trial was whether Google infringed the APIs in Java, which the appeals court held are copyrighted. Oracle&amp;rsquo;s appeal is no surprise, but it will be a long shot. Oracle&amp;rsquo;s post-trial motions, which the district court judge rejected, indicate the tack it might try to take on appeal. Unless Oracle pulls off a stunning move on appeal, its massive legal expenditures in this case will be for naught.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;go-now-has-sub-millisecond-gc-pause-times-https-groups-google-com-forum-m-topic-golang-dev-ab1sfeozg-8&#34;&gt;&lt;a href=&#34;https://groups.google.com/forum/m/#!topic/golang-dev/Ab1sFeoZg_8&#34;&gt; Go now has sub-millisecond GC pause times &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;None&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;what-s-more-distracting-than-a-noisy-co-worker-turns-out-not-much-http-www-npr-org-2016-10-26-498850659-what-s-more-distracting-than-a-noisy-coworker-not-much&#34;&gt;&lt;a href=&#34;http://www.npr.org/2016/10/26/498850659/what-s-more-distracting-than-a-noisy-coworker-not-much&#34;&gt; What&amp;rsquo;s More Distracting Than A Noisy Co-Worker? Turns Out, Not Much &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;According to workplace design expert Alan Hedge at Cornell, 74 percent of workers say they face &amp;ldquo;Many&amp;rdquo; instances of disturbances and distractions from noise. The University of California&amp;rsquo;s Center for the Built Environment has a study showing workers are happier when they are in enclosed offices and less likely to take sick days. It&amp;rsquo;s only months later, when he was moved to a new desk in an office reshuffling, that he realized just how much more work he accomplished without constant interruption. In a previous job, Dooley shared an office with a man who liked to eat frozen carrots and had the hacking cough of someone with chronic bronchitis. While employers worry about contagion and lost productivity of someone bringing an illness to work, they also have a legal obligation to accommodate employees who have an illness or a disability. Four years ago, the Social Security Administration reprimanded a worker for his &amp;ldquo;Excessive flatulence.&amp;rdquo; After numerous complaints and warnings, the agency charged him with &amp;ldquo;Conduct unbecoming a federal employee.&amp;rdquo; The employee claimed he had lactose intolerance, and after his union intervened, the reprimand was rescinded. The trend toward open offices and hard office furniture makes noise distraction worse, so adding carpet, drapes and upholstery can help.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;lesson-learned-from-running-a-local-meetup-http-andygrunwald-com-blog-lesson-learned-from-running-a-local-meetup&#34;&gt;&lt;a href=&#34;http://andygrunwald.com/blog/lesson-learned-from-running-a-local-meetup/&#34;&gt; Lesson learned from running a local meetup &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A good / usable location is important for the meetup and the location depends on the meetup content. If you a running your meetup in a small conference room with ~15 people you often don&amp;rsquo;t need this. Try to motivate people from your community and local meetup to get on stage for the first time. If your meetup is well known, sometimes speaker will contact you, because they knew that it is possible to test bigger conference talks at local usergroups and improve them later. Name of the meetup WiFi access Office / location rules Where are the toilets Announcements of other appointments like other meetups in the area conferences / hackathons near by your next meetup Speaker and topic of today If you offer a socialising after the talk or if the meetup ends directly. If you run a meetup or visit meetups on a regular basis, feel free to share your lessons learned in the comments. Found a bug in this article? Feel free to create a pull request at Lessons learned from running a local meetup at github.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>How to become an enterprise developer and other personal rants ?</title>
      <link>http://iszlai.github.io/post/how-to-become-an-enterprise-developer/</link>
      <pubDate>Wed, 05 Nov 2014 13:27:23 +0200</pubDate>
      
      <guid>http://iszlai.github.io/post/how-to-become-an-enterprise-developer/</guid>
      <description>&lt;p&gt;First of all this is a personal post with lot of questions, insecurities and rants. Really any answer reply&amp;rsquo;s, tweet, PM, email anything would be useful and help me at this point. But first let me give a bit of a background of how I got to this stage in the first place.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve studied programming since highscool all throughout University I had a CS major so I have/had the basics covered. While in Uni they hired me as a &amp;ldquo;Test automation engineer&amp;rdquo; but what I ended up doing was mostly manual testing with very little coding (or thinking by the way) &lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/qa.gif&#34; alt=&#34;alt text&#34; title=&#34;QA&#34; /&gt;
&lt;br/&gt;
with continuous promises of getting in the development side. Which never came, so one day almost after a year of getting fed up I decided I would move on.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;I moved to another city get a job at a respected international financial firm and went trough their graduate program. It was wonderful they really tried their best to teach us about all the low level intricate details of *nix systems and C/C++ differences and idioms and a short introductory to function side with a bit of Scala.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;After the program we where pre-placed in teams ,and although I always had more affinity for backend related task and technology someone decided I will do Flash/Flex development on a huge system but with the promise I&amp;rsquo;ll get to work the backend as well.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s been a year since and almost all I did was UI development and it really doesn&amp;rsquo;t suit me, while I rarely had the chance but everytime I could do any minor change on the Java backend I was really happy. Don&amp;rsquo;t get me wrong it was hard with virtually any experience with a 500k lines of code base.
&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/feel.gif&#34; alt=&#34;alt text&#34; title=&#34;Feel&#34; /&gt;
&lt;br/&gt;
 It was/is really hard to find way trough it. Since it is a 6 years+ old project most of the original team has moved on and any bit of documentation outdated.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;I did my best to learn the theory and I can say fairly confident that I know how dependency injection works, I can use Spring and can modify the components based on the code that&amp;rsquo;s already present. I know how ORMs work and even wrote a toy one for myself at home just to get a deeper understanding. I read a lot about and in theory know and understand design patterns.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;But my problem is that certain thing just don&amp;rsquo;t click in my mind. It&amp;rsquo;s mostly the why&amp;rsquo;s. Why are there factories everywhere, why are there builders upon builder, things like AbstractProxyBeanFactory and the like make me hold my head and scream. Why are things like VisitorAdapter (just like this ) defined. Why and who thought SOAP was a good a idea to communicate with integration partners.
&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/legacy.gif&#34; alt=&#34;alt text&#34; title=&#34;Knowledge&#34; /&gt;
&lt;br/&gt;
 I find my self lost with no guidance at all, I rarely get to write code in the backend and feel that my home pet projects are not enough to learn certain things like this.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;So my questions are as follows:
How to learn ,to understand and to get better at this type of code? I thought about open source but find it really heard to contribute to anything meaningfull. It&amp;rsquo;s either also huge without anybody to ask, or I&amp;rsquo;ve read here or there that they are impatient with new people, or all they have time for is a readily made pull request.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;My final question is on a related ,topic is should a try to master Java more or focus on more new and trendy stuff ?Thing is I really feel like this &lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/aprox.gif&#34; alt=&#34;alt text&#34; title=&#34;Knowledge&#34; /&gt;
&lt;br/&gt;
,and feel like I really should try to focus on one thing just don&amp;rsquo;t really know on what.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Eclipse Survival Guide</title>
      <link>http://iszlai.github.io/post/eclipse-survival-guide/</link>
      <pubDate>Sat, 27 Sep 2014 13:27:23 +0200</pubDate>
      
      <guid>http://iszlai.github.io/post/eclipse-survival-guide/</guid>
      <description>

&lt;p&gt;After starting with Java, Scala, C++ or any other language you probably start using an ide, well there are many out there for everyones personal preferences I&amp;rsquo;ll mainly focus on Eclipse.It&amp;rsquo;s an Open Source IDE, mostly provided in Java, but it supports other the development languages by being extended with plug-ins.&lt;/p&gt;

&lt;h2 id=&#34;turn-on-line-numbers&#34;&gt;Turn on line numbers&lt;/h2&gt;

&lt;p&gt;Seems trivial but it&amp;rsquo;s really useful when you work on a team or want to find something at a specific line. All you have to do is right click the gutter and choose &lt;strong&gt;Show line numbers&lt;/strong&gt;. It&amp;rsquo;s a simple tip but often useful and you only have to do it once.
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/lineNum.gif&#34; alt=&#34;alt text&#34; title=&#34;Show line numbers&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;go-to-line&#34;&gt;Go to line&lt;/h2&gt;

&lt;p&gt;Similarly you see a line number inside a log regarding an Exception all you do is fire up go to line using &lt;strong&gt;Ctrl+L&lt;/strong&gt; type the line number and hit enter.
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/gotoLine.gif&#34; alt=&#34;alt text&#34; title=&#34;Go to line&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;settings-search&#34;&gt;Settings search&lt;/h2&gt;

&lt;p&gt;Eclipse is a huge platform and is continually growing it&amp;rsquo;s really hard to find keep in mind where you can find the appropriate settings. Luckily theres a search for the settings.
Let&amp;rsquo;s try to find the JRE settings as it&amp;rsquo;s commonly needed. So all you do is go to settings which can be found at &lt;strong&gt;Window&lt;/strong&gt; &amp;gt;&amp;gt; &lt;strong&gt;Preferences&lt;/strong&gt; and type what you are searching for like &lt;strong&gt;JRE&lt;/strong&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/settingsSearch.gif&#34; alt=&#34;alt text&#34; title=&#34;Settings&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;type-hierarchy&#34;&gt;Type hierarchy&lt;/h2&gt;

&lt;p&gt;Ever wanted to know the whole supertype tree of a class of a class or to find the abstract type ? Using supertype hierarchy with &lt;strong&gt;Ctrl&lt;/strong&gt;+&lt;strong&gt;T&lt;/strong&gt; .
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/supertype.gif&#34; alt=&#34;alt text&#34; title=&#34;Supertype&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;comment-out-a-block&#34;&gt;Comment out a block&lt;/h2&gt;

&lt;p&gt;When in a hurry you want to check something out, and don&amp;rsquo;t want the change to last, you could just easily comment out a block using &lt;strong&gt;Ctrl&lt;/strong&gt;+&lt;strong&gt;Shift&lt;/strong&gt;+&lt;strong&gt;C&lt;/strong&gt;.
After you&amp;rsquo;re done repeat the same to undo it. This is also available for majority of languages so don&amp;rsquo;t have to type &lt;code&gt;&amp;lt;!-- --&amp;gt;&lt;/code&gt; in xml ever again.Side note never leave commented out code blocks in code, it&amp;rsquo;s messy and it makes the code harder to read, and there really is no reason to keep it anyway thats what the source control is for.
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/comment.gif&#34; alt=&#34;alt text&#34; title=&#34;Comment&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;extract-method&#34;&gt;Extract method&lt;/h2&gt;

&lt;p&gt;While refactoring you find a huge chunk of code that really should be a a method. So you could just create a method copy the chunk out, figure out the parameters and make it work. Or you could the IDE do most the work and just check the result. All you do is &lt;strong&gt;Alt&lt;/strong&gt;+&lt;strong&gt;Shift&lt;/strong&gt;+&lt;strong&gt;M&lt;/strong&gt; and give a method name.As you can see eclipse really does a pretty fine job on it&amp;rsquo;s own and saves you a lot of time.
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/extract.gif&#34; alt=&#34;alt text&#34; title=&#34;Extract method&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;delete-a-line&#34;&gt;Delete a line&lt;/h2&gt;

&lt;p&gt;Don&amp;rsquo;t you just have it when there are empty lines in the wrong place ? Using &lt;strong&gt;Ctrl&lt;/strong&gt;+&lt;strong&gt;D&lt;/strong&gt; you delete the current line, it&amp;rsquo;s really like Vim&amp;rsquo;s DD command if that ain&amp;rsquo;t a reason to love it, i don&amp;rsquo;t know what is.
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/delete.gif&#34; alt=&#34;alt text&#34; title=&#34;Delete a line&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;find-references&#34;&gt;Find references&lt;/h2&gt;

&lt;p&gt;You want to change something but you aren&amp;rsquo;t sure if it&amp;rsquo;s used by anything else or what else might be affected. In this case all you do is &lt;strong&gt;Right-click&lt;/strong&gt;+&lt;strong&gt;References&lt;/strong&gt;+&lt;strong&gt;scope&lt;/strong&gt; (like workspace, project, etc)
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/refferences.gif&#34; alt=&#34;alt text&#34; title=&#34;References&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;generate-code&#34;&gt;Generate code&lt;/h2&gt;

&lt;p&gt;Often you find yourself writing a bit boiler plate code like getters/setters, toString, simple constructors.All this can be done by eclipse for you in a pretty find grained matter. All you do is &lt;strong&gt;Right-click&lt;/strong&gt;+&lt;strong&gt;Source&lt;/strong&gt;+what code you want to generate.
You can choose things like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Getters and Setters&lt;/li&gt;
&lt;li&gt;Delegate methods&lt;/li&gt;
&lt;li&gt;hashCode() and equals()&lt;/li&gt;
&lt;li&gt;toString()&lt;/li&gt;
&lt;li&gt;Constructors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This bit can make you really productive but also please be careful don&amp;rsquo;t let the IDE make design decisions for you if you don&amp;rsquo;t need it don&amp;rsquo;t add it it will be just a cluttered code.
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/generate.gif&#34; alt=&#34;alt text&#34; title=&#34;Generate&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;open-resource&#34;&gt;Open resource&lt;/h2&gt;

&lt;p&gt;You are working on a project with hundreds of files packages and a complex structure if you have sort of memory about what a file is called you can try opening it with open resources .To use it all you need is &lt;strong&gt;Ctrl&lt;/strong&gt;+&lt;strong&gt;Shift&lt;/strong&gt;+&lt;strong&gt;R&lt;/strong&gt; ,and name in which you can also use &lt;code&gt;?&lt;/code&gt; for any character match and &lt;code&gt;*&lt;/code&gt; any string match
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/openRes.gif&#34; alt=&#34;alt text&#34; title=&#34;Open resources&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;open-declaration-implementation&#34;&gt;Open declaration/implementation&lt;/h2&gt;

&lt;p&gt;When you see a method or an object and you would like to know where it&amp;rsquo;s declared or where it&amp;rsquo;s implemented you just hold down &lt;strong&gt;Ctrl&lt;/strong&gt; + &lt;strong&gt;click&lt;/strong&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/openDec.gif&#34; alt=&#34;alt text&#34; title=&#34;Open declaration/implementation&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;search&#34;&gt;Search&lt;/h2&gt;

&lt;p&gt;The search in eclipse is really powerful and has many functionalities to cover all of them it would take quite a lot.The two main things I would like to point out are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Search and replace in file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The typical file search and replace theres not a lot to talk about it. All you do is &lt;strong&gt;Ctrl&lt;/strong&gt;+&lt;strong&gt;F&lt;/strong&gt; and then the usual functionality you would expect is there.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Search workspace&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A more powerful search with filtering capabilities on file type and search scope.I couldn&amp;rsquo;t live without it on a windows box it&amp;rsquo;s almost as good as &lt;code&gt;grep&lt;/code&gt; .To use it all you need is &lt;strong&gt;Ctrl&lt;/strong&gt; + &lt;strong&gt;H&lt;/strong&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;img src=&#34;http://iszlai.github.io/images/searchH.gif&#34; alt=&#34;alt text&#34; title=&#34;Search&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>http://iszlai.github.io/post/about-me/</link>
      <pubDate>Fri, 08 Aug 2014 20:53:07 -0400</pubDate>
      
      <guid>http://iszlai.github.io/post/about-me/</guid>
      <description>

&lt;p&gt;My primary interest is to learn how to design software systems, so as to maximize the productivity of development teams. In doing this I try to look at current technological landscape and investigate software with good design.&lt;/p&gt;

&lt;h2 id=&#34;history&#34;&gt;History&lt;/h2&gt;

&lt;p&gt;Grew up in Marosvasarhely, Romania when to Babeş-Bolyai University
Faculty of Mathematics and Computer Science. My dissertation was about JavaScript based grid computing. During the time I was an intern at a mobile development company where I did Android development and have worked at an outsource firm where I did test automation. After graduating a moved to Budapest, Hungary where I started to work at a leading financial institution, trough which I had a chance to learn at the international offices in New York and London.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>